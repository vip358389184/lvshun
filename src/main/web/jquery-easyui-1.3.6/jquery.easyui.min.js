(function(a) {
	a.parser = {
		auto: !0,
		onComplete: function(a) {},
		plugins: ["draggable", "droppable", "resizable", "pagination", "tooltip", "linkbutton", "menu", "menubutton", "splitbutton", "progressbar", "tree", "combobox", "combotree", "combogrid", "numberbox", "validatebox", "searchbox", "numberspinner", "timespinner", "calendar", "datebox", "datetimebox", "slider", "layout", "panel", "datagrid", "propertygrid", "treegrid", "tabs", "accordion", "window", "dialog"],
		parse: function(b) {
			var c = [];
			for (var d = 0; d < a.parser.plugins.length; d++) {
				var e = a.parser.plugins[d],
				f = a(".easyui-" + e, b);
				f.length && (f[e] ? f[e]() : c.push({
					name: e,
					jq: f
				}))
			}
			if (c.length && window.easyloader) {
				var g = [];
				for (var d = 0; d < c.length; d++) g.push(c[d].name);
				easyloader.load(g,
				function() {
					for (var d = 0; d < c.length; d++) {
						var e = c[d].name,
						f = c[d].jq;
						f[e]()
					}
					a.parser.onComplete.call(a.parser, b)
				})
			} else a.parser.onComplete.call(a.parser, b)
		},
		parseOptions: function(b, c) {
			var d = a(b),
			e = {},
			f = a.trim(d.attr("data-options"));
			f && (f.substring(0, 1) != "{" && (f = "{" + f + "}"), e = (new Function("return " + f))());
			if (c) {
				var g = {};
				for (var h = 0; h < c.length; h++) {
					var i = c[h];
					if (typeof i == "string") i == "width" || i == "height" || i == "left" || i == "top" ? g[i] = parseInt(b.style[i]) || undefined: g[i] = d.attr(i);
					else for (var j in i) {
						var k = i[j];
						k == "boolean" ? g[j] = d.attr(j) ? d.attr(j) == "true": undefined: k == "number" && (g[j] = d.attr(j) == "0" ? 0 : parseFloat(d.attr(j)) || undefined)
					}
				}
				a.extend(e, g)
			}
			return e
		}
	},
	a(function() {
		var b = a('<div style="position:absolute;top:-1000px;width:100px;height:100px;padding:5px"></div>').appendTo("body");
		b.width(100),
		a._boxModel = parseInt(b.width()) == 100,
		b.remove(),
		!window.easyloader && a.parser.auto && a.parser.parse()
	}),
	a.fn._outerWidth = function(b) {
		return b == undefined ? this[0] == window ? this.width() || document.body.clientWidth: this.outerWidth() || 0 : this.each(function() {
			a._boxModel ? a(this).width(b - (a(this).outerWidth() - a(this).width())) : a(this).width(b)
		})
	},
	a.fn._outerHeight = function(b) {
		return b == undefined ? this[0] == window ? this.height() || document.body.clientHeight: this.outerHeight() || 0 : this.each(function() {
			a._boxModel ? a(this).height(b - (a(this).outerHeight() - a(this).height())) : a(this).height(b)
		})
	},
	a.fn._scrollLeft = function(b) {
		return b == undefined ? this.scrollLeft() : this.each(function() {
			a(this).scrollLeft(b)
		})
	},
	a.fn._propAttr = a.fn.prop || a.fn.attr,
	a.fn._fit = function(b) {
		b = b == undefined ? !0 : b;
		var c = this[0],
		d = c.tagName == "BODY" ? c: this.parent()[0],
		e = d.fcount || 0;
		return b ? c.fitted || (c.fitted = !0, d.fcount = e + 1, a(d).addClass("panel-noscroll"), d.tagName == "BODY" && a("html").addClass("panel-fit")) : c.fitted && (c.fitted = !1, d.fcount = e - 1, d.fcount == 0 && (a(d).removeClass("panel-noscroll"), d.tagName == "BODY" && a("html").removeClass("panel-fit"))),
		{
			width: a(d).width(),
			height: a(d).height()
		}
	}
})(jQuery),
function(a) {
	function e(c) {
		if (c.touches.length != 1) return;
		d ? (clearTimeout(dblClickTimer), d = !1, h(c, "dblclick")) : (d = !0, dblClickTimer = setTimeout(function() {
			d = !1
		},
		500)),
		b = setTimeout(function() {
			h(c, "contextmenu", 3)
		},
		1e3),
		h(c, "mousedown"),
		(a.fn.draggable.isDragging || a.fn.resizable.isResizing) && c.preventDefault()
	}
	function f(c) {
		if (c.touches.length != 1) return;
		b && clearTimeout(b),
		h(c, "mousemove"),
		(a.fn.draggable.isDragging || a.fn.resizable.isResizing) && c.preventDefault()
	}
	function g(c) {
		b && clearTimeout(b),
		h(c, "mouseup"),
		(a.fn.draggable.isDragging || a.fn.resizable.isResizing) && c.preventDefault()
	}
	function h(b, c, d) {
		var e = new a.Event(c);
		e.pageX = b.changedTouches[0].pageX,
		e.pageY = b.changedTouches[0].pageY,
		e.which = d || 1,
		a(b.target).trigger(e)
	}
	var b = null,
	c = null,
	d = !1;
	document.addEventListener && (document.addEventListener("touchstart", e, !0), document.addEventListener("touchmove", f, !0), document.addEventListener("touchend", g, !0))
} (jQuery),
function(a) {
	function b(b) {
		var c = a.data(b.data.target, "draggable"),
		d = c.options,
		e = c.proxy,
		f = b.data,
		g = f.startLeft + b.pageX - f.startX,
		h = f.startTop + b.pageY - f.startY;
		e && (e.parent()[0] == document.body ? (d.deltaX != null && d.deltaX != undefined ? g = b.pageX + d.deltaX: g = b.pageX - b.data.offsetWidth, d.deltaY != null && d.deltaY != undefined ? h = b.pageY + d.deltaY: h = b.pageY - b.data.offsetHeight) : (d.deltaX != null && d.deltaX != undefined && (g += b.data.offsetWidth + d.deltaX), d.deltaY != null && d.deltaY != undefined && (h += b.data.offsetHeight + d.deltaY))),
		b.data.parent != document.body && (g += a(b.data.parent).scrollLeft(), h += a(b.data.parent).scrollTop()),
		d.axis == "h" ? f.left = g: d.axis == "v" ? f.top = h: (f.left = g, f.top = h)
	}
	function c(b) {
		var c = a.data(b.data.target, "draggable"),
		d = c.options,
		e = c.proxy;
		e || (e = a(b.data.target)),
		e.css({
			left: b.data.left,
			top: b.data.top
		}),
		a("body").css("cursor", d.cursor)
	}
	function d(d) {
		a.fn.draggable.isDragging = !0;
		var e = a.data(d.data.target, "draggable"),
		f = e.options,
		g = a(".droppable").filter(function() {
			return d.data.target != this
		}).filter(function() {
			var b = a.data(this, "droppable").options.accept;
			return b ? a(b).filter(function() {
				return this == d.data.target
			}).length > 0 : !0
		});
		e.droppables = g;
		var h = e.proxy;
		return h || (f.proxy ? (f.proxy == "clone" ? h = a(d.data.target).clone().insertAfter(d.data.target) : h = f.proxy.call(d.data.target, d.data.target), e.proxy = h) : h = a(d.data.target)),
		h.css("position", "absolute"),
		b(d),
		c(d),
		f.onStartDrag.call(d.data.target, d),
		!1
	}
	function e(d) {
		var e = a.data(d.data.target, "draggable");
		b(d),
		e.options.onDrag.call(d.data.target, d) != 0 && c(d);
		var f = d.data.target;
		return e.droppables.each(function() {
			var b = a(this);
			if (b.droppable("options").disabled) return;
			var c = b.offset();
			d.pageX > c.left && d.pageX < c.left + b.outerWidth() && d.pageY > c.top && d.pageY < c.top + b.outerHeight() ? (this.entered || (a(this).trigger("_dragenter", [f]), this.entered = !0), a(this).trigger("_dragover", [f])) : this.entered && (a(this).trigger("_dragleave", [f]), this.entered = !1)
		}),
		!1
	}
	function f(b) {
		function i() {
			d && d.remove(),
			c.proxy = null
		}
		function j() {
			var d = !1;
			return c.droppables.each(function() {
				var c = a(this);
				if (c.droppable("options").disabled) return;
				var e = c.offset();
				if (b.pageX > e.left && b.pageX < e.left + c.outerWidth() && b.pageY > e.top && b.pageY < e.top + c.outerHeight()) return f.revert && a(b.data.target).css({
					position: b.data.startPosition,
					left: b.data.startLeft,
					top: b.data.startTop
				}),
				a(this).trigger("_drop", [b.data.target]),
				i(),
				d = !0,
				this.entered = !1,
				!1
			}),
			!d && !f.revert && i(),
			d
		}
		a.fn.draggable.isDragging = !1,
		e(b);
		var c = a.data(b.data.target, "draggable"),
		d = c.proxy,
		f = c.options;
		if (f.revert) if (j() == 1) a(b.data.target).css({
			position: b.data.startPosition,
			left: b.data.startLeft,
			top: b.data.startTop
		});
		else if (d) {
			var g, h;
			d.parent()[0] == document.body ? (g = b.data.startX - b.data.offsetWidth, h = b.data.startY - b.data.offsetHeight) : (g = b.data.startLeft, h = b.data.startTop),
			d.animate({
				left: g,
				top: h
			},
			function() {
				i()
			})
		} else a(b.data.target).animate({
			left: b.data.startLeft,
			top: b.data.startTop
		},
		function() {
			a(b.data.target).css("position", b.data.startPosition)
		});
		else a(b.data.target).css({
			position: "absolute",
			left: b.data.left,
			top: b.data.top
		}),
		j();
		return f.onStopDrag.call(b.data.target, b),
		a(document).unbind(".draggable"),
		setTimeout(function() {
			a("body").css("cursor", "")
		},
		100),
		!1
	}
	a.fn.draggable = function(b, c) {
		return typeof b == "string" ? a.fn.draggable.methods[b](this, c) : this.each(function() {
			function i(b) {
				var c = a.data(b.data.target, "draggable"),
				d = c.handle,
				e = a(d).offset(),
				f = a(d).outerWidth(),
				g = a(d).outerHeight(),
				h = b.pageY - e.top,
				i = e.left + f - b.pageX,
				j = e.top + g - b.pageY,
				k = b.pageX - e.left;
				return Math.min(h, i, j, k) > c.options.edge
			}
			var c, g = a.data(this, "draggable");
			g ? (g.handle.unbind(".draggable"), c = a.extend(g.options, b)) : c = a.extend({},
			a.fn.draggable.defaults, a.fn.draggable.parseOptions(this), b || {});
			var h = c.handle ? typeof c.handle == "string" ? a(c.handle, this) : c.handle: a(this);
			a.data(this, "draggable", {
				options: c,
				handle: h
			});
			if (c.disabled) {
				a(this).css("cursor", "");
				return
			}
			h.unbind(".draggable").bind("mousemove.draggable", {
				target: this
			},
			function(b) {
				if (a.fn.draggable.isDragging) return;
				var c = a.data(b.data.target, "draggable").options;
				i(b) ? a(this).css("cursor", c.cursor) : a(this).css("cursor", "")
			}).bind("mouseleave.draggable", {
				target: this
			},
			function(b) {
				a(this).css("cursor", "")
			}).bind("mousedown.draggable", {
				target: this
			},
			function(b) {
				if (i(b) == 0) return;
				a(this).css("cursor", "");
				var c = a(b.data.target).position(),
				g = a(b.data.target).offset(),
				h = {
					startPosition: a(b.data.target).css("position"),
					startLeft: c.left,
					startTop: c.top,
					left: c.left,
					top: c.top,
					startX: b.pageX,
					startY: b.pageY,
					offsetWidth: b.pageX - g.left,
					offsetHeight: b.pageY - g.top,
					target: b.data.target,
					parent: a(b.data.target).parent()[0]
				};
				a.extend(b.data, h);
				var j = a.data(b.data.target, "draggable").options;
				if (j.onBeforeDrag.call(b.data.target, b) == 0) return;
				a(document).bind("mousedown.draggable", b.data, d),
				a(document).bind("mousemove.draggable", b.data, e),
				a(document).bind("mouseup.draggable", b.data, f)
			})
		})
	},
	a.fn.draggable.methods = {
		options: function(b) {
			return a.data(b[0], "draggable").options
		},
		proxy: function(b) {
			return a.data(b[0], "draggable").proxy
		},
		enable: function(b) {
			return b.each(function() {
				a(this).draggable({
					disabled: !1
				})
			})
		},
		disable: function(b) {
			return b.each(function() {
				a(this).draggable({
					disabled: !0
				})
			})
		}
	},
	a.fn.draggable.parseOptions = function(b) {
		var c = a(b);
		return a.extend({},
		a.parser.parseOptions(b, ["cursor", "handle", "axis", {
			revert: "boolean",
			deltaX: "number",
			deltaY: "number",
			edge: "number"
		}]), {
			disabled: c.attr("disabled") ? !0 : undefined
		})
	},
	a.fn.draggable.defaults = {
		proxy: null,
		revert: !1,
		cursor: "move",
		deltaX: null,
		deltaY: null,
		handle: null,
		disabled: !1,
		edge: 0,
		axis: null,
		onBeforeDrag: function(a) {},
		onStartDrag: function(a) {},
		onDrag: function(a) {},
		onStopDrag: function(a) {}
	},
	a.fn.draggable.isDragging = !1
} (jQuery),
function(a) {
	function b(b) {
		a(b).addClass("droppable"),
		a(b).bind("_dragenter",
		function(c, d) {
			a.data(b, "droppable").options.onDragEnter.apply(b, [c, d])
		}),
		a(b).bind("_dragleave",
		function(c, d) {
			a.data(b, "droppable").options.onDragLeave.apply(b, [c, d])
		}),
		a(b).bind("_dragover",
		function(c, d) {
			a.data(b, "droppable").options.onDragOver.apply(b, [c, d])
		}),
		a(b).bind("_drop",
		function(c, d) {
			a.data(b, "droppable").options.onDrop.apply(b, [c, d])
		})
	}
	a.fn.droppable = function(c, d) {
		return typeof c == "string" ? a.fn.droppable.methods[c](this, d) : (c = c || {},
		this.each(function() {
			var d = a.data(this, "droppable");
			d ? a.extend(d.options, c) : (b(this), a.data(this, "droppable", {
				options: a.extend({},
				a.fn.droppable.defaults, a.fn.droppable.parseOptions(this), c)
			}))
		}))
	},
	a.fn.droppable.methods = {
		options: function(b) {
			return a.data(b[0], "droppable").options
		},
		enable: function(b) {
			return b.each(function() {
				a(this).droppable({
					disabled: !1
				})
			})
		},
		disable: function(b) {
			return b.each(function() {
				a(this).droppable({
					disabled: !0
				})
			})
		}
	},
	a.fn.droppable.parseOptions = function(b) {
		var c = a(b);
		return a.extend({},
		a.parser.parseOptions(b, ["accept"]), {
			disabled: c.attr("disabled") ? !0 : undefined
		})
	},
	a.fn.droppable.defaults = {
		accept: null,
		disabled: !1,
		onDragEnter: function(a, b) {},
		onDragOver: function(a, b) {},
		onDragLeave: function(a, b) {},
		onDrop: function(a, b) {}
	}
} (jQuery),
function(a) {
	a.fn.resizable = function(b, c) {
		function d(b) {
			var c = b.data,
			d = a.data(c.target, "resizable").options;
			if (c.dir.indexOf("e") != -1) {
				var e = c.startWidth + b.pageX - c.startX;
				e = Math.min(Math.max(e, d.minWidth), d.maxWidth),
				c.width = e
			}
			if (c.dir.indexOf("s") != -1) {
				var f = c.startHeight + b.pageY - c.startY;
				f = Math.min(Math.max(f, d.minHeight), d.maxHeight),
				c.height = f
			}
			if (c.dir.indexOf("w") != -1) {
				var e = c.startWidth - b.pageX + c.startX;
				e = Math.min(Math.max(e, d.minWidth), d.maxWidth),
				c.width = e,
				c.left = c.startLeft + c.startWidth - c.width
			}
			if (c.dir.indexOf("n") != -1) {
				var f = c.startHeight - b.pageY + c.startY;
				f = Math.min(Math.max(f, d.minHeight), d.maxHeight),
				c.height = f,
				c.top = c.startTop + c.startHeight - c.height
			}
		}
		function e(b) {
			var c = b.data,
			d = a(c.target);
			d.css({
				left: c.left,
				top: c.top
			}),
			d.outerWidth() != c.width && d._outerWidth(c.width),
			d.outerHeight() != c.height && d._outerHeight(c.height)
		}
		function f(b) {
			return a.fn.resizable.isResizing = !0,
			a.data(b.data.target, "resizable").options.onStartResize.call(b.data.target, b),
			!1
		}
		function g(b) {
			return d(b),
			a.data(b.data.target, "resizable").options.onResize.call(b.data.target, b) != 0 && e(b),
			!1
		}
		function h(b) {
			return a.fn.resizable.isResizing = !1,
			d(b, !0),
			e(b),
			a.data(b.data.target, "resizable").options.onStopResize.call(b.data.target, b),
			a(document).unbind(".resizable"),
			a("body").css("cursor", ""),
			!1
		}
		return typeof b == "string" ? a.fn.resizable.methods[b](this, c) : this.each(function() {
			function e(b) {
				var d = a(b.data.target),
				e = "",
				f = d.offset(),
				g = d.outerWidth(),
				h = d.outerHeight(),
				i = c.edge;
				b.pageY > f.top && b.pageY < f.top + i ? e += "n": b.pageY < f.top + h && b.pageY > f.top + h - i && (e += "s"),
				b.pageX > f.left && b.pageX < f.left + i ? e += "w": b.pageX < f.left + g && b.pageX > f.left + g - i && (e += "e");
				var j = c.handles.split(",");
				for (var k = 0; k < j.length; k++) {
					var l = j[k].replace(/(^\s*)|(\s*$)/g, "");
					if (l == "all" || l == e) return e
				}
				return ""
			}
			var c = null,
			d = a.data(this, "resizable");
			d ? (a(this).unbind(".resizable"), c = a.extend(d.options, b || {})) : (c = a.extend({},
			a.fn.resizable.defaults, a.fn.resizable.parseOptions(this), b || {}), a.data(this, "resizable", {
				options: c
			}));
			if (c.disabled == 1) return;
			a(this).bind("mousemove.resizable", {
				target: this
			},
			function(b) {
				if (a.fn.resizable.isResizing) return;
				var c = e(b);
				c == "" ? a(b.data.target).css("cursor", "") : a(b.data.target).css("cursor", c + "-resize")
			}).bind("mouseleave.resizable", {
				target: this
			},
			function(b) {
				a(b.data.target).css("cursor", "")
			}).bind("mousedown.resizable", {
				target: this
			},
			function(b) {
				function d(c) {
					var d = parseInt(a(b.data.target).css(c));
					return isNaN(d) ? 0 : d
				}
				var c = e(b);
				if (c == "") return;
				var i = {
					target: b.data.target,
					dir: c,
					startLeft: d("left"),
					startTop: d("top"),
					left: d("left"),
					top: d("top"),
					startX: b.pageX,
					startY: b.pageY,
					startWidth: a(b.data.target).outerWidth(),
					startHeight: a(b.data.target).outerHeight(),
					width: a(b.data.target).outerWidth(),
					height: a(b.data.target).outerHeight(),
					deltaWidth: a(b.data.target).outerWidth() - a(b.data.target).width(),
					deltaHeight: a(b.data.target).outerHeight() - a(b.data.target).height()
				};
				a(document).bind("mousedown.resizable", i, f),
				a(document).bind("mousemove.resizable", i, g),
				a(document).bind("mouseup.resizable", i, h),
				a("body").css("cursor", c + "-resize")
			})
		})
	},
	a.fn.resizable.methods = {
		options: function(b) {
			return a.data(b[0], "resizable").options
		},
		enable: function(b) {
			return b.each(function() {
				a(this).resizable({
					disabled: !1
				})
			})
		},
		disable: function(b) {
			return b.each(function() {
				a(this).resizable({
					disabled: !0
				})
			})
		}
	},
	a.fn.resizable.parseOptions = function(b) {
		var c = a(b);
		return a.extend({},
		a.parser.parseOptions(b, ["handles", {
			minWidth: "number",
			minHeight: "number",
			maxWidth: "number",
			maxHeight: "number",
			edge: "number"
		}]), {
			disabled: c.attr("disabled") ? !0 : undefined
		})
	},
	a.fn.resizable.defaults = {
		disabled: !1,
		handles: "n, e, s, w, ne, se, sw, nw, all",
		minWidth: 10,
		minHeight: 10,
		maxWidth: 1e4,
		maxHeight: 1e4,
		edge: 5,
		onStartResize: function(a) {},
		onResize: function(a) {},
		onStopResize: function(a) {}
	},
	a.fn.resizable.isResizing = !1
} (jQuery),
function(a) {
	function b(b) {
		var e = a.data(b, "linkbutton").options,
		f = a(b).empty();
		f.addClass("l-btn").removeClass("l-btn-plain l-btn-selected l-btn-plain-selected"),
		f.removeClass("l-btn-small l-btn-medium l-btn-large").addClass("l-btn-" + e.size),
		e.plain && f.addClass("l-btn-plain"),
		e.selected && f.addClass(e.plain ? "l-btn-selected l-btn-plain-selected": "l-btn-selected"),
		f.attr("group", e.group || ""),
		f.attr("id", e.id || "");
		var g = a('<span class="l-btn-left"></span>').appendTo(f);
		e.text ? a('<span class="l-btn-text"></span>').html(e.text).appendTo(g) : a('<span class="l-btn-text l-btn-empty">&nbsp;</span>').appendTo(g),
		e.iconCls && (a('<span class="l-btn-icon">&nbsp;</span>').addClass(e.iconCls).appendTo(g), g.addClass("l-btn-icon-" + e.iconAlign)),
		f.unbind(".linkbutton").bind("focus.linkbutton",
		function() {
			e.disabled || a(this).addClass("l-btn-focus")
		}).bind("blur.linkbutton",
		function() {
			a(this).removeClass("l-btn-focus")
		}).bind("click.linkbutton",
		function() {
			return e.disabled || (e.toggle && (e.selected ? a(this).linkbutton("unselect") : a(this).linkbutton("select")), e.onClick.call(this)),
			!1
		}),
		c(b, e.selected),
		d(b, e.disabled)
	}
	function c(b, c) {
		var d = a.data(b, "linkbutton").options;
		c ? (d.group && a('a.l-btn[group="' + d.group + '"]').each(function() {
			var b = a(this).linkbutton("options");
			b.toggle && (a(this).removeClass("l-btn-selected l-btn-plain-selected"), b.selected = !1)
		}), a(b).addClass(d.plain ? "l-btn-selected l-btn-plain-selected": "l-btn-selected"), d.selected = !0) : d.group || (a(b).removeClass("l-btn-selected l-btn-plain-selected"), d.selected = !1)
	}
	function d(b, c) {
		var d = a.data(b, "linkbutton"),
		e = d.options;
		a(b).removeClass("l-btn-disabled l-btn-plain-disabled");
		if (c) {
			e.disabled = !0;
			var f = a(b).attr("href");
			f && (d.href = f, a(b).attr("href", "javascript:void(0)")),
			b.onclick && (d.onclick = b.onclick, b.onclick = null),
			e.plain ? a(b).addClass("l-btn-disabled l-btn-plain-disabled") : a(b).addClass("l-btn-disabled")
		} else e.disabled = !1,
		d.href && a(b).attr("href", d.href),
		d.onclick && (b.onclick = d.onclick)
	}
	a.fn.linkbutton = function(c, d) {
		return typeof c == "string" ? a.fn.linkbutton.methods[c](this, d) : (c = c || {},
		this.each(function() {
			var d = a.data(this, "linkbutton");
			d ? a.extend(d.options, c) : (a.data(this, "linkbutton", {
				options: a.extend({},
				a.fn.linkbutton.defaults, a.fn.linkbutton.parseOptions(this), c)
			}), a(this).removeAttr("disabled")),
			b(this)
		}))
	},
	a.fn.linkbutton.methods = {
		options: function(b) {
			return a.data(b[0], "linkbutton").options
		},
		enable: function(a) {
			return a.each(function() {
				d(this, !1)
			})
		},
		disable: function(a) {
			return a.each(function() {
				d(this, !0)
			})
		},
		select: function(a) {
			return a.each(function() {
				c(this, !0)
			})
		},
		unselect: function(a) {
			return a.each(function() {
				c(this, !1)
			})
		}
	},
	a.fn.linkbutton.parseOptions = function(b) {
		var c = a(b);
		return a.extend({},
		a.parser.parseOptions(b, ["id", "iconCls", "iconAlign", "group", "size", {
			plain: "boolean",
			toggle: "boolean",
			selected: "boolean"
		}]), {
			disabled: c.attr("disabled") ? !0 : undefined,
			text: a.trim(c.html()),
			iconCls: c.attr("icon") || c.attr("iconCls")
		})
	},
	a.fn.linkbutton.defaults = {
		id: null,
		disabled: !1,
		toggle: !1,
		selected: !1,
		group: null,
		plain: !1,
		text: "",
		iconCls: null,
		iconAlign: "left",
		size: "small",
		onClick: function() {}
	}
} (jQuery),
function($) {
	function _81(_82) {
		function _89(a) {
			var b = _84.nav[a],
			c = $('<a href="javascript:void(0)"></a>').appendTo(tr);
			return c.wrap("<td></td>"),
			c.linkbutton({
				iconCls: b.iconCls,
				plain: !0
			}).unbind(".pagination").bind("click.pagination",
			function() {
				b.handler.call(_82)
			}),
			c
		}
		function _86(a, b) {
			var c = $.inArray(b, a);
			return c >= 0 && a.splice(c, 1),
			a
		}
		var _83 = $.data(_82, "pagination"),
		_84 = _83.options,
		bb = _83.bb = {},
		_85 = $(_82).addClass("pagination").html('<table cellspacing="0" cellpadding="0" border="0"><tr></tr></table>'),
		tr = _85.find("tr"),
		aa = $.extend([], _84.layout);
		_84.showPageList || _86(aa, "list"),
		_84.showRefresh || _86(aa, "refresh"),
		aa[0] == "sep" && aa.shift(),
		aa[aa.length - 1] == "sep" && aa.pop();
		for (var _87 = 0; _87 < aa.length; _87++) {
			var _88 = aa[_87];
			if (_88 == "list") {
				var ps = $('<select class="pagination-page-list"></select>');
				ps.bind("change",
				function() {
					_84.pageSize = parseInt($(this).val()),
					_84.onChangePageSize.call(_82, _84.pageSize),
					_8e(_82, _84.pageNumber)
				});
				for (var i = 0; i < _84.pageList.length; i++) $("<option></option>").text(_84.pageList[i]).appendTo(ps);
				$("<td></td>").append(ps).appendTo(tr)
			} else _88 == "sep" ? $('<td><div class="pagination-btn-separator"></div></td>').appendTo(tr) : _88 == "first" ? bb.first = _89("first") : _88 == "prev" ? bb.prev = _89("prev") : _88 == "next" ? bb.next = _89("next") : _88 == "last" ? bb.last = _89("last") : _88 == "manual" ? ($('<span style="padding-left:6px;"></span>').html(_84.beforePageText).appendTo(tr).wrap("<td></td>"), bb.num = $('<input class="pagination-num" type="text" value="1" size="2">').appendTo(tr).wrap("<td></td>"), bb.num.unbind(".pagination").bind("keydown.pagination",
			function(a) {
				if (a.keyCode == 13) {
					var b = parseInt($(this).val()) || 1;
					return _8e(_82, b),
					!1
				}
			}), bb.after = $('<span style="padding-right:6px;"></span>').appendTo(tr).wrap("<td></td>")) : _88 == "refresh" ? bb.refresh = _89("refresh") : _88 == "links" && $('<td class="pagination-links"></td>').appendTo(tr)
		}
		if (_84.buttons) {
			$('<td><div class="pagination-btn-separator"></div></td>').appendTo(tr);
			if ($.isArray(_84.buttons)) for (var i = 0; i < _84.buttons.length; i++) {
				var btn = _84.buttons[i];
				if (btn == "-") $('<td><div class="pagination-btn-separator"></div></td>').appendTo(tr);
				else {
					var td = $("<td></td>").appendTo(tr),
					a = $('<a href="javascript:void(0)"></a>').appendTo(td);
					a[0].onclick = eval(btn.handler ||
					function() {}),
					a.linkbutton($.extend({},
					btn, {
						plain: !0
					}))
				}
			} else {
				var td = $("<td></td>").appendTo(tr);
				$(_84.buttons).appendTo(td).show()
			}
		}
		$('<div class="pagination-info"></div>').appendTo(_85),
		$('<div style="clear:both;"></div>').appendTo(_85)
	}
	function _8e(a, b) {
		var c = $.data(a, "pagination").options;
		_92(a, {
			pageNumber: b
		}),
		c.onSelectPage.call(a, c.pageNumber, c.pageSize)
	}
	function _92(a, b) {
		var c = $.data(a, "pagination"),
		d = c.options,
		e = c.bb;
		$.extend(d, b || {});
		var f = $(a).find("select.pagination-page-list");
		f.length && (f.val(d.pageSize + ""), d.pageSize = parseInt(f.val()));
		var g = Math.ceil(d.total / d.pageSize) || 1;
		d.pageNumber < 1 && (d.pageNumber = 1),
		d.pageNumber > g && (d.pageNumber = g),
		e.num && e.num.val(d.pageNumber),
		e.after && e.after.html(d.afterPageText.replace(/{pages}/, g));
		var h = $(a).find("td.pagination-links");
		if (h.length) {
			h.empty();
			var i = d.pageNumber - Math.floor(d.links / 2);
			i < 1 && (i = 1);
			var j = i + d.links - 1;
			j > g && (j = g),
			i = j - d.links + 1,
			i < 1 && (i = 1);
			for (var k = i; k <= j; k++) {
				var l = $('<a class="pagination-link" href="javascript:void(0)"></a>').appendTo(h);
				l.linkbutton({
					plain: !0,
					text: k
				}),
				k == d.pageNumber ? l.linkbutton("select") : l.unbind(".pagination").bind("click.pagination", {
					pageNumber: k
				},
				function(b) {
					_8e(a, b.data.pageNumber)
				})
			}
		}
		var m = d.displayMsg;
		m = m.replace(/{from}/, d.total == 0 ? 0 : d.pageSize * (d.pageNumber - 1) + 1),
		m = m.replace(/{to}/, Math.min(d.pageSize * d.pageNumber, d.total)),
		m = m.replace(/{total}/, d.total),
		$(a).find("div.pagination-info").html(m),
		e.first && e.first.linkbutton({
			disabled: d.pageNumber == 1
		}),
		e.prev && e.prev.linkbutton({
			disabled: d.pageNumber == 1
		}),
		e.next && e.next.linkbutton({
			disabled: d.pageNumber == g
		}),
		e.last && e.last.linkbutton({
			disabled: d.pageNumber == g
		}),
		_9b(a, d.loading)
	}
	function _9b(a, b) {
		var c = $.data(a, "pagination"),
		d = c.options;
		d.loading = b,
		d.showRefresh && c.bb.refresh && c.bb.refresh.linkbutton({
			iconCls: d.loading ? "pagination-loading": "pagination-load"
		})
	}
	$.fn.pagination = function(a, b) {
		return typeof a == "string" ? $.fn.pagination.methods[a](this, b) : (a = a || {},
		this.each(function() {
			var b, c = $.data(this, "pagination");
			c ? b = $.extend(c.options, a) : (b = $.extend({},
			$.fn.pagination.defaults, $.fn.pagination.parseOptions(this), a), $.data(this, "pagination", {
				options: b
			})),
			_81(this),
			_92(this)
		}))
	},
	$.fn.pagination.methods = {
		options: function(a) {
			return $.data(a[0], "pagination").options
		},
		loading: function(a) {
			return a.each(function() {
				_9b(this, !0)
			})
		},
		loaded: function(a) {
			return a.each(function() {
				_9b(this, !1)
			})
		},
		refresh: function(a, b) {
			return a.each(function() {
				_92(this, b)
			})
		},
		select: function(a, b) {
			return a.each(function() {
				_8e(this, b)
			})
		}
	},
	$.fn.pagination.parseOptions = function(_a6) {
		var t = $(_a6);
		return $.extend({},
		$.parser.parseOptions(_a6, [{
			total: "number",
			pageSize: "number",
			pageNumber: "number",
			links: "number"
		},
		{
			loading: "boolean",
			showPageList: "boolean",
			showRefresh: "boolean"
		}]), {
			pageList: t.attr("pageList") ? eval(t.attr("pageList")) : undefined
		})
	},
	$.fn.pagination.defaults = {
		total: 1,
		pageSize: 10,
		pageNumber: 1,
		pageList: [10, 20, 30, 50],
		loading: !1,
		buttons: null,
		showPageList: !0,
		showRefresh: !0,
		links: 10,
		layout: ["list", "sep", "first", "prev", "sep", "manual", "sep", "next", "last", "sep", "refresh"],
		onSelectPage: function(a, b) {},
		onBeforeRefresh: function(a, b) {},
		onRefresh: function(a, b) {},
		onChangePageSize: function(a) {},
		beforePageText: "Page",
		afterPageText: "of {pages}",
		displayMsg: "Displaying {from} to {to} of {total} items",
		nav: {
			first: {
				iconCls: "pagination-first",
				handler: function() {
					var a = $(this).pagination("options");
					a.pageNumber > 1 && $(this).pagination("select", 1)
				}
			},
			prev: {
				iconCls: "pagination-prev",
				handler: function() {
					var a = $(this).pagination("options");
					a.pageNumber > 1 && $(this).pagination("select", a.pageNumber - 1)
				}
			},
			next: {
				iconCls: "pagination-next",
				handler: function() {
					var a = $(this).pagination("options"),
					b = Math.ceil(a.total / a.pageSize);
					a.pageNumber < b && $(this).pagination("select", a.pageNumber + 1)
				}
			},
			last: {
				iconCls: "pagination-last",
				handler: function() {
					var a = $(this).pagination("options"),
					b = Math.ceil(a.total / a.pageSize);
					a.pageNumber < b && $(this).pagination("select", b)
				}
			},
			refresh: {
				iconCls: "pagination-refresh",
				handler: function() {
					var a = $(this).pagination("options");
					a.onBeforeRefresh.call(this, a.pageNumber, a.pageSize) != 0 && ($(this).pagination("select", a.pageNumber), a.onRefresh.call(this, a.pageNumber, a.pageSize))
				}
			}
		}
	}
} (jQuery),
function(a) {
	function b(b) {
		var c = a(b);
		return c.addClass("tree"),
		c
	}
	function c(b) {
		var c = a.data(b, "tree").options;
		a(b).unbind().bind("mouseover",
		function(b) {
			var c = a(b.target),
			d = c.closest("div.tree-node");
			if (!d.length) return;
			d.addClass("tree-node-hover"),
			c.hasClass("tree-hit") && (c.hasClass("tree-expanded") ? c.addClass("tree-expanded-hover") : c.addClass("tree-collapsed-hover")),
			b.stopPropagation()
		}).bind("mouseout",
		function(b) {
			var c = a(b.target),
			d = c.closest("div.tree-node");
			if (!d.length) return;
			d.removeClass("tree-node-hover"),
			c.hasClass("tree-hit") && (c.hasClass("tree-expanded") ? c.removeClass("tree-expanded-hover") : c.removeClass("tree-collapsed-hover")),
			b.stopPropagation()
		}).bind("click",
		function(d) {
			var e = a(d.target),
			g = e.closest("div.tree-node");
			if (!g.length) return;
			if (e.hasClass("tree-hit")) return m(b, g[0]),
			!1;
			if (e.hasClass("tree-checkbox")) return f(b, g[0], !e.hasClass("tree-checkbox1")),
			!1;
			H(b, g[0]),
			c.onClick.call(b, C(b, g[0])),
			d.stopPropagation()
		}).bind("dblclick",
		function(d) {
			var e = a(d.target).closest("div.tree-node");
			if (!e.length) return;
			H(b, e[0]),
			c.onDblClick.call(b, C(b, e[0])),
			d.stopPropagation()
		}).bind("contextmenu",
		function(d) {
			var e = a(d.target).closest("div.tree-node");
			if (!e.length) return;
			c.onContextMenu.call(b, d, C(b, e[0])),
			d.stopPropagation()
		})
	}
	function d(b) {
		var c = a.data(b, "tree").options;
		c.dnd = !1;
		var d = a(b).find("div.tree-node");
		d.draggable("disable"),
		d.css("cursor", "pointer")
	}
	function e(b) {
		function f(b, c) {
			return a(b).closest("ul.tree").tree(c ? "pop": "getData", b)
		}
		function g(b, c) {
			var d = a(b).draggable("proxy").find("span.tree-dnd-icon");
			d.removeClass("tree-dnd-yes tree-dnd-no").addClass(c ? "tree-dnd-yes": "tree-dnd-no")
		}
		function h(c, e) {
			function g() {
				var g = f(c, !0);
				a(b).tree("append", {
					parent: e,
					data: [g]
				}),
				d.onDrop.call(b, e, g, "append")
			}
			C(b, e).state == "closed" ? k(b, e,
			function() {
				g()
			}) : g()
		}
		function i(c, e, g) {
			var h = {};
			g == "top" ? h.before = e: h.after = e;
			var i = f(c, !0);
			h.data = i,
			a(b).tree("insert", h),
			d.onDrop.call(b, e, i, g)
		}
		var c = a.data(b, "tree"),
		d = c.options,
		e = c.tree;
		c.disabledNodes = [],
		d.dnd = !0,
		e.find("div.tree-node").draggable({
			disabled: !1,
			revert: !0,
			cursor: "pointer",
			proxy: function(b) {
				var c = a('<div class="tree-node-proxy"></div>').appendTo("body");
				return c.html('<span class="tree-dnd-icon tree-dnd-no">&nbsp;</span>' + a(b).find(".tree-title").html()),
				c.hide(),
				c
			},
			deltaX: 15,
			deltaY: 15,
			onBeforeDrag: function(c) {
				if (d.onBeforeDrag.call(b, C(b, this)) == 0) return ! 1;
				if (a(c.target).hasClass("tree-hit") || a(c.target).hasClass("tree-checkbox")) return ! 1;
				if (c.which != 1) return ! 1;
				a(this).next("ul").find("div.tree-node").droppable({
					accept: "no-accept"
				});
				var e = a(this).find("span.tree-indent");
				e.length && (c.data.offsetWidth -= e.length * e.width())
			},
			onStartDrag: function() {
				a(this).draggable("proxy").css({
					left: -1e4,
					top: -1e4
				}),
				d.onStartDrag.call(b, C(b, this));
				var e = C(b, this);
				e.id == undefined && (e.id = "easyui_tree_node_id_temp", u(b, e)),
				c.draggingNodeId = e.id
			},
			onDrag: function(b) {
				var c = b.pageX,
				d = b.pageY,
				e = b.data.startX,
				f = b.data.startY,
				g = Math.sqrt((c - e) * (c - e) + (d - f) * (d - f));
				g > 3 && a(this).draggable("proxy").show(),
				this.pageY = b.pageY
			},
			onStopDrag: function() {
				a(this).next("ul").find("div.tree-node").droppable({
					accept: "div.tree-node"
				});
				for (var e = 0; e < c.disabledNodes.length; e++) a(c.disabledNodes[e]).droppable("enable");
				c.disabledNodes = [];
				var f = D(b, c.draggingNodeId);
				f && f.id == "easyui_tree_node_id_temp" && (f.id = "", u(b, f)),
				d.onStopDrag.call(b, f)
			}
		}).droppable({
			accept: "div.tree-node",
			onDragEnter: function(e, h) {
				d.onDragEnter.call(b, this, f(h)) == 0 && (g(h, !1), a(this).removeClass("tree-node-append tree-node-top tree-node-bottom"), a(this).droppable("disable"), c.disabledNodes.push(this))
			},
			onDragOver: function(e, h) {
				if (a(this).droppable("options").disabled) return;
				var i = h.pageY,
				j = a(this).offset().top,
				k = j + a(this).outerHeight();
				g(h, !0),
				a(this).removeClass("tree-node-append tree-node-top tree-node-bottom"),
				i > j + (k - j) / 2 ? k - i < 5 ? a(this).addClass("tree-node-bottom") : a(this).addClass("tree-node-append") : i - j < 5 ? a(this).addClass("tree-node-top") : a(this).addClass("tree-node-append"),
				d.onDragOver.call(b, this, f(h)) == 0 && (g(h, !1), a(this).removeClass("tree-node-append tree-node-top tree-node-bottom"), a(this).droppable("disable"), c.disabledNodes.push(this))
			},
			onDragLeave: function(c, e) {
				g(e, !1),
				a(this).removeClass("tree-node-append tree-node-top tree-node-bottom"),
				d.onDragLeave.call(b, this, f(e))
			},
			onDrop: function(c, e) {
				var g = this,
				j, k;
				a(this).hasClass("tree-node-append") ? (j = h, k = "append") : (j = i, k = a(this).hasClass("tree-node-top") ? "top": "bottom");
				if (d.onBeforeDrop.call(b, g, f(e), k) == 0) {
					a(this).removeClass("tree-node-append tree-node-top tree-node-bottom");
					return
				}
				j(e, g, k),
				a(this).removeClass("tree-node-append tree-node-top tree-node-bottom")
			}
		})
	}
	function f(b, c, d) {
		function i(a) {
			var b = a.next().find(".tree-checkbox");
			b.removeClass("tree-checkbox0 tree-checkbox1 tree-checkbox2"),
			a.find(".tree-checkbox").hasClass("tree-checkbox1") ? b.addClass("tree-checkbox1") : b.addClass("tree-checkbox0")
		}
		function j(c) {
			function f(b) {
				var c = b.find(".tree-checkbox");
				if (c.hasClass("tree-checkbox0") || c.hasClass("tree-checkbox2")) return ! 1;
				var d = !0;
				return b.parent().siblings().each(function() {
					a(this).children("div.tree-node").children(".tree-checkbox").hasClass("tree-checkbox1") || (d = !1)
				}),
				d
			}
			function g(b) {
				var c = b.find(".tree-checkbox");
				if (c.hasClass("tree-checkbox1") || c.hasClass("tree-checkbox2")) return ! 1;
				var d = !0;
				return b.parent().siblings().each(function() {
					a(this).children("div.tree-node").children(".tree-checkbox").hasClass("tree-checkbox0") || (d = !1)
				}),
				d
			}
			var d = y(b, c[0]);
			if (d) {
				var e = a(d.target).find(".tree-checkbox");
				e.removeClass("tree-checkbox0 tree-checkbox1 tree-checkbox2"),
				f(c) ? e.addClass("tree-checkbox1") : g(c) ? e.addClass("tree-checkbox0") : e.addClass("tree-checkbox2"),
				j(a(d.target))
			}
		}
		var e = a.data(b, "tree").options;
		if (!e.checkbox) return;
		var f = C(b, c);
		if (e.onBeforeCheck.call(b, f, d) == 0) return;
		var g = a(c),
		h = g.find(".tree-checkbox");
		h.removeClass("tree-checkbox0 tree-checkbox1 tree-checkbox2"),
		d ? h.addClass("tree-checkbox1") : h.addClass("tree-checkbox0"),
		e.cascadeCheck && (j(g), i(g)),
		e.onCheck.call(b, f, d)
	}
	function g(b, c) {
		var d = a.data(b, "tree").options;
		if (!d.checkbox) return;
		var e = a(c);
		if (I(b, c)) {
			var g = e.find(".tree-checkbox");
			g.length ? g.hasClass("tree-checkbox1") ? f(b, c, !0) : f(b, c, !1) : d.onlyLeafCheck && a('<span class="tree-checkbox tree-checkbox0"></span>').insertBefore(e.find(".tree-title"))
		} else {
			var g = e.find(".tree-checkbox");
			if (d.onlyLeafCheck) g.remove();
			else if (g.hasClass("tree-checkbox1")) f(b, c, !0);
			else if (g.hasClass("tree-checkbox2")) {
				var h = !0,
				i = !0,
				j = x(b, c);
				for (var k = 0; k < j.length; k++) j[k].checked ? i = !1 : h = !1;
				h && f(b, c, !0),
				i && f(b, c, !1)
			}
		}
	}
	function h(b, c, d, g) {
		var h = a.data(b, "tree"),
		j = h.options,
		k = a(c).prevAll("div.tree-node:first");
		d = j.loadFilter.call(b, d, k[0]);
		var l = E(b, "domId", k.attr("id"));
		g ? l ? l.children ? l.children = l.children.concat(d) : l.children = d: h.data = h.data.concat(d) : (l ? l.children = d: h.data = d, a(c).empty()),
		j.view.render.call(j.view, b, c, d),
		j.dnd && e(b),
		l && u(b, l);
		var m = [],
		n = [];
		for (var o = 0; o < d.length; o++) {
			var p = d[o];
			p.checked || m.push(p)
		}
		G(d,
		function(a) {
			a.checked && n.push(a)
		});
		var q = j.onCheck;
		j.onCheck = function() {},
		m.length && f(b, a("#" + m[0].domId)[0], !1);
		for (var o = 0; o < n.length; o++) f(b, a("#" + n[o].domId)[0], !0);
		j.onCheck = q,
		setTimeout(function() {
			i(b, b)
		},
		0),
		j.onLoadSuccess.call(b, l, d)
	}
	function i(b, c, d) {
		function h(a, b) {
			var c = a.find("span.tree-icon");
			c.prev("span.tree-indent").addClass("tree-join")
		}
		function j(b) {
			var c = b.find("span.tree-indent, span.tree-hit").length;
			b.next().find("div.tree-node").each(function() {
				a(this).children("span:eq(" + (c - 1) + ")").addClass("tree-line")
			})
		}
		var e = a.data(b, "tree").options;
		if (!e.lines) {
			a(b).removeClass("tree-lines");
			return
		}
		a(b).addClass("tree-lines");
		if (!d) {
			d = !0,
			a(b).find("span.tree-indent").removeClass("tree-line tree-join tree-joinbottom"),
			a(b).find("div.tree-node").removeClass("tree-node-last tree-root-first tree-root-one");
			var f = a(b).tree("getRoots");
			f.length > 1 ? a(f[0].target).addClass("tree-root-first") : f.length == 1 && a(f[0].target).addClass("tree-root-one")
		}
		a(c).children("li").each(function() {
			var c = a(this).children("div.tree-node"),
			e = c.next("ul");
			e.length ? (a(this).next().length && j(c), i(b, e, d)) : h(c)
		});
		var g = a(c).children("li:last").children("div.tree-node").addClass("tree-node-last");
		g.children("span.tree-join").removeClass("tree-join").addClass("tree-joinbottom")
	}
	function j(b, c, d, e) {
		var f = a.data(b, "tree").options;
		d = d || {};
		var g = null;
		if (b != c) {
			var i = a(c).prev();
			g = C(b, i[0])
		}
		if (f.onBeforeLoad.call(b, g, d) == 0) return;
		var j = a(c).prev().children("span.tree-folder");
		j.addClass("tree-loading");
		var k = f.loader.call(b, d,
		function(a) {
			j.removeClass("tree-loading"),
			h(b, c, a),
			e && e()
		},
		function() {
			j.removeClass("tree-loading"),
			f.onLoadError.apply(b, arguments),
			e && e()
		});
		k == 0 && j.removeClass("tree-loading")
	}
	function k(b, c, d) {
		var e = a.data(b, "tree").options,
		f = a(c).children("span.tree-hit");
		if (f.length == 0) return;
		if (f.hasClass("tree-expanded")) return;
		var g = C(b, c);
		if (e.onBeforeExpand.call(b, g) == 0) return;
		f.removeClass("tree-collapsed tree-collapsed-hover").addClass("tree-expanded"),
		f.next().addClass("tree-folder-open");
		var h = a(c).next();
		if (h.length) e.animate ? h.slideDown("normal",
		function() {
			g.state = "open",
			e.onExpand.call(b, g),
			d && d()
		}) : (h.css("display", "block"), g.state = "open", e.onExpand.call(b, g), d && d());
		else {
			var i = a('<ul style="display:none"></ul>').insertAfter(c);
			j(b, i[0], {
				id: g.id
			},
			function() {
				i.is(":empty") && i.remove(),
				e.animate ? i.slideDown("normal",
				function() {
					g.state = "open",
					e.onExpand.call(b, g),
					d && d()
				}) : (i.css("display", "block"), g.state = "open", e.onExpand.call(b, g), d && d())
			})
		}
	}
	function l(b, c) {
		var d = a.data(b, "tree").options,
		e = a(c).children("span.tree-hit");
		if (e.length == 0) return;
		if (e.hasClass("tree-collapsed")) return;
		var f = C(b, c);
		if (d.onBeforeCollapse.call(b, f) == 0) return;
		e.removeClass("tree-expanded tree-expanded-hover").addClass("tree-collapsed"),
		e.next().removeClass("tree-folder-open");
		var g = a(c).next();
		d.animate ? g.slideUp("normal",
		function() {
			f.state = "closed",
			d.onCollapse.call(b, f)
		}) : (g.css("display", "none"), f.state = "closed", d.onCollapse.call(b, f))
	}
	function m(b, c) {
		var d = a(c).children("span.tree-hit");
		if (d.length == 0) return;
		d.hasClass("tree-expanded") ? l(b, c) : k(b, c)
	}
	function n(a, b) {
		var c = x(a, b);
		b && c.unshift(C(a, b));
		for (var d = 0; d < c.length; d++) k(a, c[d].target)
	}
	function o(a, b) {
		var c = [],
		d = y(a, b);
		while (d) c.unshift(d),
		d = y(a, d.target);
		for (var e = 0; e < c.length; e++) k(a, c[e].target)
	}
	function p(b, c) {
		var d = a(b).parent();
		while (d[0].tagName != "BODY" && d.css("overflow-y") != "auto") d = d.parent();
		var e = a(c),
		f = e.offset().top;
		if (d[0].tagName != "BODY") {
			var g = d.offset().top;
			f < g ? d.scrollTop(d.scrollTop() + f - g) : f + e.outerHeight() > g + d.outerHeight() - 18 && d.scrollTop(d.scrollTop() + f + e.outerHeight() - g - d.outerHeight() + 18)
		} else d.scrollTop(f)
	}
	function q(a, b) {
		var c = x(a, b);
		b && c.unshift(C(a, b));
		for (var d = 0; d < c.length; d++) l(a, c[d].target)
	}
	function r(b, c) {
		var d = a(c.parent),
		e = c.data;
		if (!e) return;
		e = a.isArray(e) ? e: [e];
		if (!e.length) return;
		var f;
		if (d.length == 0) f = a(b);
		else {
			if (I(b, d[0])) {
				var i = d.find("span.tree-icon");
				i.removeClass("tree-file").addClass("tree-folder tree-folder-open");
				var j = a('<span class="tree-hit tree-expanded"></span>').insertBefore(i);
				j.prev().length && j.prev().remove()
			}
			f = d.next(),
			f.length || (f = a("<ul></ul>").insertAfter(d))
		}
		h(b, f[0], e, !0),
		g(b, f.prev())
	}
	function s(b, c) {
		var d = c.before || c.after,
		e = y(b, d),
		f = c.data;
		if (!f) return;
		f = a.isArray(f) ? f: [f];
		if (!f.length) return;
		r(b, {
			parent: e ? e.target: null,
			data: f
		});
		var g = e ? e.children: a(b).tree("getRoots");
		for (var h = 0; h < g.length; h++) if (g[h].domId == a(d).attr("id")) {
			for (var i = f.length - 1; i >= 0; i--) g.splice(c.before ? h: h + 1, 0, f[i]);
			g.splice(g.length - f.length, f.length);
			break
		}
		var j = a();
		for (var h = 0; h < f.length; h++) j = j.add(a("#" + f[h].domId).parent());
		c.before ? j.insertBefore(a(d).parent()) : j.insertAfter(a(d).parent())
	}
	function t(b, c) {
		function f(c) {
			var d = a(c).attr("id"),
			e = y(b, c),
			f = e ? e.children: a.data(b, "tree").data;
			for (var g = 0; g < f.length; g++) if (f[g].domId == d) {
				f.splice(g, 1);
				break
			}
			return e
		}
		var d = f(c);
		a(c).parent().remove();
		if (d) {
			if (!d.children || !d.children.length) {
				var e = a(d.target);
				e.find(".tree-icon").removeClass("tree-folder").addClass("tree-file"),
				e.find(".tree-hit").remove(),
				a('<span class="tree-indent"></span>').prependTo(e),
				e.next().remove()
			}
			u(b, d),
			g(b, d.target)
		}
		i(b, b)
	}
	function u(b, c) {
		var d = a.data(b, "tree").options,
		e = a(c.target),
		g = C(b, c.target),
		h = g.checked;
		g.iconCls && e.find(".tree-icon").removeClass(g.iconCls),
		a.extend(g, c),
		e.find(".tree-title").html(d.formatter.call(b, g)),
		g.iconCls && e.find(".tree-icon").addClass(g.iconCls),
		h != g.checked && f(b, c.target, g.checked)
	}
	function v(a) {
		var b = w(a);
		return b.length ? b[0] : null
	}
	function w(b) {
		var c = a.data(b, "tree").data;
		for (var d = 0; d < c.length; d++) F(c[d]);
		return c
	}
	function x(b, c) {
		var d = [],
		e = C(b, c),
		f = e ? e.children: a.data(b, "tree").data;
		return G(f,
		function(a) {
			d.push(F(a))
		}),
		d
	}
	function y(b, c) {
		var d = a(c).closest("ul").prevAll("div.tree-node:first");
		return C(b, d[0])
	}
	function z(b, c) {
		c = c || "checked",
		a.isArray(c) || (c = [c]);
		var d = [];
		for (var e = 0; e < c.length; e++) {
			var f = c[e];
			f == "checked" ? d.push("span.tree-checkbox1") : f == "unchecked" ? d.push("span.tree-checkbox0") : f == "indeterminate" && d.push("span.tree-checkbox2")
		}
		var g = [];
		return a(b).find(d.join(",")).each(function() {
			var c = a(this).parent();
			g.push(C(b, c[0]))
		}),
		g
	}
	function A(b) {
		var c = a(b).find("div.tree-node-selected");
		return c.length ? C(b, c[0]) : null
	}
	function B(a, b) {
		var c = C(a, b);
		return c && c.children && G(c.children,
		function(a) {
			F(a)
		}),
		c
	}
	function C(b, c) {
		return E(b, "domId", a(c).attr("id"))
	}
	function D(a, b) {
		return E(a, "id", b)
	}
	function E(b, c, d) {
		var e = a.data(b, "tree").data,
		f = null;
		return G(e,
		function(a) {
			if (a[c] == d) return f = F(a),
			!1
		}),
		f
	}
	function F(b) {
		var c = a("#" + b.domId);
		return b.target = c[0],
		b.checked = c.find(".tree-checkbox").hasClass("tree-checkbox1"),
		b
	}
	function G(a, b) {
		var c = [];
		for (var d = 0; d < a.length; d++) c.push(a[d]);
		while (c.length) {
			var e = c.shift();
			if (b(e) == 0) return;
			if (e.children) for (var d = e.children.length - 1; d >= 0; d--) c.unshift(e.children[d])
		}
	}
	function H(b, c) {
		var d = a.data(b, "tree").options,
		e = C(b, c);
		if (d.onBeforeSelect.call(b, e) == 0) return;
		a(b).find("div.tree-node-selected").removeClass("tree-node-selected"),
		a(c).addClass("tree-node-selected"),
		d.onSelect.call(b, e)
	}
	function I(b, c) {
		return a(c).children("span.tree-hit").length == 0
	}
	function J(b, c) {
		var d = a.data(b, "tree").options,
		e = C(b, c);
		if (d.onBeforeEdit.call(b, e) == 0) return;
		a(c).css("position", "relative");
		var f = a(c).find(".tree-title"),
		g = f.outerWidth();
		f.empty();
		var h = a('<input class="tree-editor">').appendTo(f);
		h.val(e.text).focus(),
		h.width(g + 20),
		h.height(document.compatMode == "CSS1Compat" ? 18 - (h.outerHeight() - h.height()) : 18),
		h.bind("click",
		function(a) {
			return ! 1
		}).bind("mousedown",
		function(a) {
			a.stopPropagation()
		}).bind("mousemove",
		function(a) {
			a.stopPropagation()
		}).bind("keydown",
		function(a) {
			if (a.keyCode == 13) return K(b, c),
			!1;
			if (a.keyCode == 27) return L(b, c),
			!1
		}).bind("blur",
		function(a) {
			a.stopPropagation(),
			K(b, c)
		})
	}
	function K(b, c) {
		var d = a.data(b, "tree").options;
		a(c).css("position", "");
		var e = a(c).find("input.tree-editor"),
		f = e.val();
		e.remove();
		var g = C(b, c);
		g.text = f,
		u(b, g),
		d.onAfterEdit.call(b, g)
	}
	function L(b, c) {
		var d = a.data(b, "tree").options;
		a(c).css("position", ""),
		a(c).find("input.tree-editor").remove();
		var e = C(b, c);
		u(b, e),
		d.onCancelEdit.call(b, e)
	}
	a.fn.tree = function(d, e) {
		if (typeof d == "string") return a.fn.tree.methods[d](this, e);
		var d = d || {};
		return this.each(function() {
			var e = a.data(this, "tree"),
			f;
			if (e) f = a.extend(e.options, d),
			e.options = f;
			else {
				f = a.extend({},
				a.fn.tree.defaults, a.fn.tree.parseOptions(this), d),
				a.data(this, "tree", {
					options: f,
					tree: b(this),
					data: []
				});
				var g = a.fn.tree.parseData(this);
				g.length && h(this, this, g)
			}
			c(this),
			f.data && h(this, this, a.extend(!0, [], f.data)),
			j(this, this)
		})
	},
	a.fn.tree.methods = {
		options: function(b) {
			return a.data(b[0], "tree").options
		},
		loadData: function(a, b) {
			return a.each(function() {
				h(this, this, b)
			})
		},
		getNode: function(a, b) {
			return C(a[0], b)
		},
		getData: function(a, b) {
			return B(a[0], b)
		},
		reload: function(b, c) {
			return b.each(function() {
				if (c) {
					var b = a(c),
					d = b.children("span.tree-hit");
					d.removeClass("tree-expanded tree-expanded-hover").addClass("tree-collapsed"),
					b.next().remove(),
					k(this, c)
				} else a(this).empty(),
				j(this, this)
			})
		},
		getRoot: function(a) {
			return v(a[0])
		},
		getRoots: function(a) {
			return w(a[0])
		},
		getParent: function(a, b) {
			return y(a[0], b)
		},
		getChildren: function(a, b) {
			return x(a[0], b)
		},
		getChecked: function(a, b) {
			return z(a[0], b)
		},
		getSelected: function(a) {
			return A(a[0])
		},
		isLeaf: function(a, b) {
			return I(a[0], b)
		},
		find: function(a, b) {
			return D(a[0], b)
		},
		select: function(a, b) {
			return a.each(function() {
				H(this, b)
			})
		},
		check: function(a, b) {
			return a.each(function() {
				f(this, b, !0)
			})
		},
		uncheck: function(a, b) {
			return a.each(function() {
				f(this, b, !1)
			})
		},
		collapse: function(a, b) {
			return a.each(function() {
				l(this, b)
			})
		},
		expand: function(a, b) {
			return a.each(function() {
				k(this, b)
			})
		},
		collapseAll: function(a, b) {
			return a.each(function() {
				q(this, b)
			})
		},
		expandAll: function(a, b) {
			return a.each(function() {
				n(this, b)
			})
		},
		expandTo: function(a, b) {
			return a.each(function() {
				o(this, b)
			})
		},
		scrollTo: function(a, b) {
			return a.each(function() {
				p(this, b)
			})
		},
		toggle: function(a, b) {
			return a.each(function() {
				m(this, b)
			})
		},
		append: function(a, b) {
			return a.each(function() {
				r(this, b)
			})
		},
		insert: function(a, b) {
			return a.each(function() {
				s(this, b)
			})
		},
		remove: function(a, b) {
			return a.each(function() {
				t(this, b)
			})
		},
		pop: function(a, b) {
			var c = a.tree("getData", b);
			return a.tree("remove", b),
			c
		},
		update: function(a, b) {
			return a.each(function() {
				u(this, b)
			})
		},
		enableDnd: function(a) {
			return a.each(function() {
				e(this)
			})
		},
		disableDnd: function(a) {
			return a.each(function() {
				d(this)
			})
		},
		beginEdit: function(a, b) {
			return a.each(function() {
				J(this, b)
			})
		},
		endEdit: function(a, b) {
			return a.each(function() {
				K(this, b)
			})
		},
		cancelEdit: function(a, b) {
			return a.each(function() {
				L(this, b)
			})
		}
	},
	a.fn.tree.parseOptions = function(b) {
		var c = a(b);
		return a.extend({},
		a.parser.parseOptions(b, ["url", "method", {
			checkbox: "boolean",
			cascadeCheck: "boolean",
			onlyLeafCheck: "boolean"
		},
		{
			animate: "boolean",
			lines: "boolean",
			dnd: "boolean"
		}]))
	},
	a.fn.tree.parseData = function(b) {
		function d(b, c) {
			c.children("li").each(function() {
				var c = a(this),
				e = a.extend({},
				a.parser.parseOptions(this, ["id", "iconCls", "state"]), {
					checked: c.attr("checked") ? !0 : undefined
				});
				e.text = c.children("span").html(),
				e.text || (e.text = c.html());
				var f = c.children("ul");
				f.length && (e.children = [], d(e.children, f)),
				b.push(e)
			})
		}
		var c = [];
		return d(c, a(b)),
		c
	};
	var M = 1,
	N = {
		render: function(b, c, d) {
			function h(a, c) {
				var d = [];
				for (var f = 0; f < c.length; f++) {
					var g = c[f];
					g.state != "open" && g.state != "closed" && (g.state = "open"),
					g.domId = "_easyui_tree_" + M++,
					d.push("<li>"),
					d.push('<div id="' + g.domId + '" class="tree-node">');
					for (var i = 0; i < a; i++) d.push('<span class="tree-indent"></span>');
					var j = !1;
					g.state == "closed" ? (d.push('<span class="tree-hit tree-collapsed"></span>'), d.push('<span class="tree-icon tree-folder ' + (g.iconCls ? g.iconCls: "") + '"></span>')) : g.children && g.children.length ? (d.push('<span class="tree-hit tree-expanded"></span>'), d.push('<span class="tree-icon tree-folder tree-folder-open ' + (g.iconCls ? g.iconCls: "") + '"></span>')) : (d.push('<span class="tree-indent"></span>'), d.push('<span class="tree-icon tree-file ' + (g.iconCls ? g.iconCls: "") + '"></span>'), j = !0),
					e.checkbox && (!e.onlyLeafCheck || j) && d.push('<span class="tree-checkbox tree-checkbox0"></span>'),
					d.push('<span class="tree-title">' + e.formatter.call(b, g) + "</span>"),
					d.push("</div>");
					if (g.children && g.children.length) {
						var k = h(a + 1, g.children);
						d.push('<ul style="display:' + (g.state == "closed" ? "none": "block") + '">'),
						d = d.concat(k),
						d.push("</ul>")
					}
					d.push("</li>")
				}
				return d
			}
			var e = a.data(b, "tree").options,
			f = a(c).prev("div.tree-node").find("span.tree-indent, span.tree-hit").length,
			g = h(f, d);
			a(c).append(g.join(""))
		}
	};
	a.fn.tree.defaults = {
		url: null,
		method: "post",
		animate: !1,
		checkbox: !1,
		cascadeCheck: !0,
		onlyLeafCheck: !1,
		lines: !1,
		dnd: !1,
		data: null,
		formatter: function(a) {
			return a.text
		},
		loader: function(b, c, d) {
			var e = a(this).tree("options");
			if (!e.url) return ! 1;
			a.ajax({
				type: e.method,
				url: e.url,
				data: b,
				dataType: "json",
				success: function(a) {
					c(a)
				},
				error: function() {
					d.apply(this, arguments)
				}
			})
		},
		loadFilter: function(a, b) {
			return a
		},
		view: N,
		onBeforeLoad: function(a, b) {},
		onLoadSuccess: function(a, b) {},
		onLoadError: function() {},
		onClick: function(a) {},
		onDblClick: function(a) {},
		onBeforeExpand: function(a) {},
		onExpand: function(a) {},
		onBeforeCollapse: function(a) {},
		onCollapse: function(a) {},
		onBeforeCheck: function(a, b) {},
		onCheck: function(a, b) {},
		onBeforeSelect: function(a) {},
		onSelect: function(a) {},
		onContextMenu: function(a, b) {},
		onBeforeDrag: function(a) {},
		onStartDrag: function(a) {},
		onStopDrag: function(a) {},
		onDragEnter: function(a, b) {},
		onDragOver: function(a, b) {},
		onDragLeave: function(a, b) {},
		onBeforeDrop: function(a, b, c) {},
		onDrop: function(a, b, c) {},
		onBeforeEdit: function(a) {},
		onAfterEdit: function(a) {},
		onCancelEdit: function(a) {}
	}
} (jQuery),
function(a) {
	function b(b) {
		return a(b).addClass("progressbar"),
		a(b).html('<div class="progressbar-text"></div><div class="progressbar-value"><div class="progressbar-text"></div></div>'),
		a(b)
	}
	function c(b, c) {
		var d = a.data(b, "progressbar").options,
		e = a.data(b, "progressbar").bar;
		c && (d.width = c),
		e._outerWidth(d.width)._outerHeight(d.height),
		e.find("div.progressbar-text").width(e.width()),
		e.find("div.progressbar-text,div.progressbar-value").css({
			height: e.height() + "px",
			lineHeight: e.height() + "px"
		})
	}
	a.fn.progressbar = function(d, e) {
		if (typeof d == "string") {
			var f = a.fn.progressbar.methods[d];
			if (f) return f(this, e)
		}
		return d = d || {},
		this.each(function() {
			var e = a.data(this, "progressbar");
			e ? a.extend(e.options, d) : e = a.data(this, "progressbar", {
				options: a.extend({},
				a.fn.progressbar.defaults, a.fn.progressbar.parseOptions(this), d),
				bar: b(this)
			}),
			a(this).progressbar("setValue", e.options.value),
			c(this)
		})
	},
	a.fn.progressbar.methods = {
		options: function(b) {
			return a.data(b[0], "progressbar").options
		},
		resize: function(a, b) {
			return a.each(function() {
				c(this, b)
			})
		},
		getValue: function(b) {
			return a.data(b[0], "progressbar").options.value
		},
		setValue: function(b, c) {
			return c < 0 && (c = 0),
			c > 100 && (c = 100),
			b.each(function() {
				var b = a.data(this, "progressbar").options,
				d = b.text.replace(/{value}/, c),
				e = b.value;
				b.value = c,
				a(this).find("div.progressbar-value").width(c + "%"),
				a(this).find("div.progressbar-text").html(d),
				e != c && b.onChange.call(this, c, e)
			})
		}
	},
	a.fn.progressbar.parseOptions = function(b) {
		return a.extend({},
		a.parser.parseOptions(b, ["width", "height", "text", {
			value: "number"
		}]))
	},
	a.fn.progressbar.defaults = {
		width: "auto",
		height: 22,
		value: 0,
		text: "{value}%",
		onChange: function(a, b) {}
	}
} (jQuery),
function(a) {
	function b(b) {
		a(b).addClass("tooltip-f")
	}
	function c(b) {
		var c = a.data(b, "tooltip").options;
		a(b).unbind(".tooltip").bind(c.showEvent + ".tooltip",
		function(a) {
			f(b, a)
		}).bind(c.hideEvent + ".tooltip",
		function(a) {
			g(b, a)
		}).bind("mousemove.tooltip",
		function(a) {
			c.trackMouse && (c.trackMouseX = a.pageX, c.trackMouseY = a.pageY, e(b))
		})
	}
	function d(b) {
		var c = a.data(b, "tooltip");
		c.showTimer && (clearTimeout(c.showTimer), c.showTimer = null),
		c.hideTimer && (clearTimeout(c.hideTimer), c.hideTimer = null)
	}
	function e(b) {
		var c = a.data(b, "tooltip");
		if (!c || !c.tip) return;
		var d = c.options,
		e = c.tip;
		if (d.trackMouse) {
			h = a();
			var f = d.trackMouseX + d.deltaX,
			g = d.trackMouseY + d.deltaY
		} else var h = a(b),
		f = h.offset().left + d.deltaX,
		g = h.offset().top + d.deltaY;
		switch (d.position) {
		case "right":
			f += h._outerWidth() + 12 + (d.trackMouse ? 12 : 0),
			g -= (e._outerHeight() - h._outerHeight()) / 2;
			break;
		case "left":
			f -= e._outerWidth() + 12 + (d.trackMouse ? 12 : 0),
			g -= (e._outerHeight() - h._outerHeight()) / 2;
			break;
		case "top":
			f -= (e._outerWidth() - h._outerWidth()) / 2,
			g -= e._outerHeight() + 12 + (d.trackMouse ? 12 : 0);
			break;
		case "bottom":
			f -= (e._outerWidth() - h._outerWidth()) / 2,
			g += h._outerHeight() + 12 + (d.trackMouse ? 12 : 0)
		}
		a(b).is(":visible") || (f = -1e5, g = -1e5),
		e.css({
			left: f,
			top: g,
			zIndex: d.zIndex != undefined ? d.zIndex: a.fn.window ? a.fn.window.defaults.zIndex++:""
		}),
		d.onPosition.call(b, f, g)
	}
	function f(b, c) {
		var f = a.data(b, "tooltip"),
		g = f.options,
		i = f.tip;
		i || (i = a('<div tabindex="-1" class="tooltip"><div class="tooltip-content"></div><div class="tooltip-arrow-outer"></div><div class="tooltip-arrow"></div></div>').appendTo("body"), f.tip = i, h(b)),
		i.removeClass("tooltip-top tooltip-bottom tooltip-left tooltip-right").addClass("tooltip-" + g.position),
		d(b),
		f.showTimer = setTimeout(function() {
			e(b),
			i.show(),
			g.onShow.call(b, c);
			var a = i.children(".tooltip-arrow-outer"),
			d = i.children(".tooltip-arrow"),
			f = "border-" + g.position + "-color";
			a.add(d).css({
				borderTopColor: "",
				borderBottomColor: "",
				borderLeftColor: "",
				borderRightColor: ""
			}),
			a.css(f, i.css(f)),
			d.css(f, i.css("backgroundColor"))
		},
		g.showDelay)
	}
	function g(b, c) {
		var e = a.data(b, "tooltip");
		e && e.tip && (d(b), e.hideTimer = setTimeout(function() {
			e.tip.hide(),
			e.options.onHide.call(b, c)
		},
		e.options.hideDelay))
	}
	function h(b, c) {
		var d = a.data(b, "tooltip"),
		e = d.options;
		c && (e.content = c);
		if (!d.tip) return;
		var f = typeof e.content == "function" ? e.content.call(b) : e.content;
		d.tip.children(".tooltip-content").html(f),
		e.onUpdate.call(b, f)
	}
	function i(b) {
		var c = a.data(b, "tooltip");
		if (c) {
			d(b);
			var e = c.options;
			c.tip && c.tip.remove(),
			e._title && a(b).attr("title", e._title),
			a.removeData(b, "tooltip"),
			a(b).unbind(".tooltip").removeClass("tooltip-f"),
			e.onDestroy.call(b)
		}
	}
	a.fn.tooltip = function(d, e) {
		return typeof d == "string" ? a.fn.tooltip.methods[d](this, e) : (d = d || {},
		this.each(function() {
			var e = a.data(this, "tooltip");
			e ? a.extend(e.options, d) : (a.data(this, "tooltip", {
				options: a.extend({},
				a.fn.tooltip.defaults, a.fn.tooltip.parseOptions(this), d)
			}), b(this)),
			c(this),
			h(this)
		}))
	},
	a.fn.tooltip.methods = {
		options: function(b) {
			return a.data(b[0], "tooltip").options
		},
		tip: function(b) {
			return a.data(b[0], "tooltip").tip
		},
		arrow: function(a) {
			return a.tooltip("tip").children(".tooltip-arrow-outer,.tooltip-arrow")
		},
		show: function(a, b) {
			return a.each(function() {
				f(this, b)
			})
		},
		hide: function(a, b) {
			return a.each(function() {
				g(this, b)
			})
		},
		update: function(a, b) {
			return a.each(function() {
				h(this, b)
			})
		},
		reposition: function(a) {
			return a.each(function() {
				e(this)
			})
		},
		destroy: function(a) {
			return a.each(function() {
				i(this)
			})
		}
	},
	a.fn.tooltip.parseOptions = function(b) {
		var c = a(b),
		d = a.extend({},
		a.parser.parseOptions(b, ["position", "showEvent", "hideEvent", "content", {
			deltaX: "number",
			deltaY: "number",
			showDelay: "number",
			hideDelay: "number"
		}]), {
			_title: c.attr("title")
		});
		return c.attr("title", ""),
		d.content || (d.content = d._title),
		d
	},
	a.fn.tooltip.defaults = {
		position: "bottom",
		content: null,
		trackMouse: !1,
		deltaX: 0,
		deltaY: 0,
		showEvent: "mouseenter",
		hideEvent: "mouseleave",
		showDelay: 200,
		hideDelay: 100,
		onShow: function(a) {},
		onHide: function(a) {},
		onUpdate: function(a) {},
		onPosition: function(a, b) {},
		onDestroy: function() {}
	}
} (jQuery),
function($) {
	function _1e2(a) {
		a._remove()
	}
	function _1e3(a, b) {
		var c = $.data(a, "panel").options,
		d = $.data(a, "panel").panel,
		e = d.children("div.panel-header"),
		f = d.children("div.panel-body");
		b && $.extend(c, {
			width: b.width,
			height: b.height,
			left: b.left,
			top: b.top
		}),
		c.fit ? $.extend(c, d._fit()) : d._fit(!1),
		d.css({
			left: c.left,
			top: c.top
		}),
		isNaN(c.width) ? d.width("auto") : d._outerWidth(c.width),
		e.add(f)._outerWidth(d.width()),
		isNaN(c.height) ? f.height("auto") : (d._outerHeight(c.height), f._outerHeight(d.height() - e._outerHeight())),
		d.css("height", ""),
		c.onResize.apply(a, [c.width, c.height]),
		$(a).find(">div:visible,>form>div:visible").triggerHandler("_resize")
	}
	function _1e9(a, b) {
		var c = $.data(a, "panel").options,
		d = $.data(a, "panel").panel;
		b && (b.left != null && (c.left = b.left), b.top != null && (c.top = b.top)),
		d.css({
			left: c.left,
			top: c.top
		}),
		c.onMove.apply(a, [c.left, c.top])
	}
	function _1ed(a) {
		$(a).addClass("panel-body");
		var b = $('<div class="panel"></div>').insertBefore(a);
		return b[0].appendChild(a),
		b.bind("_resize",
		function() {
			var b = $.data(a, "panel").options;
			return b.fit == 1 && _1e3(a),
			!1
		}),
		b
	}
	function _1f0(_1f1) {
		var opts = $.data(_1f1, "panel").options,
		_1f2 = $.data(_1f1, "panel").panel;
		opts.tools && typeof opts.tools == "string" && _1f2.find(">div.panel-header>div.panel-tool .panel-tool-a").appendTo(opts.tools),
		_1e2(_1f2.children("div.panel-header"));
		if (opts.title && !opts.noheader) {
			var _1f3 = $('<div class="panel-header"><div class="panel-title">' + opts.title + "</div></div>").prependTo(_1f2);
			opts.iconCls && (_1f3.find(".panel-title").addClass("panel-with-icon"), $('<div class="panel-icon"></div>').addClass(opts.iconCls).appendTo(_1f3));
			var tool = $('<div class="panel-tool"></div>').appendTo(_1f3);
			tool.bind("click",
			function(a) {
				a.stopPropagation()
			});
			if (opts.tools) if ($.isArray(opts.tools)) for (var i = 0; i < opts.tools.length; i++) {
				var t = $('<a href="javascript:void(0)"></a>').addClass(opts.tools[i].iconCls).appendTo(tool);
				opts.tools[i].handler && t.bind("click", eval(opts.tools[i].handler))
			} else $(opts.tools).children().each(function() {
				$(this).addClass($(this).attr("iconCls")).addClass("panel-tool-a").appendTo(tool)
			});
			opts.collapsible && $('<a class="panel-tool-collapse" href="javascript:void(0)"></a>').appendTo(tool).bind("click",
			function() {
				return opts.collapsed == 1 ? _210(_1f1, !0) : _205(_1f1, !0),
				!1
			}),
			opts.minimizable && $('<a class="panel-tool-min" href="javascript:void(0)"></a>').appendTo(tool).bind("click",
			function() {
				return _216(_1f1),
				!1
			}),
			opts.maximizable && $('<a class="panel-tool-max" href="javascript:void(0)"></a>').appendTo(tool).bind("click",
			function() {
				return opts.maximized == 1 ? _219(_1f1) : _204(_1f1),
				!1
			}),
			opts.closable && $('<a class="panel-tool-close" href="javascript:void(0)"></a>').appendTo(tool).bind("click",
			function() {
				return _1f4(_1f1),
				!1
			}),
			_1f2.children("div.panel-body").removeClass("panel-body-noheader")
		} else _1f2.children("div.panel-body").addClass("panel-body-noheader")
	}
	function _1f5(a, b) {
		function f(b) {
			$(a).html(b),
			$.parser.parse($(a))
		}
		var c = $.data(a, "panel"),
		d = c.options;
		e && (d.queryParams = b);
		if (d.href) {
			if (!c.isLoaded || !d.cache) {
				var e = $.extend({},
				d.queryParams);
				if (d.onBeforeLoad.call(a, e) == 0) return;
				c.isLoaded = !1,
				_1fa(a),
				d.loadingMessage && $(a).html($('<div class="panel-loading"></div>').html(d.loadingMessage)),
				d.loader.call(a, e,
				function(b) {
					f(d.extractor.call(a, b)),
					d.onLoad.apply(a, arguments),
					c.isLoaded = !0
				},
				function() {
					d.onLoadError.apply(a, arguments)
				})
			}
		} else d.content && (c.isLoaded || (_1fa(a), f(d.content), c.isLoaded = !0))
	}
	function _1fa(a) {
		var b = $(a);
		b.find(".combo-f").each(function() {
			$(this).combo("destroy")
		}),
		b.find(".m-btn").each(function() {
			$(this).menubutton("destroy")
		}),
		b.find(".s-btn").each(function() {
			$(this).splitbutton("destroy")
		}),
		b.find(".tooltip-f").each(function() {
			$(this).tooltip("destroy")
		}),
		b.children("div").each(function() {
			$(this)._fit(!1)
		})
	}
	function _1fe(a) {
		$(a).find("div.panel:visible,div.accordion:visible,div.tabs-container:visible,div.layout:visible").each(function() {
			$(this).triggerHandler("_resize", [!0])
		})
	}
	function _200(a, b) {
		var c = $.data(a, "panel").options,
		d = $.data(a, "panel").panel;
		if (b != 1 && c.onBeforeOpen.call(a) == 0) return;
		d.show(),
		c.closed = !1,
		c.minimized = !1;
		var e = d.children("div.panel-header").find("a.panel-tool-restore");
		e.length && (c.maximized = !0),
		c.onOpen.call(a),
		c.maximized == 1 && (c.maximized = !1, _204(a)),
		c.collapsed == 1 && (c.collapsed = !1, _205(a)),
		c.collapsed || (_1f5(a), _1fe(a))
	}
	function _1f4(a, b) {
		var c = $.data(a, "panel").options,
		d = $.data(a, "panel").panel;
		if (b != 1 && c.onBeforeClose.call(a) == 0) return;
		d._fit(!1),
		d.hide(),
		c.closed = !0,
		c.onClose.call(a)
	}
	function _209(a, b) {
		var c = $.data(a, "panel").options,
		d = $.data(a, "panel").panel;
		if (b != 1 && c.onBeforeDestroy.call(a) == 0) return;
		_1fa(a),
		_1e2(d),
		c.onDestroy.call(a)
	}
	function _205(a, b) {
		var c = $.data(a, "panel").options,
		d = $.data(a, "panel").panel,
		e = d.children("div.panel-body"),
		f = d.children("div.panel-header").find("a.panel-tool-collapse");
		if (c.collapsed == 1) return;
		e.stop(!0, !0);
		if (c.onBeforeCollapse.call(a) == 0) return;
		f.addClass("panel-tool-expand"),
		b == 1 ? e.slideUp("normal",
		function() {
			c.collapsed = !0,
			c.onCollapse.call(a)
		}) : (e.hide(), c.collapsed = !0, c.onCollapse.call(a))
	}
	function _210(a, b) {
		var c = $.data(a, "panel").options,
		d = $.data(a, "panel").panel,
		e = d.children("div.panel-body"),
		f = d.children("div.panel-header").find("a.panel-tool-collapse");
		if (c.collapsed == 0) return;
		e.stop(!0, !0);
		if (c.onBeforeExpand.call(a) == 0) return;
		f.removeClass("panel-tool-expand"),
		b == 1 ? e.slideDown("normal",
		function() {
			c.collapsed = !1,
			c.onExpand.call(a),
			_1f5(a),
			_1fe(a)
		}) : (e.show(), c.collapsed = !1, c.onExpand.call(a), _1f5(a), _1fe(a))
	}
	function _204(a) {
		var b = $.data(a, "panel").options,
		c = $.data(a, "panel").panel,
		d = c.children("div.panel-header").find("a.panel-tool-max");
		if (b.maximized == 1) return;
		d.addClass("panel-tool-restore"),
		$.data(a, "panel").original || ($.data(a, "panel").original = {
			width: b.width,
			height: b.height,
			left: b.left,
			top: b.top,
			fit: b.fit
		}),
		b.left = 0,
		b.top = 0,
		b.fit = !0,
		_1e3(a),
		b.minimized = !1,
		b.maximized = !0,
		b.onMaximize.call(a)
	}
	function _216(a) {
		var b = $.data(a, "panel").options,
		c = $.data(a, "panel").panel;
		c._fit(!1),
		c.hide(),
		b.minimized = !0,
		b.maximized = !1,
		b.onMinimize.call(a)
	}
	function _219(a) {
		var b = $.data(a, "panel").options,
		c = $.data(a, "panel").panel,
		d = c.children("div.panel-header").find("a.panel-tool-max");
		if (b.maximized == 0) return;
		c.show(),
		d.removeClass("panel-tool-restore"),
		$.extend(b, $.data(a, "panel").original),
		_1e3(a),
		b.minimized = !1,
		b.maximized = !1,
		$.data(a, "panel").original = null,
		b.onRestore.call(a)
	}
	function _21c(a) {
		var b = $.data(a, "panel").options,
		c = $.data(a, "panel").panel,
		d = $(a).panel("header"),
		e = $(a).panel("body");
		c.css(b.style),
		c.addClass(b.cls),
		b.border ? (d.removeClass("panel-header-noborder"), e.removeClass("panel-body-noborder")) : (d.addClass("panel-header-noborder"), e.addClass("panel-body-noborder")),
		d.addClass(b.headerCls),
		e.addClass(b.bodyCls),
		b.id ? $(a).attr("id", b.id) : $(a).attr("id", "")
	}
	function _220(a, b) {
		$.data(a, "panel").options.title = b,
		$(a).panel("header").find("div.panel-title").html(b)
	}
	$.fn._remove = function() {
		return this.each(function() {
			$(this).remove();
			try {
				this.outerHTML = ""
			} catch(a) {}
		})
	};
	var TO = !1,
	_223 = !0;
	$(window).unbind(".panel").bind("resize.panel",
	function() {
		if (!_223) return;
		TO !== !1 && clearTimeout(TO),
		TO = setTimeout(function() {
			_223 = !1;
			var a = $("body.layout");
			a.length ? a.layout("resize") : $("body").children("div.panel:visible,div.accordion:visible,div.tabs-container:visible,div.layout:visible").triggerHandler("_resize"),
			_223 = !0,
			TO = !1
		},
		200)
	}),
	$.fn.panel = function(a, b) {
		return typeof a == "string" ? $.fn.panel.methods[a](this, b) : (a = a || {},
		this.each(function() {
			var b = $.data(this, "panel"),
			c;
			b ? (c = $.extend(b.options, a), b.isLoaded = !1) : (c = $.extend({},
			$.fn.panel.defaults, $.fn.panel.parseOptions(this), a), $(this).attr("title", ""), b = $.data(this, "panel", {
				options: c,
				panel: _1ed(this),
				isLoaded: !1
			})),
			_1f0(this),
			_21c(this),
			c.doSize == 1 && (b.panel.css("display", "block"), _1e3(this)),
			c.closed == 1 || c.minimized == 1 ? b.panel.hide() : _200(this)
		}))
	},
	$.fn.panel.methods = {
		options: function(a) {
			return $.data(a[0], "panel").options
		},
		panel: function(a) {
			return $.data(a[0], "panel").panel
		},
		header: function(a) {
			return $.data(a[0], "panel").panel.find(">div.panel-header")
		},
		body: function(a) {
			return $.data(a[0], "panel").panel.find(">div.panel-body")
		},
		setTitle: function(a, b) {
			return a.each(function() {
				_220(this, b)
			})
		},
		open: function(a, b) {
			return a.each(function() {
				_200(this, b)
			})
		},
		close: function(a, b) {
			return a.each(function() {
				_1f4(this, b)
			})
		},
		destroy: function(a, b) {
			return a.each(function() {
				_209(this, b)
			})
		},
		refresh: function(a, b) {
			return a.each(function() {
				var a = $.data(this, "panel");
				a.isLoaded = !1,
				b && (typeof b == "string" ? a.options.href = b: a.options.queryParams = b),
				_1f5(this)
			})
		},
		resize: function(a, b) {
			return a.each(function() {
				_1e3(this, b)
			})
		},
		move: function(a, b) {
			return a.each(function() {
				_1e9(this, b)
			})
		},
		maximize: function(a) {
			return a.each(function() {
				_204(this)
			})
		},
		minimize: function(a) {
			return a.each(function() {
				_216(this)
			})
		},
		restore: function(a) {
			return a.each(function() {
				_219(this)
			})
		},
		collapse: function(a, b) {
			return a.each(function() {
				_205(this, b)
			})
		},
		expand: function(a, b) {
			return a.each(function() {
				_210(this, b)
			})
		}
	},
	$.fn.panel.parseOptions = function(a) {
		var b = $(a);
		return $.extend({},
		$.parser.parseOptions(a, ["id", "width", "height", "left", "top", "title", "iconCls", "cls", "headerCls", "bodyCls", "tools", "href", "method", {
			cache: "boolean",
			fit: "boolean",
			border: "boolean",
			noheader: "boolean"
		},
		{
			collapsible: "boolean",
			minimizable: "boolean",
			maximizable: "boolean"
		},
		{
			closable: "boolean",
			collapsed: "boolean",
			minimized: "boolean",
			maximized: "boolean",
			closed: "boolean"
		}]), {
			loadingMessage: b.attr("loadingMessage") != undefined ? b.attr("loadingMessage") : undefined
		})
	},
	$.fn.panel.defaults = {
		id: null,
		title: null,
		iconCls: null,
		width: "auto",
		height: "auto",
		left: null,
		top: null,
		cls: null,
		headerCls: null,
		bodyCls: null,
		style: {},
		href: null,
		cache: !0,
		fit: !1,
		border: !0,
		doSize: !0,
		noheader: !1,
		content: null,
		collapsible: !1,
		minimizable: !1,
		maximizable: !1,
		closable: !1,
		collapsed: !1,
		minimized: !1,
		maximized: !1,
		closed: !1,
		tools: null,
		queryParams: {},
		method: "get",
		href: null,
		loadingMessage: "Loading...",
		loader: function(a, b, c) {
			var d = $(this).panel("options");
			if (!d.href) return ! 1;
			$.ajax({
				type: d.method,
				url: d.href,
				cache: !1,
				data: a,
				dataType: "html",
				success: function(a) {
					b(a)
				},
				error: function() {
					c.apply(this, arguments)
				}
			})
		},
		extractor: function(a) {
			var b = /<body[^>]*>((.|[\n\r])*)<\/body>/im,
			c = b.exec(a);
			return c ? c[1] : a
		},
		onBeforeLoad: function(a) {},
		onLoad: function() {},
		onLoadError: function() {},
		onBeforeOpen: function() {},
		onOpen: function() {},
		onBeforeClose: function() {},
		onClose: function() {},
		onBeforeDestroy: function() {},
		onDestroy: function() {},
		onResize: function(a, b) {},
		onMove: function(a, b) {},
		onMaximize: function() {},
		onRestore: function() {},
		onMinimize: function() {},
		onBeforeCollapse: function() {},
		onBeforeExpand: function() {},
		onCollapse: function() {},
		onExpand: function() {}
	}
} (jQuery),
function(a) {
	function b(b, c) {
		var d = a.data(b, "window").options;
		c && a.extend(d, c),
		a(b).panel("resize", d)
	}
	function c(b, c) {
		var d = a.data(b, "window");
		c && (c.left != null && (d.options.left = c.left), c.top != null && (d.options.top = c.top)),
		a(b).panel("move", d.options),
		d.shadow && d.shadow.css({
			left: d.options.left,
			top: d.options.top
		})
	}
	function d(b, d) {
		var e = a.data(b, "window"),
		f = e.options,
		g = f.width;
		isNaN(g) && (g = e.window._outerWidth());
		if (f.inline) {
			var h = e.window.parent();
			f.left = (h.width() - g) / 2 + h.scrollLeft()
		} else f.left = (a(window)._outerWidth() - g) / 2 + a(document).scrollLeft();
		d && c(b)
	}
	function e(b, d) {
		var e = a.data(b, "window"),
		f = e.options,
		g = f.height;
		isNaN(g) && (g = e.window._outerHeight());
		if (f.inline) {
			var h = e.window.parent();
			f.top = (h.height() - g) / 2 + h.scrollTop()
		} else f.top = (a(window)._outerHeight() - g) / 2 + a(document).scrollTop();
		d && c(b)
	}
	function f(b) {
		var f = a.data(b, "window"),
		g = f.options.closed,
		i = a(b).panel(a.extend({},
		f.options, {
			border: !1,
			doSize: !0,
			closed: !0,
			cls: "window",
			headerCls: "window-header",
			bodyCls: "window-body " + (f.options.noheader ? "window-body-noheader": ""),
			onBeforeDestroy: function() {
				if (f.options.onBeforeDestroy.call(b) == 0) return ! 1;
				f.shadow && f.shadow.remove(),
				f.mask && f.mask.remove()
			},
			onClose: function() {
				f.shadow && f.shadow.hide(),
				f.mask && f.mask.hide(),
				f.options.onClose.call(b)
			},
			onOpen: function() {
				f.mask && f.mask.css({
					display: "block",
					zIndex: a.fn.window.defaults.zIndex++
				}),
				f.shadow && f.shadow.css({
					display: "block",
					zIndex: a.fn.window.defaults.zIndex++,
					left: f.options.left,
					top: f.options.top,
					width: f.window._outerWidth(),
					height: f.window._outerHeight()
				}),
				f.window.css("z-index", a.fn.window.defaults.zIndex++),
				f.options.onOpen.call(b)
			},
			onResize: function(c, d) {
				var e = a(this).panel("options");
				a.extend(f.options, {
					width: e.width,
					height: e.height,
					left: e.left,
					top: e.top
				}),
				f.shadow && f.shadow.css({
					left: f.options.left,
					top: f.options.top,
					width: f.window._outerWidth(),
					height: f.window._outerHeight()
				}),
				f.options.onResize.call(b, c, d)
			},
			onMinimize: function() {
				f.shadow && f.shadow.hide(),
				f.mask && f.mask.hide(),
				f.options.onMinimize.call(b)
			},
			onBeforeCollapse: function() {
				if (f.options.onBeforeCollapse.call(b) == 0) return ! 1;
				f.shadow && f.shadow.hide()
			},
			onExpand: function() {
				f.shadow && f.shadow.show(),
				f.options.onExpand.call(b)
			}
		}));
		f.window = i.panel("panel"),
		f.mask && f.mask.remove(),
		f.options.modal == 1 && (f.mask = a('<div class="window-mask"></div>').insertAfter(f.window), f.mask.css({
			width: f.options.inline ? f.mask.parent().width() : h().width,
			height: f.options.inline ? f.mask.parent().height() : h().height,
			display: "none"
		})),
		f.shadow && f.shadow.remove(),
		f.options.shadow == 1 && (f.shadow = a('<div class="window-shadow"></div>').insertAfter(f.window), f.shadow.css({
			display: "none"
		})),
		f.options.left == null && d(b),
		f.options.top == null && e(b),
		c(b),
		g || i.window("open")
	}
	function g(c) {
		var d = a.data(c, "window");
		d.window.draggable({
			handle: ">div.panel-header>div.panel-title",
			disabled: d.options.draggable == 0,
			onStartDrag: function(b) {
				d.mask && d.mask.css("z-index", a.fn.window.defaults.zIndex++),
				d.shadow && d.shadow.css("z-index", a.fn.window.defaults.zIndex++),
				d.window.css("z-index", a.fn.window.defaults.zIndex++),
				d.proxy || (d.proxy = a('<div class="window-proxy"></div>').insertAfter(d.window)),
				d.proxy.css({
					display: "none",
					zIndex: a.fn.window.defaults.zIndex++,
					left: b.data.left,
					top: b.data.top
				}),
				d.proxy._outerWidth(d.window._outerWidth()),
				d.proxy._outerHeight(d.window._outerHeight()),
				setTimeout(function() {
					d.proxy && d.proxy.show()
				},
				500)
			},
			onDrag: function(a) {
				return d.proxy.css({
					display: "block",
					left: a.data.left,
					top: a.data.top
				}),
				!1
			},
			onStopDrag: function(b) {
				d.options.left = b.data.left,
				d.options.top = b.data.top,
				a(c).window("move"),
				d.proxy.remove(),
				d.proxy = null
			}
		}),
		d.window.resizable({
			disabled: d.options.resizable == 0,
			onStartResize: function(b) {
				d.pmask = a('<div class="window-proxy-mask"></div>').insertAfter(d.window),
				d.pmask.css({
					zIndex: a.fn.window.defaults.zIndex++,
					left: b.data.left,
					top: b.data.top,
					width: d.window._outerWidth(),
					height: d.window._outerHeight()
				}),
				d.proxy || (d.proxy = a('<div class="window-proxy"></div>').insertAfter(d.window)),
				d.proxy.css({
					zIndex: a.fn.window.defaults.zIndex++,
					left: b.data.left,
					top: b.data.top
				}),
				d.proxy._outerWidth(b.data.width),
				d.proxy._outerHeight(b.data.height)
			},
			onResize: function(a) {
				return d.proxy.css({
					left: a.data.left,
					top: a.data.top
				}),
				d.proxy._outerWidth(a.data.width),
				d.proxy._outerHeight(a.data.height),
				!1
			},
			onStopResize: function(e) {
				a.extend(d.options, {
					left: e.data.left,
					top: e.data.top,
					width: e.data.width,
					height: e.data.height
				}),
				b(c),
				d.pmask.remove(),
				d.pmask = null,
				d.proxy.remove(),
				d.proxy = null
			}
		})
	}
	function h() {
		return document.compatMode == "BackCompat" ? {
			width: Math.max(document.body.scrollWidth, document.body.clientWidth),
			height: Math.max(document.body.scrollHeight, document.body.clientHeight)
		}: {
			width: Math.max(document.documentElement.scrollWidth, document.documentElement.clientWidth),
			height: Math.max(document.documentElement.scrollHeight, document.documentElement.clientHeight)
		}
	}
	a(window).resize(function() {
		a("body>div.window-mask").css({
			width: a(window)._outerWidth(),
			height: a(window)._outerHeight()
		}),
		setTimeout(function() {
			a("body>div.window-mask").css({
				width: h().width,
				height: h().height
			})
		},
		50)
	}),
	a.fn.window = function(b, c) {
		if (typeof b == "string") {
			var d = a.fn.window.methods[b];
			return d ? d(this, c) : this.panel(b, c)
		}
		return b = b || {},
		this.each(function() {
			var c = a.data(this, "window");
			c ? a.extend(c.options, b) : (c = a.data(this, "window", {
				options: a.extend({},
				a.fn.window.defaults, a.fn.window.parseOptions(this), b)
			}), c.options.inline || document.body.appendChild(this)),
			f(this),
			g(this)
		})
	},
	a.fn.window.methods = {
		options: function(b) {
			var c = b.panel("options"),
			d = a.data(b[0], "window").options;
			return a.extend(d, {
				closed: c.closed,
				collapsed: c.collapsed,
				minimized: c.minimized,
				maximized: c.maximized
			})
		},
		window: function(b) {
			return a.data(b[0], "window").window
		},
		resize: function(a, c) {
			return a.each(function() {
				b(this, c)
			})
		},
		move: function(a, b) {
			return a.each(function() {
				c(this, b)
			})
		},
		hcenter: function(a) {
			return a.each(function() {
				d(this, !0)
			})
		},
		vcenter: function(a) {
			return a.each(function() {
				e(this, !0)
			})
		},
		center: function(a) {
			return a.each(function() {
				d(this),
				e(this),
				c(this)
			})
		}
	},
	a.fn.window.parseOptions = function(b) {
		return a.extend({},
		a.fn.panel.parseOptions(b), a.parser.parseOptions(b, [{
			draggable: "boolean",
			resizable: "boolean",
			shadow: "boolean",
			modal: "boolean",
			inline: "boolean"
		}]))
	},
	a.fn.window.defaults = a.extend({},
	a.fn.panel.defaults, {
		zIndex: 9e3,
		draggable: !0,
		resizable: !0,
		shadow: !0,
		modal: !1,
		inline: !1,
		title: "New Window",
		collapsible: !0,
		minimizable: !0,
		maximizable: !0,
		closable: !0,
		closed: !1
	})
} (jQuery),
function($) {
	function _260(a) {
		var b = document.createElement("div");
		while (a.firstChild) b.appendChild(a.firstChild);
		a.appendChild(b);
		var c = $(b);
		return c.attr("style", $(a).attr("style")),
		$(a).removeAttr("style").css("overflow", "hidden"),
		c.panel({
			border: !1,
			doSize: !1,
			bodyCls: "dialog-content"
		}),
		c
	}
	function _263(_264) {
		var opts = $.data(_264, "dialog").options,
		_265 = $.data(_264, "dialog").contentPanel;
		if (opts.toolbar) if ($.isArray(opts.toolbar)) {
			$(_264).find("div.dialog-toolbar").remove();
			var _266 = $('<div class="dialog-toolbar"><table cellspacing="0" cellpadding="0"><tr></tr></table></div>').prependTo(_264),
			tr = _266.find("tr");
			for (var i = 0; i < opts.toolbar.length; i++) {
				var btn = opts.toolbar[i];
				if (btn == "-") $('<td><div class="dialog-tool-separator"></div></td>').appendTo(tr);
				else {
					var td = $("<td></td>").appendTo(tr),
					tool = $('<a href="javascript:void(0)"></a>').appendTo(td);
					tool[0].onclick = eval(btn.handler ||
					function() {}),
					tool.linkbutton($.extend({},
					btn, {
						plain: !0
					}))
				}
			}
		} else $(opts.toolbar).addClass("dialog-toolbar").prependTo(_264),
		$(opts.toolbar).show();
		else $(_264).find("div.dialog-toolbar").remove();
		if (opts.buttons) if ($.isArray(opts.buttons)) {
			$(_264).find("div.dialog-button").remove();
			var _267 = $('<div class="dialog-button"></div>').appendTo(_264);
			for (var i = 0; i < opts.buttons.length; i++) {
				var p = opts.buttons[i],
				_268 = $('<a href="javascript:void(0)"></a>').appendTo(_267);
				p.handler && (_268[0].onclick = p.handler),
				_268.linkbutton(p)
			}
		} else $(opts.buttons).addClass("dialog-button").appendTo(_264),
		$(opts.buttons).show();
		else $(_264).find("div.dialog-button").remove();
		var _269 = opts.href,
		_26a = opts.content;
		opts.href = null,
		opts.content = null,
		_265.panel({
			closed: opts.closed,
			cache: opts.cache,
			href: _269,
			content: _26a,
			onLoad: function() {
				opts.height == "auto" && $(_264).window("resize"),
				opts.onLoad.apply(_264, arguments)
			}
		}),
		$(_264).window($.extend({},
		opts, {
			onOpen: function() {
				_265.panel("options").closed && _265.panel("open"),
				opts.onOpen && opts.onOpen.call(_264)
			},
			onResize: function(a, b) {
				var c = $(_264);
				_265.panel("panel").show(),
				_265.panel("resize", {
					width: c.width(),
					height: b == "auto" ? "auto": c.height() - c.children("div.dialog-toolbar")._outerHeight() - c.children("div.dialog-button")._outerHeight()
				}),
				opts.onResize && opts.onResize.call(_264, a, b)
			}
		})),
		opts.href = _269,
		opts.content = _26a
	}
	function _26e(a, b) {
		var c = $.data(a, "dialog").contentPanel;
		c.panel("refresh", b)
	}
	$.fn.dialog = function(a, b) {
		if (typeof a == "string") {
			var c = $.fn.dialog.methods[a];
			return c ? c(this, b) : this.window(a, b)
		}
		return a = a || {},
		this.each(function() {
			var b = $.data(this, "dialog");
			b ? $.extend(b.options, a) : $.data(this, "dialog", {
				options: $.extend({},
				$.fn.dialog.defaults, $.fn.dialog.parseOptions(this), a),
				contentPanel: _260(this)
			}),
			_263(this)
		})
	},
	$.fn.dialog.methods = {
		options: function(a) {
			var b = $.data(a[0], "dialog").options,
			c = a.panel("options");
			$.extend(b, {
				closed: c.closed,
				collapsed: c.collapsed,
				minimized: c.minimized,
				maximized: c.maximized
			});
			var d = $.data(a[0], "dialog").contentPanel;
			return b
		},
		dialog: function(a) {
			return a.window("window")
		},
		refresh: function(a, b) {
			return a.each(function() {
				_26e(this, b)
			})
		}
	},
	$.fn.dialog.parseOptions = function(a) {
		return $.extend({},
		$.fn.window.parseOptions(a), $.parser.parseOptions(a, ["toolbar", "buttons"]))
	},
	$.fn.dialog.defaults = $.extend({},
	$.fn.window.defaults, {
		title: "New Dialog",
		collapsible: !1,
		minimizable: !1,
		maximizable: !1,
		resizable: !1,
		toolbar: null,
		buttons: null
	})
} (jQuery),
function($) {
	function show(a, b, c, d) {
		var e = $(a).window("window");
		if (!e) return;
		switch (b) {
		case null:
			e.show();
			break;
		case "slide":
			e.slideDown(c);
			break;
		case "fade":
			e.fadeIn(c);
			break;
		case "show":
			e.show(c)
		}
		var f = null;
		d > 0 && (f = setTimeout(function() {
			hide(a, b, c)
		},
		d)),
		e.hover(function() {
			f && clearTimeout(f)
		},
		function() {
			d > 0 && (f = setTimeout(function() {
				hide(a, b, c)
			},
			d))
		})
	}
	function hide(a, b, c) {
		if (a.locked == 1) return;
		a.locked = !0;
		var d = $(a).window("window");
		if (!d) return;
		switch (b) {
		case null:
			d.hide();
			break;
		case "slide":
			d.slideUp(c);
			break;
		case "fade":
			d.fadeOut(c);
			break;
		case "show":
			d.hide(c)
		}
		setTimeout(function() {
			$(a).window("destroy")
		},
		c)
	}
	function _27d(a) {
		var b = $.extend({},
		$.fn.window.defaults, {
			collapsible: !1,
			minimizable: !1,
			maximizable: !1,
			shadow: !1,
			draggable: !1,
			resizable: !1,
			closed: !0,
			style: {
				left: "",
				top: "",
				right: 0,
				zIndex: $.fn.window.defaults.zIndex++,
				bottom: -document.body.scrollTop - document.documentElement.scrollTop
			},
			onBeforeOpen: function() {
				return show(this, b.showType, b.showSpeed, b.timeout),
				!1
			},
			onBeforeClose: function() {
				return hide(this, b.showType, b.showSpeed),
				!1
			}
		},
		{
			title: "",
			width: 250,
			height: 100,
			showType: "slide",
			showSpeed: 600,
			msg: "",
			timeout: 4e3
		},
		a);
		b.style.zIndex = $.fn.window.defaults.zIndex++;
		var c = $('<div class="messager-body"></div>').html(b.msg).appendTo("body");
		return c.window(b),
		c.window("window").css(b.style),
		c.window("open"),
		c
	}
	function _27f(_280, _281, _282) {
		var win = $('<div class="messager-body"></div>').appendTo("body");
		win.append(_281);
		if (_282) {
			var tb = $('<div class="messager-button"></div>').appendTo(win);
			for (var _283 in _282) $("<a></a>").attr("href", "javascript:void(0)").text(_283).css("margin-left", 10).bind("click", eval(_282[_283])).appendTo(tb).linkbutton()
		}
		return win.window({
			title: _280,
			noheader: _280 ? !1 : !0,
			width: 300,
			height: "auto",
			modal: !0,
			collapsible: !1,
			minimizable: !1,
			maximizable: !1,
			resizable: !1,
			onClose: function() {
				setTimeout(function() {
					win.window("destroy")
				},
				100)
			}
		}),
		win.window("window").addClass("messager-window"),
		win.children("div.messager-button").children("a:first").focus(),
		win
	}
	$.messager = {
		show: function(a) {
			return _27d(a)
		},
		alert: function(a, b, c, d) {
			var e = "<div>" + b + "</div>";
			switch (c) {
			case "error":
				e = '<div class="messager-icon messager-error"></div>' + e;
				break;
			case "info":
				e = '<div class="messager-icon messager-info"></div>' + e;
				break;
			case "question":
				e = '<div class="messager-icon messager-question"></div>' + e;
				break;
			case "warning":
				e = '<div class="messager-icon messager-warning"></div>' + e
			}
			e += '<div style="clear:both;"/>';
			var f = {};
			f[$.messager.defaults.ok] = function() {
				g.window("close");
				if (d) return d(),
				!1
			};
			var g = _27f(a, e, f);
			return g
		},
		confirm: function(a, b, c) {
			var d = '<div class="messager-icon messager-question"></div><div>' + b + "</div>" + '<div style="clear:both;"/>',
			e = {};
			e[$.messager.defaults.ok] = function() {
				f.window("close");
				if (c) return c(!0),
				!1
			},
			e[$.messager.defaults.cancel] = function() {
				f.window("close");
				if (c) return c(!1),
				!1
			};
			var f = _27f(a, d, e);
			return f
		},
		prompt: function(a, b, c) {
			var d = '<div class="messager-icon messager-question"></div><div>' + b + "</div>" + "<br/>" + '<div style="clear:both;"/>' + '<div><input class="messager-input" type="text"/></div>',
			e = {};
			e[$.messager.defaults.ok] = function() {
				f.window("close");
				if (c) return c($(".messager-input", f).val()),
				!1
			},
			e[$.messager.defaults.cancel] = function() {
				f.window("close");
				if (c) return c(),
				!1
			};
			var f = _27f(a, d, e);
			return f.children("input.messager-input").focus(),
			f
		},
		progress: function(a) {
			var b = {
				bar: function() {
					return $("body>div.messager-window").find("div.messager-p-bar")
				},
				close: function() {
					var a = $("body>div.messager-window>div.messager-body:has(div.messager-progress)");
					a.length && a.window("close")
				}
			};
			if (typeof a == "string") {
				var c = b[a];
				return c()
			}
			var d = $.extend({
				title: "",
				msg: "",
				text: undefined,
				interval: 300
			},
			a || {}),
			e = '<div class="messager-progress"><div class="messager-p-msg"></div><div class="messager-p-bar"></div></div>',
			f = _27f(d.title, e, null);
			f.find("div.messager-p-msg").html(d.msg);
			var g = f.find("div.messager-p-bar");
			return g.progressbar({
				text: d.text
			}),
			f.window({
				closable: !1,
				onClose: function() {
					this.timer && clearInterval(this.timer),
					$(this).window("destroy")
				}
			}),
			d.interval && (f[0].timer = setInterval(function() {
				var a = g.progressbar("getValue");
				a += 10,
				a > 100 && (a = 0),
				g.progressbar("setValue", a)
			},
			d.interval)),
			f
		}
	},
	$.messager.defaults = {
		ok: "Ok",
		cancel: "Cancel"
	}
} (jQuery),
function(a) {
	function b(b) {
		function j(a, b) {
			var c = 0;
			for (var d = 0; d < e.length; d++) {
				var h = e[d],
				i = h.panel("header")._outerHeight(g);
				if (h.panel("options").collapsible == a) {
					var j = isNaN(b) ? undefined: b + g * i.length;
					h.panel("resize", {
						width: f.width(),
						height: a ? j: undefined
					}),
					c += h.panel("panel").outerHeight() - g
				}
			}
			return c
		}
		var c = a.data(b, "accordion"),
		d = c.options,
		e = c.panels,
		f = a(b);
		d.fit ? a.extend(d, f._fit()) : f._fit(!1),
		isNaN(d.width) ? f.css("width", "") : f._outerWidth(d.width);
		var g = 0,
		h = "auto",
		i = f.find(">div.panel>div.accordion-header");
		i.length && (g = a(i[0]).css("height", "")._outerHeight()),
		isNaN(d.height) ? f.css("height", "") : (f._outerHeight(d.height), h = f.height() - g * i.length),
		j(!0, h - j(!1) + 1)
	}
	function c(b, c, d, e) {
		var f = a.data(b, "accordion").panels,
		g = [];
		for (var h = 0; h < f.length; h++) {
			var i = f[h];
			if (c) i.panel("options")[c] == d && g.push(i);
			else if (i[0] == a(d)[0]) return h
		}
		return c ? e ? g: g.length ? g[0] : null: -1
	}
	function d(a) {
		return c(a, "collapsed", !1, !0)
	}
	function e(a) {
		var b = d(a);
		return b.length ? b[0] : null
	}
	function f(a, b) {
		return c(a, null, b)
	}
	function g(b, d) {
		var e = a.data(b, "accordion").panels;
		return typeof d == "number" ? d < 0 || d >= e.length ? null: e[d] : c(b, "title", d)
	}
	function h(b) {
		var c = a.data(b, "accordion").options,
		d = a(b);
		c.border ? d.removeClass("accordion-noborder") : d.addClass("accordion-noborder")
	}
	function i(c) {
		var d = a.data(c, "accordion"),
		e = a(c);
		e.addClass("accordion"),
		d.panels = [],
		e.children("div").each(function() {
			var b = a.extend({},
			a.parser.parseOptions(this), {
				selected: a(this).attr("selected") ? !0 : undefined
			}),
			e = a(this);
			d.panels.push(e),
			j(c, e, b)
		}),
		e.bind("_resize",
		function(d, e) {
			var f = a.data(c, "accordion").options;
			return (f.fit == 1 || e) && b(c),
			!1
		})
	}
	function j(b, c, e) {
		var g = a.data(b, "accordion").options;
		c.panel(a.extend({},
		{
			collapsible: !0,
			minimizable: !1,
			maximizable: !1,
			closable: !1,
			doSize: !1,
			collapsed: !0,
			headerCls: "accordion-header",
			bodyCls: "accordion-body"
		},
		e, {
			onBeforeExpand: function() {
				if (e.onBeforeExpand && e.onBeforeExpand.call(this) == 0) return ! 1;
				if (!g.multiple) {
					var c = a.grep(d(b),
					function(a) {
						return a.panel("options").collapsible
					});
					for (var h = 0; h < c.length; h++) l(b, f(b, c[h]))
				}
				var i = a(this).panel("header");
				i.addClass("accordion-header-selected"),
				i.find(".accordion-collapse").removeClass("accordion-expand")
			},
			onExpand: function() {
				e.onExpand && e.onExpand.call(this),
				g.onSelect.call(b, a(this).panel("options").title, f(b, this))
			},
			onBeforeCollapse: function() {
				if (e.onBeforeCollapse && e.onBeforeCollapse.call(this) == 0) return ! 1;
				var b = a(this).panel("header");
				b.removeClass("accordion-header-selected"),
				b.find(".accordion-collapse").addClass("accordion-expand")
			},
			onCollapse: function() {
				e.onCollapse && e.onCollapse.call(this),
				g.onUnselect.call(b, a(this).panel("options").title, f(b, this))
			}
		}));
		var h = c.panel("header"),
		i = h.children("div.panel-tool");
		i.children("a.panel-tool-collapse").hide();
		var j = a('<a href="javascript:void(0)"></a>').addClass("accordion-collapse accordion-expand").appendTo(i);
		j.bind("click",
		function() {
			var a = f(b, c);
			return c.panel("options").collapsed ? k(b, a) : l(b, a),
			!1
		}),
		c.panel("options").collapsible ? j.show() : j.hide(),
		h.click(function() {
			return a(this).find("a.accordion-collapse:visible").triggerHandler("click"),
			!1
		})
	}
	function k(b, c) {
		var d = g(b, c);
		if (!d) return;
		n(b);
		var e = a.data(b, "accordion").options;
		d.panel("expand", e.animate)
	}
	function l(b, c) {
		var d = g(b, c);
		if (!d) return;
		n(b);
		var e = a.data(b, "accordion").options;
		d.panel("collapse", e.animate)
	}
	function m(b) {
		function g(a) {
			var c = d.animate;
			d.animate = !1,
			k(b, a),
			d.animate = c
		}
		var d = a.data(b, "accordion").options,
		e = c(b, "selected", !0);
		e ? g(f(b, e)) : g(d.selected)
	}
	function n(b) {
		var c = a.data(b, "accordion").panels;
		for (var d = 0; d < c.length; d++) c[d].stop(!0, !0)
	}
	function o(c, d) {
		var e = a.data(c, "accordion"),
		f = e.options,
		g = e.panels;
		d.selected == undefined && (d.selected = !0),
		n(c);
		var h = a("<div></div>").appendTo(c);
		g.push(h),
		j(c, h, d),
		b(c),
		f.onAdd.call(c, d.title, g.length - 1),
		d.selected && k(c, g.length - 1)
	}
	function p(c, d) {
		var h = a.data(c, "accordion"),
		i = h.options,
		j = h.panels;
		n(c);
		var l = g(c, d),
		m = l.panel("options").title,
		o = f(c, l);
		if (!l) return;
		if (i.onBeforeRemove.call(c, m, o) == 0) return;
		j.splice(o, 1),
		l.panel("destroy");
		if (j.length) {
			b(c);
			var p = e(c);
			p || k(c, 0)
		}
		i.onRemove.call(c, m, o)
	}
	a.fn.accordion = function(c, d) {
		return typeof c == "string" ? a.fn.accordion.methods[c](this, d) : (c = c || {},
		this.each(function() {
			var d = a.data(this, "accordion");
			d ? a.extend(d.options, c) : (a.data(this, "accordion", {
				options: a.extend({},
				a.fn.accordion.defaults, a.fn.accordion.parseOptions(this), c),
				accordion: a(this).addClass("accordion"),
				panels: []
			}), i(this)),
			h(this),
			b(this),
			m(this)
		}))
	},
	a.fn.accordion.methods = {
		options: function(b) {
			return a.data(b[0], "accordion").options
		},
		panels: function(b) {
			return a.data(b[0], "accordion").panels
		},
		resize: function(a) {
			return a.each(function() {
				b(this)
			})
		},
		getSelections: function(a) {
			return d(a[0])
		},
		getSelected: function(a) {
			return e(a[0])
		},
		getPanel: function(a, b) {
			return g(a[0], b)
		},
		getPanelIndex: function(a, b) {
			return f(a[0], b)
		},
		select: function(a, b) {
			return a.each(function() {
				k(this, b)
			})
		},
		unselect: function(a, b) {
			return a.each(function() {
				l(this, b)
			})
		},
		add: function(a, b) {
			return a.each(function() {
				o(this, b)
			})
		},
		remove: function(a, b) {
			return a.each(function() {
				p(this, b)
			})
		}
	},
	a.fn.accordion.parseOptions = function(b) {
		var c = a(b);
		return a.extend({},
		a.parser.parseOptions(b, ["width", "height", {
			fit: "boolean",
			border: "boolean",
			animate: "boolean",
			multiple: "boolean",
			selected: "number"
		}]))
	},
	a.fn.accordion.defaults = {
		width: "auto",
		height: "auto",
		fit: !1,
		border: !0,
		animate: !0,
		multiple: !1,
		selected: 0,
		onSelect: function(a, b) {},
		onUnselect: function(a, b) {},
		onAdd: function(a, b) {},
		onBeforeRemove: function(a, b) {},
		onRemove: function(a, b) {}
	}
} (jQuery),
function($) {
	function _2e8(a) {
		var b = $.data(a, "tabs").options;
		if (b.tabPosition == "left" || b.tabPosition == "right" || !b.showHeader) return;
		var c = $(a).children("div.tabs-header"),
		d = c.children("div.tabs-tool"),
		e = c.children("div.tabs-scroller-left"),
		f = c.children("div.tabs-scroller-right"),
		g = c.children("div.tabs-wrap"),
		h = c.outerHeight();
		b.plain && (h -= h - c.height()),
		d._outerHeight(h);
		var i = 0;
		$("ul.tabs li", c).each(function() {
			i += $(this).outerWidth(!0)
		});
		var j = c.width() - d._outerWidth();
		i > j ? (e.add(f).show()._outerHeight(h), b.toolPosition == "left" ? (d.css({
			left: e.outerWidth(),
			right: ""
		}), g.css({
			marginLeft: e.outerWidth() + d._outerWidth(),
			marginRight: f._outerWidth(),
			width: j - e.outerWidth() - f.outerWidth()
		})) : (d.css({
			left: "",
			right: f.outerWidth()
		}), g.css({
			marginLeft: e.outerWidth(),
			marginRight: f.outerWidth() + d._outerWidth(),
			width: j - e.outerWidth() - f.outerWidth()
		}))) : (e.add(f).hide(), b.toolPosition == "left" ? (d.css({
			left: 0,
			right: ""
		}), g.css({
			marginLeft: d._outerWidth(),
			marginRight: 0,
			width: j
		})) : (d.css({
			left: "",
			right: 0
		}), g.css({
			marginLeft: 0,
			marginRight: d._outerWidth(),
			width: j
		})))
	}
	function _2f0(_2f1) {
		var opts = $.data(_2f1, "tabs").options,
		_2f2 = $(_2f1).children("div.tabs-header");
		if (opts.tools) if (typeof opts.tools == "string") $(opts.tools).addClass("tabs-tool").appendTo(_2f2),
		$(opts.tools).show();
		else {
			_2f2.children("div.tabs-tool").remove();
			var _2f3 = $('<div class="tabs-tool"><table cellspacing="0" cellpadding="0" style="height:100%"><tr></tr></table></div>').appendTo(_2f2),
			tr = _2f3.find("tr");
			for (var i = 0; i < opts.tools.length; i++) {
				var td = $("<td></td>").appendTo(tr),
				tool = $('<a href="javascript:void(0);"></a>').appendTo(td);
				tool[0].onclick = eval(opts.tools[i].handler ||
				function() {}),
				tool.linkbutton($.extend({},
				opts.tools[i], {
					plain: !0
				}))
			}
		} else _2f2.children("div.tabs-tool").remove()
	}
	function _2f4(a) {
		var b = $.data(a, "tabs"),
		c = b.options,
		d = $(a);
		c.fit ? $.extend(c, d._fit()) : d._fit(!1),
		d.width(c.width).height(c.height);
		var e = $(a).children("div.tabs-header"),
		f = $(a).children("div.tabs-panels"),
		g = e.find("div.tabs-wrap"),
		h = g.find(".tabs");
		for (var i = 0; i < b.tabs.length; i++) {
			var j = b.tabs[i].panel("options"),
			k = j.tab.find("a.tabs-inner"),
			l = parseInt(j.tabWidth || c.tabWidth) || undefined;
			l ? k._outerWidth(l) : k.css("width", ""),
			k._outerHeight(c.tabHeight),
			k.css("lineHeight", k.height() + "px")
		}
		if (c.tabPosition == "left" || c.tabPosition == "right") e._outerWidth(c.showHeader ? c.headerWidth: 0),
		f._outerWidth(d.width() - e.outerWidth()),
		e.add(f)._outerHeight(c.height),
		g._outerWidth(e.width()),
		h._outerWidth(g.width()).css("height", "");
		else {
			var m = e.children("div.tabs-scroller-left,div.tabs-scroller-right,div.tabs-tool");
			e._outerWidth(c.width).css("height", ""),
			c.showHeader ? (e.css("background-color", ""), g.css("height", ""), m.show()) : (e.css("background-color", "transparent"), e._outerHeight(0), g._outerHeight(0), m.hide()),
			h._outerHeight(c.tabHeight).css("width", ""),
			_2e8(a);
			var n = c.height;
			isNaN(n) ? f.height("auto") : f._outerHeight(n - e.outerHeight());
			var l = c.width;
			isNaN(l) ? f.width("auto") : f._outerWidth(l)
		}
	}
	function _2fc(a) {
		var b = $.data(a, "tabs").options,
		c = _2fe(a);
		if (c) {
			var d = $(a).children("div.tabs-panels"),
			e = b.width == "auto" ? "auto": d.width(),
			f = b.height == "auto" ? "auto": d.height();
			c.panel("resize", {
				width: e,
				height: f
			})
		}
	}
	function _302(a) {
		var b = $.data(a, "tabs").tabs,
		c = $(a);
		c.addClass("tabs-container");
		var d = $('<div class="tabs-panels"></div>').insertBefore(c);
		c.children("div").each(function() {
			d[0].appendChild(this)
		}),
		c[0].appendChild(d[0]),
		$('<div class="tabs-header"><div class="tabs-scroller-left"></div><div class="tabs-scroller-right"></div><div class="tabs-wrap"><ul class="tabs"></ul></div></div>').prependTo(a),
		c.children("div.tabs-panels").children("div").each(function(c) {
			var d = $.extend({},
			$.parser.parseOptions(this), {
				selected: $(this).attr("selected") ? !0 : undefined
			}),
			e = $(this);
			b.push(e),
			_310(a, e, d)
		}),
		c.children("div.tabs-header").find(".tabs-scroller-left, .tabs-scroller-right").hover(function() {
			$(this).addClass("tabs-scroller-over")
		},
		function() {
			$(this).removeClass("tabs-scroller-over")
		}),
		c.bind("_resize",
		function(b, c) {
			var d = $.data(a, "tabs").options;
			if (d.fit == 1 || c) _2f4(a),
			_2fc(a);
			return ! 1
		})
	}
	function _305(a) {
		function d(a) {
			var b = 0;
			return a.parent().children("li").each(function(c) {
				if (a[0] == this) return b = c,
				!1
			}),
			b
		}
		var b = $.data(a, "tabs"),
		c = b.options;
		$(a).children("div.tabs-header").unbind().bind("click",
		function(e) {
			if ($(e.target).hasClass("tabs-scroller-left")) $(a).tabs("scrollBy", -c.scrollIncrement);
			else if ($(e.target).hasClass("tabs-scroller-right")) $(a).tabs("scrollBy", c.scrollIncrement);
			else {
				var f = $(e.target).closest("li");
				if (f.hasClass("tabs-disabled")) return;
				var g = $(e.target).closest("a.tabs-close");
				if (g.length) _321(a, d(f));
				else if (f.length) {
					var h = d(f),
					i = b.tabs[h].panel("options");
					i.collapsible ? i.closed ? _317(a, h) : _338(a, h) : _317(a, h)
				}
			}
		}).bind("contextmenu",
		function(b) {
			var e = $(b.target).closest("li");
			if (e.hasClass("tabs-disabled")) return;
			e.length && c.onContextMenu.call(a, b, e.find("span.tabs-title").html(), d(e))
		})
	}
	function _30c(a) {
		var b = $.data(a, "tabs").options,
		c = $(a).children("div.tabs-header"),
		d = $(a).children("div.tabs-panels");
		c.removeClass("tabs-header-top tabs-header-bottom tabs-header-left tabs-header-right"),
		d.removeClass("tabs-panels-top tabs-panels-bottom tabs-panels-left tabs-panels-right"),
		b.tabPosition == "top" ? c.insertBefore(d) : b.tabPosition == "bottom" ? (c.insertAfter(d), c.addClass("tabs-header-bottom"), d.addClass("tabs-panels-top")) : b.tabPosition == "left" ? (c.addClass("tabs-header-left"), d.addClass("tabs-panels-right")) : b.tabPosition == "right" && (c.addClass("tabs-header-right"), d.addClass("tabs-panels-left")),
		b.plain == 1 ? c.addClass("tabs-header-plain") : c.removeClass("tabs-header-plain"),
		b.border == 1 ? (c.removeClass("tabs-header-noborder"), d.removeClass("tabs-panels-noborder")) : (c.addClass("tabs-header-noborder"), d.addClass("tabs-panels-noborder"))
	}
	function _310(a, b, c) {
		var d = $.data(a, "tabs");
		c = c || {},
		b.panel($.extend({},
		c, {
			border: !1,
			noheader: !0,
			closed: !0,
			doSize: !1,
			iconCls: c.icon ? c.icon: undefined,
			onLoad: function() {
				c.onLoad && c.onLoad.call(this, arguments),
				d.options.onLoad.call(a, $(this))
			}
		}));
		var e = b.panel("options"),
		f = $(a).children("div.tabs-header").find("ul.tabs");
		e.tab = $("<li></li>").appendTo(f),
		e.tab.append('<a href="javascript:void(0)" class="tabs-inner"><span class="tabs-title"></span><span class="tabs-icon"></span></a>'),
		$(a).tabs("update", {
			tab: b,
			options: e
		})
	}
	function _314(a, b) {
		var c = $.data(a, "tabs").options,
		d = $.data(a, "tabs").tabs;
		b.selected == undefined && (b.selected = !0);
		var e = $("<div></div>").appendTo($(a).children("div.tabs-panels"));
		d.push(e),
		_310(a, e, b),
		c.onAdd.call(a, b.title, d.length - 1),
		_2f4(a),
		b.selected && _317(a, d.length - 1)
	}
	function _318(a, b) {
		var c = $.data(a, "tabs").selectHis,
		d = b.tab,
		e = d.panel("options").title;
		d.panel($.extend({},
		b.options, {
			iconCls: b.options.icon ? b.options.icon: undefined
		}));
		var f = d.panel("options"),
		g = f.tab,
		h = g.find("span.tabs-title"),
		i = g.find("span.tabs-icon");
		h.html(f.title),
		i.attr("class", "tabs-icon"),
		g.find("a.tabs-close").remove(),
		f.closable ? (h.addClass("tabs-closable"), $('<a href="javascript:void(0)" class="tabs-close"></a>').appendTo(g)) : h.removeClass("tabs-closable"),
		f.iconCls ? (h.addClass("tabs-with-icon"), i.addClass(f.iconCls)) : h.removeClass("tabs-with-icon");
		if (e != f.title) for (var j = 0; j < c.length; j++) c[j] == e && (c[j] = f.title);
		g.find("span.tabs-p-tool").remove();
		if (f.tools) {
			var k = $('<span class="tabs-p-tool"></span>').insertAfter(g.find("a.tabs-inner"));
			if ($.isArray(f.tools)) for (var j = 0; j < f.tools.length; j++) {
				var l = $('<a href="javascript:void(0)"></a>').appendTo(k);
				l.addClass(f.tools[j].iconCls),
				f.tools[j].handler && l.bind("click", {
					handler: f.tools[j].handler
				},
				function(a) {
					if ($(this).parents("li").hasClass("tabs-disabled")) return;
					a.data.handler.call(this)
				})
			} else $(f.tools).children().appendTo(k);
			var m = k.children().length * 12;
			f.closable ? m += 8 : (m -= 3, k.css("right", "5px")),
			h.css("padding-right", m + "px")
		}
		_2f4(a),
		$.data(a, "tabs").options.onUpdate.call(a, f.title, _320(a, d))
	}
	function _321(a, b) {
		var c = $.data(a, "tabs").options,
		d = $.data(a, "tabs").tabs,
		e = $.data(a, "tabs").selectHis;
		if (!_325(a, b)) return;
		var f = _326(a, b),
		g = f.panel("options").title,
		h = _320(a, f);
		if (c.onBeforeClose.call(a, g, h) == 0) return;
		var f = _326(a, b, !0);
		f.panel("options").tab.remove(),
		f.panel("destroy"),
		c.onClose.call(a, g, h),
		_2f4(a);
		for (var i = 0; i < e.length; i++) e[i] == g && (e.splice(i, 1), i--);
		var j = e.pop();
		j ? _317(a, j) : d.length && _317(a, 0)
	}
	function _326(a, b, c) {
		var d = $.data(a, "tabs").tabs;
		if (typeof b == "number") {
			if (b < 0 || b >= d.length) return null;
			var e = d[b];
			return c && d.splice(b, 1),
			e
		}
		for (var f = 0; f < d.length; f++) {
			var e = d[f];
			if (e.panel("options").title == b) return c && d.splice(f, 1),
			e
		}
		return null
	}
	function _320(a, b) {
		var c = $.data(a, "tabs").tabs;
		for (var d = 0; d < c.length; d++) if (c[d][0] == $(b)[0]) return d;
		return - 1
	}
	function _2fe(a) {
		var b = $.data(a, "tabs").tabs;
		for (var c = 0; c < b.length; c++) {
			var d = b[c];
			if (d.panel("options").closed == 0) return d
		}
		return null
	}
	function _32f(a) {
		var b = $.data(a, "tabs"),
		c = b.tabs;
		for (var d = 0; d < c.length; d++) if (c[d].panel("options").selected) {
			_317(a, d);
			return
		}
		_317(a, b.options.selected)
	}
	function _317(a, b) {
		var c = $.data(a, "tabs"),
		d = c.options,
		e = c.tabs,
		f = c.selectHis;
		if (e.length == 0) return;
		var g = _326(a, b);
		if (!g) return;
		var h = _2fe(a);
		if (h) {
			if (g[0] == h[0]) {
				_2fc(a);
				return
			}
			_338(a, _320(a, h));
			if (!h.panel("options").closed) return
		}
		g.panel("open");
		var i = g.panel("options").title;
		f.push(i);
		var j = g.panel("options").tab;
		j.addClass("tabs-selected");
		var k = $(a).find(">div.tabs-header>div.tabs-wrap"),
		l = j.position().left,
		m = l + j.outerWidth();
		if (l < 0 || m > k.width()) {
			var n = l - (k.width() - j.width()) / 2;
			$(a).tabs("scrollBy", n)
		} else $(a).tabs("scrollBy", 0);
		_2fc(a),
		d.onSelect.call(a, i, _320(a, g))
	}
	function _338(a, b) {
		var c = $.data(a, "tabs"),
		d = _326(a, b);
		if (d) {
			var e = d.panel("options");
			e.closed || (d.panel("close"), e.closed && (e.tab.removeClass("tabs-selected"), c.options.onUnselect.call(a, e.title, _320(a, d))))
		}
	}
	function _325(a, b) {
		return _326(a, b) != null
	}
	function _341(a, b) {
		var c = $.data(a, "tabs").options;
		c.showHeader = b,
		$(a).tabs("resize")
	}
	$.fn.tabs = function(a, b) {
		return typeof a == "string" ? $.fn.tabs.methods[a](this, b) : (a = a || {},
		this.each(function() {
			var b = $.data(this, "tabs"),
			c;
			b ? (c = $.extend(b.options, a), b.options = c) : ($.data(this, "tabs", {
				options: $.extend({},
				$.fn.tabs.defaults, $.fn.tabs.parseOptions(this), a),
				tabs: [],
				selectHis: []
			}), _302(this)),
			_2f0(this),
			_30c(this),
			_2f4(this),
			_305(this),
			_32f(this)
		}))
	},
	$.fn.tabs.methods = {
		options: function(a) {
			var b = a[0],
			c = $.data(b, "tabs").options,
			d = _2fe(b);
			return c.selected = d ? _320(b, d) : -1,
			c
		},
		tabs: function(a) {
			return $.data(a[0], "tabs").tabs
		},
		resize: function(a) {
			return a.each(function() {
				_2f4(this),
				_2fc(this)
			})
		},
		add: function(a, b) {
			return a.each(function() {
				_314(this, b)
			})
		},
		close: function(a, b) {
			return a.each(function() {
				_321(this, b)
			})
		},
		getTab: function(a, b) {
			return _326(a[0], b)
		},
		getTabIndex: function(a, b) {
			return _320(a[0], b)
		},
		getSelected: function(a) {
			return _2fe(a[0])
		},
		select: function(a, b) {
			return a.each(function() {
				_317(this, b)
			})
		},
		unselect: function(a, b) {
			return a.each(function() {
				_338(this, b)
			})
		},
		exists: function(a, b) {
			return _325(a[0], b)
		},
		update: function(a, b) {
			return a.each(function() {
				_318(this, b)
			})
		},
		enableTab: function(a, b) {
			return a.each(function() {
				$(this).tabs("getTab", b).panel("options").tab.removeClass("tabs-disabled")
			})
		},
		disableTab: function(a, b) {
			return a.each(function() {
				$(this).tabs("getTab", b).panel("options").tab.addClass("tabs-disabled")
			})
		},
		showHeader: function(a) {
			return a.each(function() {
				_341(this, !0)
			})
		},
		hideHeader: function(a) {
			return a.each(function() {
				_341(this, !1)
			})
		},
		scrollBy: function(a, b) {
			return a.each(function() {
				function e() {
					var a = 0,
					b = c.children("ul");
					return b.children("li").each(function() {
						a += $(this).outerWidth(!0)
					}),
					a - c.width() + (b.outerWidth() - b.width())
				}
				var a = $(this).tabs("options"),
				c = $(this).find(">div.tabs-header>div.tabs-wrap"),
				d = Math.min(c._scrollLeft() + b, e());
				c.animate({
					scrollLeft: d
				},
				a.scrollDuration)
			})
		}
	},
	$.fn.tabs.parseOptions = function(a) {
		return $.extend({},
		$.parser.parseOptions(a, ["width", "height", "tools", "toolPosition", "tabPosition", {
			fit: "boolean",
			border: "boolean",
			plain: "boolean",
			headerWidth: "number",
			tabWidth: "number",
			tabHeight: "number",
			selected: "number",
			showHeader: "boolean"
		}]))
	},
	$.fn.tabs.defaults = {
		width: "auto",
		height: "auto",
		headerWidth: 150,
		tabWidth: "auto",
		tabHeight: 27,
		selected: 0,
		showHeader: !0,
		plain: !1,
		fit: !1,
		border: !0,
		tools: null,
		toolPosition: "right",
		tabPosition: "top",
		scrollIncrement: 100,
		scrollDuration: 400,
		onLoad: function(a) {},
		onSelect: function(a, b) {},
		onUnselect: function(a, b) {},
		onBeforeClose: function(a, b) {},
		onClose: function(a, b) {},
		onAdd: function(a, b) {},
		onUpdate: function(a, b) {},
		onContextMenu: function(a, b, c) {}
	}
} (jQuery),
function(a) {
	function c(b) {
		function h(a) {
			var b = a.panel("options");
			return Math.min(Math.max(b.height, b.minHeight), b.maxHeight)
		}
		function j(a) {
			var b = a.panel("options");
			return Math.min(Math.max(b.width, b.minWidth), b.maxWidth)
		}
		function k(a, b) {
			if (!a.length || !i(a)) return;
			var c = a.panel("options"),
			d = h(a);
			a.panel("resize", {
				width: f.width(),
				height: d,
				left: 0,
				top: b == "n" ? 0 : f.height() - d
			}),
			g.height -= d,
			b == "n" && (g.top += d, !c.split && c.border && g.top--),
			!c.split && c.border && g.height++
		}
		function l(a, b) {
			if (!a.length || !i(a)) return;
			var c = a.panel("options"),
			d = j(a);
			a.panel("resize", {
				width: d,
				height: g.height,
				left: b == "e" ? f.width() - d: 0,
				top: g.top
			}),
			g.width -= d,
			b == "w" && (g.left += d, !c.split && c.border && g.left--),
			!c.split && c.border && g.width++
		}
		var c = a.data(b, "layout"),
		d = c.options,
		e = c.panels,
		f = a(b);
		b.tagName == "BODY" ? f._fit() : d.fit ? f.css(f._fit()) : f._fit(!1);
		var g = {
			top: 0,
			left: 0,
			width: f.width(),
			height: f.height()
		};
		k(i(e.expandNorth) ? e.expandNorth: e.north, "n"),
		k(i(e.expandSouth) ? e.expandSouth: e.south, "s"),
		l(i(e.expandEast) ? e.expandEast: e.east, "e"),
		l(i(e.expandWest) ? e.expandWest: e.west, "w"),
		e.center.panel("resize", g)
	}
	function d(b) {
		function f(c) {
			c.children("div").each(function() {
				var c = a.fn.layout.parsePanelOptions(this);
				"north,south,east,west,center".indexOf(c.region) >= 0 && e(b, c, this)
			})
		}
		var d = a(b);
		d.addClass("layout"),
		d.children("form").length ? f(d.children("form")) : f(d),
		d.append('<div class="layout-split-proxy-h"></div><div class="layout-split-proxy-v"></div>'),
		d.bind("_resize",
		function(d, e) {
			var f = a.data(b, "layout").options;
			return (f.fit == 1 || e) && c(b),
			!1
		})
	}
	function e(d, e, f) {
		e.region = e.region || "center";
		var h = a.data(d, "layout").panels,
		i = a(d),
		j = e.region;
		if (h[j].length) return;
		var k = a(f);
		k.length || (k = a("<div></div>").appendTo(i));
		var l = a.extend({},
		a.fn.layout.paneldefaults, {
			width: k.length ? parseInt(k[0].style.width) || k.outerWidth() : "auto",
			height: k.length ? parseInt(k[0].style.height) || k.outerHeight() : "auto",
			doSize: !1,
			collapsible: !0,
			cls: "layout-panel layout-panel-" + j,
			bodyCls: "layout-body",
			onOpen: function() {
				var b = a(this).panel("header").children("div.panel-tool");
				b.children("a.panel-tool-collapse").hide();
				var c = {
					north: "up",
					south: "down",
					east: "right",
					west: "left"
				};
				if (!c[j]) return;
				var e = "layout-button-" + c[j],
				f = b.children("a." + e);
				f.length || (f = a('<a href="javascript:void(0)"></a>').addClass(e).appendTo(b), f.bind("click", {
					dir: j
				},
				function(a) {
					return g(d, a.data.dir),
					!1
				})),
				a(this).panel("options").collapsible ? f.show() : f.hide()
			}
		},
		e);
		k.panel(l),
		h[j] = k;
		if (k.panel("options").split) {
			var m = k.panel("panel");
			m.addClass("layout-split-" + j);
			var n = "";
			j == "north" && (n = "s"),
			j == "south" && (n = "n"),
			j == "east" && (n = "w"),
			j == "west" && (n = "e"),
			m.resizable(a.extend({},
			{
				handles: n,
				onStartResize: function(c) {
					b = !0;
					if (j == "north" || j == "south") var e = a(">div.layout-split-proxy-v", d);
					else var e = a(">div.layout-split-proxy-h", d);
					var f = 0,
					g = 0,
					h = 0,
					k = 0,
					l = {
						display: "block"
					};
					j == "north" ? (l.top = parseInt(m.css("top")) + m.outerHeight() - e.height(), l.left = parseInt(m.css("left")), l.width = m.outerWidth(), l.height = e.height()) : j == "south" ? (l.top = parseInt(m.css("top")), l.left = parseInt(m.css("left")), l.width = m.outerWidth(), l.height = e.height()) : j == "east" ? (l.top = parseInt(m.css("top")) || 0, l.left = parseInt(m.css("left")) || 0, l.width = e.width(), l.height = m.outerHeight()) : j == "west" && (l.top = parseInt(m.css("top")) || 0, l.left = m.outerWidth() - e.width(), l.width = e.width(), l.height = m.outerHeight()),
					e.css(l),
					a('<div class="layout-mask"></div>').css({
						left: 0,
						top: 0,
						width: i.width(),
						height: i.height()
					}).appendTo(i)
				},
				onResize: function(b) {
					if (j == "north" || j == "south") {
						var c = a(">div.layout-split-proxy-v", d);
						c.css("top", b.pageY - a(d).offset().top - c.height() / 2)
					} else {
						var c = a(">div.layout-split-proxy-h", d);
						c.css("left", b.pageX - a(d).offset().left - c.width() / 2)
					}
					return ! 1
				},
				onStopResize: function(a) {
					i.children("div.layout-split-proxy-v,div.layout-split-proxy-h").hide(),
					k.panel("resize", a.data),
					c(d),
					b = !1,
					i.find(">div.layout-mask").remove()
				}
			},
			e))
		}
	}
	function f(b, c) {
		var d = a.data(b, "layout").panels;
		if (d[c].length) {
			d[c].panel("destroy"),
			d[c] = a();
			var e = "expand" + c.substring(0, 1).toUpperCase() + c.substring(1);
			d[e] && (d[e].panel("destroy"), d[e] = undefined)
		}
	}
	function g(c, d, e) {
		function n(b) {
			var e;
			b == "east" ? e = "layout-button-left": b == "west" ? e = "layout-button-right": b == "north" ? e = "layout-button-down": b == "south" && (e = "layout-button-up");
			var f = a("<div></div>").appendTo(c);
			return f.panel(a.extend({},
			a.fn.layout.paneldefaults, {
				cls: "layout-expand layout-expand-" + b,
				title: "&nbsp;",
				closed: !0,
				minWidth: 0,
				minHeight: 0,
				doSize: !1,
				tools: [{
					iconCls: e,
					handler: function() {
						return h(c, d),
						!1
					}
				}]
			})),
			f.panel("panel").hover(function() {
				a(this).addClass("layout-expand-over")
			},
			function() {
				a(this).removeClass("layout-expand-over")
			}),
			f
		}
		function o() {
			var b = a(c),
			e = f.center.panel("options"),
			g = k.collapsedSize;
			if (d == "east") {
				var h = e.width + k.width - g;
				return (k.split || !k.border) && h++,
				{
					resizeC: {
						width: h
					},
					expand: {
						left: b.width() - k.width
					},
					expandP: {
						top: e.top,
						left: b.width() - g,
						width: g,
						height: e.height
					},
					collapse: {
						left: b.width(),
						top: e.top,
						height: e.height
					}
				}
			}
			if (d == "west") {
				var h = e.width + k.width - g;
				return (k.split || !k.border) && h++,
				{
					resizeC: {
						width: h,
						left: g - 1
					},
					expand: {
						left: 0
					},
					expandP: {
						left: 0,
						top: e.top,
						width: g,
						height: e.height
					},
					collapse: {
						left: -k.width,
						top: e.top,
						height: e.height
					}
				}
			}
			if (d == "north") {
				var j = e.height;
				return i(f.expandNorth) || (j += k.height - g + (k.split || !k.border ? 1 : 0)),
				f.east.add(f.west).add(f.expandEast).add(f.expandWest).panel("resize", {
					top: g - 1,
					height: j
				}),
				{
					resizeC: {
						top: g - 1,
						height: j
					},
					expand: {
						top: 0
					},
					expandP: {
						top: 0,
						left: 0,
						width: b.width(),
						height: g
					},
					collapse: {
						top: -k.height,
						width: b.width()
					}
				}
			}
			if (d == "south") {
				var j = e.height;
				return i(f.expandSouth) || (j += k.height - g + (k.split || !k.border ? 1 : 0)),
				f.east.add(f.west).add(f.expandEast).add(f.expandWest).panel("resize", {
					height: j
				}),
				{
					resizeC: {
						height: j
					},
					expand: {
						top: b.height() - k.height
					},
					expandP: {
						top: b.height() - g,
						left: 0,
						width: b.width(),
						height: g
					},
					collapse: {
						top: b.height(),
						width: b.width()
					}
				}
			}
		}
		e == undefined && (e = "normal");
		var f = a.data(c, "layout").panels,
		j = f[d],
		k = j.panel("options");
		if (k.onBeforeCollapse.call(j) == 0) return;
		var l = "expand" + d.substring(0, 1).toUpperCase() + d.substring(1);
		f[l] || (f[l] = n(d), f[l].panel("panel").bind("click",
		function() {
			var e = o();
			return j.panel("expand", !1).panel("open").panel("resize", e.collapse),
			j.panel("panel").animate(e.expand,
			function() {
				a(this).unbind(".layout").bind("mouseleave.layout", {
					region: d
				},
				function(a) {
					if (b == 1) return;
					g(c, a.data.region)
				})
			}),
			!1
		}));
		var m = o();
		i(f[l]) || f.center.panel("resize", m.resizeC),
		j.panel("panel").animate(m.collapse, e,
		function() {
			j.panel("collapse", !1).panel("close"),
			f[l].panel("open").panel("resize", m.expandP),
			a(this).unbind(".layout")
		})
	}
	function h(b, d) {
		function j() {
			var c = a(b),
			f = e.center.panel("options");
			if (d == "east" && e.expandEast) return {
				collapse: {
					left: c.width(),
					top: f.top,
					height: f.height
				},
				expand: {
					left: c.width() - e.east.panel("options").width
				}
			};
			if (d == "west" && e.expandWest) return {
				collapse: {
					left: -e.west.panel("options").width,
					top: f.top,
					height: f.height
				},
				expand: {
					left: 0
				}
			};
			if (d == "north" && e.expandNorth) return {
				collapse: {
					top: -e.north.panel("options").height,
					width: c.width()
				},
				expand: {
					top: 0
				}
			};
			if (d == "south" && e.expandSouth) return {
				collapse: {
					top: c.height(),
					width: c.width()
				},
				expand: {
					top: c.height() - e.south.panel("options").height
				}
			}
		}
		var e = a.data(b, "layout").panels,
		f = e[d],
		g = f.panel("options");
		if (g.onBeforeExpand.call(f) == 0) return;
		var h = j(),
		i = "expand" + d.substring(0, 1).toUpperCase() + d.substring(1);
		e[i] && (e[i].panel("close"), f.panel("panel").stop(!0, !0), f.panel("expand", !1).panel("open").panel("resize", h.collapse), f.panel("panel").animate(h.expand,
		function() {
			c(b)
		}))
	}
	function i(a) {
		return a ? a.length ? a.panel("panel").is(":visible") : !1 : !1
	}
	function j(b) {
		var c = a.data(b, "layout").panels;
		c.east.length && c.east.panel("options").collapsed && g(b, "east", 0),
		c.west.length && c.west.panel("options").collapsed && g(b, "west", 0),
		c.north.length && c.north.panel("options").collapsed && g(b, "north", 0),
		c.south.length && c.south.panel("options").collapsed && g(b, "south", 0)
	}
	var b = !1;
	a.fn.layout = function(b, e) {
		return typeof b == "string" ? a.fn.layout.methods[b](this, e) : (b = b || {},
		this.each(function() {
			var e = a.data(this, "layout");
			if (e) a.extend(e.options, b);
			else {
				var f = a.extend({},
				a.fn.layout.defaults, a.fn.layout.parseOptions(this), b);
				a.data(this, "layout", {
					options: f,
					panels: {
						center: a(),
						north: a(),
						south: a(),
						east: a(),
						west: a()
					}
				}),
				d(this)
			}
			c(this),
			j(this)
		}))
	},
	a.fn.layout.methods = {
		resize: function(a) {
			return a.each(function() {
				c(this)
			})
		},
		panel: function(b, c) {
			return a.data(b[0], "layout").panels[c]
		},
		collapse: function(a, b) {
			return a.each(function() {
				g(this, b)
			})
		},
		expand: function(a, b) {
			return a.each(function() {
				h(this, b)
			})
		},
		add: function(b, d) {
			return b.each(function() {
				e(this, d),
				c(this),
				a(this).layout("panel", d.region).panel("options").collapsed && g(this, d.region, 0)
			})
		},
		remove: function(a, b) {
			return a.each(function() {
				f(this, b),
				c(this)
			})
		}
	},
	a.fn.layout.parseOptions = function(b) {
		return a.extend({},
		a.parser.parseOptions(b, [{
			fit: "boolean"
		}]))
	},
	a.fn.layout.defaults = {
		fit: !1
	},
	a.fn.layout.parsePanelOptions = function(b) {
		var c = a(b);
		return a.extend({},
		a.fn.panel.parseOptions(b), a.parser.parseOptions(b, ["region", {
			split: "boolean",
			collpasedSize: "number",
			minWidth: "number",
			minHeight: "number",
			maxWidth: "number",
			maxHeight: "number"
		}]))
	},
	a.fn.layout.paneldefaults = a.extend({},
	a.fn.panel.defaults, {
		region: null,
		split: !1,
		collapsedSize: 28,
		minWidth: 10,
		minHeight: 10,
		maxWidth: 1e4,
		maxHeight: 1e4
	})
} (jQuery),
function($) {
	function init(a) {
		function d(b) {
			var c = [];
			return b.addClass("menu"),
			c.push(b),
			b.hasClass("menu-content") || b.children("div").each(function() {
				var b = $(this).children("div");
				if (b.length) {
					b.insertAfter(a),
					this.submenu = b;
					var e = d(b);
					c = c.concat(e)
				}
			}),
			c
		}
		function e(b) {
			var c = $.parser.parseOptions(b[0], ["width", "height"]);
			b[0].originalHeight = c.height || 0,
			b.hasClass("menu-content") ? b[0].originalWidth = c.width || b._outerWidth() : (b[0].originalWidth = c.width || 0, b.children("div").each(function() {
				var b = $(this),
				c = $.extend({},
				$.parser.parseOptions(this, ["name", "iconCls", "href", {
					separator: "boolean"
				}]), {
					disabled: b.attr("disabled") ? !0 : undefined
				});
				c.separator && b.addClass("menu-sep");
				if (!b.hasClass("menu-sep")) {
					b[0].itemName = c.name || "",
					b[0].itemHref = c.href || "";
					var d = b.addClass("menu-item").html();
					b.empty().append($('<div class="menu-text"></div>').html(d)),
					c.iconCls && $('<div class="menu-icon"></div>').addClass(c.iconCls).appendTo(b),
					c.disabled && _3ad(a, b[0], !0),
					b[0].submenu && $('<div class="menu-rightarrow"></div>').appendTo(b),
					_3ae(a, b)
				}
			}), $('<div class="menu-line"></div>').prependTo(b)),
			_3af(a, b),
			b.hide(),
			_3b0(a, b)
		}
		$(a).appendTo("body"),
		$(a).addClass("menu-top"),
		$(document).unbind(".menu").bind("mousedown.menu",
		function(a) {
			var b = $(a.target).closest("div.menu,div.combo-p");
			if (b.length) return;
			$("body>div.menu-top:visible").menu("hide")
		});
		var b = d($(a));
		for (var c = 0; c < b.length; c++) e(b[c])
	}
	function _3af(a, b) {
		var c = $.data(a, "menu").options,
		d = b.attr("style") || "";
		b.css({
			display: "block",
			left: -1e4,
			height: "auto",
			overflow: "hidden"
		});
		var e = b[0],
		f = e.originalWidth || 0;
		f || (f = 0, b.find("div.menu-text").each(function() {
			f < $(this)._outerWidth() && (f = $(this)._outerWidth()),
			$(this).closest("div.menu-item")._outerHeight($(this)._outerHeight() + 2)
		}), f += 40),
		f = Math.max(f, c.minWidth);
		var g = e.originalHeight || b.outerHeight(),
		h = Math.max(e.originalHeight, b.outerHeight()) - 2;
		b._outerWidth(f)._outerHeight(g),
		b.children("div.menu-line")._outerHeight(h),
		d += ";width:" + e.style.width + ";height:" + e.style.height,
		b.attr("style", d)
	}
	function _3b0(a, b) {
		var c = $.data(a, "menu");
		b.unbind(".menu").bind("mouseenter.menu",
		function() {
			c.timer && (clearTimeout(c.timer), c.timer = null)
		}).bind("mouseleave.menu",
		function() {
			c.options.hideOnUnhover && (c.timer = setTimeout(function() {
				_3b8(a)
			},
			100))
		})
	}
	function _3ae(a, b) {
		if (!b.hasClass("menu-item")) return;
		b.unbind(".menu"),
		b.bind("click.menu",
		function() {
			if ($(this).hasClass("menu-item-disabled")) return;
			if (!this.submenu) {
				_3b8(a);
				var b = $(this).attr("href");
				b && (location.href = b)
			}
			var c = $(a).menu("getItem", this);
			$.data(a, "menu").options.onClick.call(a, c)
		}).bind("mouseenter.menu",
		function(c) {
			b.siblings().each(function() {
				this.submenu && _3bc(this.submenu),
				$(this).removeClass("menu-active")
			}),
			b.addClass("menu-active");
			if ($(this).hasClass("menu-item-disabled")) {
				b.addClass("menu-active-disabled");
				return
			}
			var d = b[0].submenu;
			d && $(a).menu("show", {
				menu: d,
				parent: b
			})
		}).bind("mouseleave.menu",
		function(a) {
			b.removeClass("menu-active menu-active-disabled");
			var c = b[0].submenu;
			c ? a.pageX >= parseInt(c.css("left")) ? b.addClass("menu-active") : _3bc(c) : b.removeClass("menu-active")
		})
	}
	function _3b8(a) {
		var b = $.data(a, "menu");
		return b && $(a).is(":visible") && (_3bc($(a)), b.options.onHide.call(a)),
		!1
	}
	function _3bf(a, b) {
		var c, d;
		b = b || {};
		var e = $(b.menu || a);
		if (e.hasClass("menu-top")) {
			var f = $.data(a, "menu").options;
			$.extend(f, b),
			c = f.left,
			d = f.top;
			if (f.alignTo) {
				var g = $(f.alignTo);
				c = g.offset().left,
				d = g.offset().top + g._outerHeight(),
				f.align == "right" && (c += g.outerWidth() - e.outerWidth())
			}
			c + e.outerWidth() > $(window)._outerWidth() + $(document)._scrollLeft() && (c = $(window)._outerWidth() + $(document).scrollLeft() - e.outerWidth() - 5),
			c < 0 && (c = 0),
			d + e.outerHeight() > $(window)._outerHeight() + $(document).scrollTop() && (d = $(window)._outerHeight() + $(document).scrollTop() - e.outerHeight() - 5)
		} else {
			var h = b.parent;
			c = h.offset().left + h.outerWidth() - 2,
			c + e.outerWidth() + 5 > $(window)._outerWidth() + $(document).scrollLeft() && (c = h.offset().left - e.outerWidth() + 2);
			var d = h.offset().top - 3;
			d + e.outerHeight() > $(window)._outerHeight() + $(document).scrollTop() && (d = $(window)._outerHeight() + $(document).scrollTop() - e.outerHeight() - 5)
		}
		e.css({
			left: c,
			top: d
		}),
		e.show(0,
		function() {
			e[0].shadow || (e[0].shadow = $('<div class="menu-shadow"></div>').insertAfter(e)),
			e[0].shadow.css({
				display: "block",
				zIndex: $.fn.menu.defaults.zIndex++,
				left: e.css("left"),
				top: e.css("top"),
				width: e.outerWidth(),
				height: e.outerHeight()
			}),
			e.css("z-index", $.fn.menu.defaults.zIndex++),
			e.hasClass("menu-top") && $.data(e[0], "menu").options.onShow.call(e[0])
		})
	}
	function _3bc(a) {
		function b(a) {
			a.stop(!0, !0),
			a[0].shadow && a[0].shadow.hide(),
			a.hide()
		}
		if (!a) return;
		b(a),
		a.find("div.menu-item").each(function() {
			this.submenu && _3bc(this.submenu),
			$(this).removeClass("menu-active")
		})
	}
	function _3c4(a, b) {
		function e(f) {
			f.children("div.menu-item").each(function() {
				var f = $(a).menu("getItem", this),
				g = d.empty().html(f.text).text();
				b == $.trim(g) ? c = f: this.submenu && !c && e(this.submenu)
			})
		}
		var c = null,
		d = $("<div></div>");
		return e($(a)),
		d.remove(),
		c
	}
	function _3ad(a, b, c) {
		var d = $(b);
		if (!d.hasClass("menu-item")) return;
		c ? (d.addClass("menu-item-disabled"), b.onclick && (b.onclick1 = b.onclick, b.onclick = null)) : (d.removeClass("menu-item-disabled"), b.onclick1 && (b.onclick = b.onclick1, b.onclick1 = null))
	}
	function _3ca(_3cb, _3cc) {
		var menu = $(_3cb);
		if (_3cc.parent) {
			if (!_3cc.parent.submenu) {
				var _3cd = $('<div class="menu"><div class="menu-line"></div></div>').appendTo("body");
				_3cd.hide(),
				_3cc.parent.submenu = _3cd,
				$('<div class="menu-rightarrow"></div>').appendTo(_3cc.parent)
			}
			menu = _3cc.parent.submenu
		}
		if (_3cc.separator) var item = $('<div class="menu-sep"></div>').appendTo(menu);
		else {
			var item = $('<div class="menu-item"></div>').appendTo(menu);
			$('<div class="menu-text"></div>').html(_3cc.text).appendTo(item)
		}
		_3cc.iconCls && $('<div class="menu-icon"></div>').addClass(_3cc.iconCls).appendTo(item),
		_3cc.id && item.attr("id", _3cc.id),
		_3cc.name && (item[0].itemName = _3cc.name),
		_3cc.href && (item[0].itemHref = _3cc.href),
		_3cc.onclick && (typeof _3cc.onclick == "string" ? item.attr("onclick", _3cc.onclick) : item[0].onclick = eval(_3cc.onclick)),
		_3cc.handler && (item[0].onclick = eval(_3cc.handler)),
		_3cc.disabled && _3ad(_3cb, item[0], !0),
		_3ae(_3cb, item),
		_3b0(_3cb, menu),
		_3af(_3cb, menu)
	}
	function _3ce(a, b) {
		function c(a) {
			if (a.submenu) {
				a.submenu.children("div.menu-item").each(function() {
					c(this)
				});
				var b = a.submenu[0].shadow;
				b && b.remove(),
				a.submenu.remove()
			}
			$(a).remove()
		}
		c(b)
	}
	function _3d3(a) {
		$(a).children("div.menu-item").each(function() {
			_3ce(a, this)
		}),
		a.shadow && a.shadow.remove(),
		$(a).remove()
	}
	$.fn.menu = function(a, b) {
		return typeof a == "string" ? $.fn.menu.methods[a](this, b) : (a = a || {},
		this.each(function() {
			var b = $.data(this, "menu");
			b ? $.extend(b.options, a) : (b = $.data(this, "menu", {
				options: $.extend({},
				$.fn.menu.defaults, $.fn.menu.parseOptions(this), a)
			}), init(this)),
			$(this).css({
				left: b.options.left,
				top: b.options.top
			})
		}))
	},
	$.fn.menu.methods = {
		options: function(a) {
			return $.data(a[0], "menu").options
		},
		show: function(a, b) {
			return a.each(function() {
				_3bf(this, b)
			})
		},
		hide: function(a) {
			return a.each(function() {
				_3b8(this)
			})
		},
		destroy: function(a) {
			return a.each(function() {
				_3d3(this)
			})
		},
		setText: function(a, b) {
			return a.each(function() {
				$(b.target).children("div.menu-text").html(b.text)
			})
		},
		setIcon: function(a, b) {
			return a.each(function() {
				$(b.target).children("div.menu-icon").remove(),
				b.iconCls && $('<div class="menu-icon"></div>').addClass(b.iconCls).appendTo(b.target)
			})
		},
		getItem: function(a, b) {
			var c = $(b),
			d = {
				target: b,
				id: c.attr("id"),
				text: $.trim(c.children("div.menu-text").html()),
				disabled: c.hasClass("menu-item-disabled"),
				name: b.itemName,
				href: b.itemHref,
				onclick: b.onclick
			},
			e = c.children("div.menu-icon");
			if (e.length) {
				var f = [],
				g = e.attr("class").split(" ");
				for (var h = 0; h < g.length; h++) g[h] != "menu-icon" && f.push(g[h]);
				d.iconCls = f.join(" ")
			}
			return d
		},
		findItem: function(a, b) {
			return _3c4(a[0], b)
		},
		appendItem: function(a, b) {
			return a.each(function() {
				_3ca(this, b)
			})
		},
		removeItem: function(a, b) {
			return a.each(function() {
				_3ce(this, b)
			})
		},
		enableItem: function(a, b) {
			return a.each(function() {
				_3ad(this, b, !1)
			})
		},
		disableItem: function(a, b) {
			return a.each(function() {
				_3ad(this, b, !0)
			})
		}
	},
	$.fn.menu.parseOptions = function(a) {
		return $.extend({},
		$.parser.parseOptions(a, ["left", "top", {
			minWidth: "number",
			hideOnUnhover: "boolean"
		}]))
	},
	$.fn.menu.defaults = {
		zIndex: 11e4,
		left: 0,
		top: 0,
		alignTo: null,
		align: "left",
		minWidth: 120,
		hideOnUnhover: !0,
		onShow: function() {},
		onHide: function() {},
		onClick: function(a) {}
	}
} (jQuery),
function(a) {
	function b(b) {
		var d = a.data(b, "menubutton").options,
		e = a(b);
		e.linkbutton(d),
		e.removeClass(d.cls.btn1 + " " + d.cls.btn2).addClass("m-btn"),
		e.removeClass("m-btn-small m-btn-medium m-btn-large").addClass("m-btn-" + d.size);
		var f = e.find(".l-btn-left");
		a("<span></span>").addClass(d.cls.arrow).appendTo(f),
		a("<span></span>").addClass("m-btn-line").appendTo(f);
		if (d.menu) {
			a(d.menu).menu();
			var g = a(d.menu).menu("options"),
			h = g.onShow,
			i = g.onHide;
			a.extend(g, {
				onShow: function() {
					var b = a(this).menu("options"),
					c = a(b.alignTo),
					d = c.menubutton("options");
					c.addClass(d.plain == 1 ? d.cls.btn2: d.cls.btn1),
					h.call(this)
				},
				onHide: function() {
					var b = a(this).menu("options"),
					c = a(b.alignTo),
					d = c.menubutton("options");
					c.removeClass(d.plain == 1 ? d.cls.btn2: d.cls.btn1),
					i.call(this)
				}
			})
		}
		c(b, d.disabled)
	}
	function c(b, c) {
		var e = a.data(b, "menubutton").options;
		e.disabled = c;
		var f = a(b),
		g = f.find("." + e.cls.trigger);
		g.length || (g = f),
		g.unbind(".menubutton");
		if (c) f.linkbutton("disable");
		else {
			f.linkbutton("enable");
			var h = null;
			g.bind("click.menubutton",
			function() {
				return d(b),
				!1
			}).bind("mouseenter.menubutton",
			function() {
				return h = setTimeout(function() {
					d(b)
				},
				e.duration),
				!1
			}).bind("mouseleave.menubutton",
			function() {
				h && clearTimeout(h)
			})
		}
	}
	function d(b) {
		var c = a.data(b, "menubutton").options;
		if (c.disabled || !c.menu) return;
		a("body>div.menu-top").menu("hide");
		var d = a(b),
		e = a(c.menu);
		e.length && (e.menu("options").alignTo = d, e.menu("show", {
			alignTo: d,
			align: c.menuAlign
		})),
		d.blur()
	}
	a.fn.menubutton = function(c, d) {
		if (typeof c == "string") {
			var e = a.fn.menubutton.methods[c];
			return e ? e(this, d) : this.linkbutton(c, d)
		}
		return c = c || {},
		this.each(function() {
			var d = a.data(this, "menubutton");
			d ? a.extend(d.options, c) : (a.data(this, "menubutton", {
				options: a.extend({},
				a.fn.menubutton.defaults, a.fn.menubutton.parseOptions(this), c)
			}), a(this).removeAttr("disabled")),
			b(this)
		})
	},
	a.fn.menubutton.methods = {
		options: function(b) {
			var c = b.linkbutton("options"),
			d = a.data(b[0], "menubutton").options;
			return d.toggle = c.toggle,
			d.selected = c.selected,
			d
		},
		enable: function(a) {
			return a.each(function() {
				c(this, !1)
			})
		},
		disable: function(a) {
			return a.each(function() {
				c(this, !0)
			})
		},
		destroy: function(b) {
			return b.each(function() {
				var b = a(this).menubutton("options");
				b.menu && a(b.menu).menu("destroy"),
				a(this).remove()
			})
		}
	},
	a.fn.menubutton.parseOptions = function(b) {
		var c = a(b);
		return a.extend({},
		a.fn.linkbutton.parseOptions(b), a.parser.parseOptions(b, ["menu", {
			plain: "boolean",
			duration: "number"
		}]))
	},
	a.fn.menubutton.defaults = a.extend({},
	a.fn.linkbutton.defaults, {
		plain: !0,
		menu: null,
		menuAlign: "left",
		duration: 100,
		cls: {
			btn1: "m-btn-active",
			btn2: "m-btn-plain-active",
			arrow: "m-btn-downarrow",
			trigger: "m-btn"
		}
	})
} (jQuery),
function(a) {
	function b(b) {
		var c = a.data(b, "splitbutton").options;
		a(b).menubutton(c),
		a(b).addClass("s-btn")
	}
	a.fn.splitbutton = function(c, d) {
		if (typeof c == "string") {
			var e = a.fn.splitbutton.methods[c];
			return e ? e(this, d) : this.menubutton(c, d)
		}
		return c = c || {},
		this.each(function() {
			var d = a.data(this, "splitbutton");
			d ? a.extend(d.options, c) : (a.data(this, "splitbutton", {
				options: a.extend({},
				a.fn.splitbutton.defaults, a.fn.splitbutton.parseOptions(this), c)
			}), a(this).removeAttr("disabled")),
			b(this)
		})
	},
	a.fn.splitbutton.methods = {
		options: function(b) {
			var c = b.menubutton("options"),
			d = a.data(b[0], "splitbutton").options;
			return a.extend(d, {
				disabled: c.disabled,
				toggle: c.toggle,
				selected: c.selected
			}),
			d
		}
	},
	a.fn.splitbutton.parseOptions = function(b) {
		var c = a(b);
		return a.extend({},
		a.fn.linkbutton.parseOptions(b), a.parser.parseOptions(b, ["menu", {
			plain: "boolean",
			duration: "number"
		}]))
	},
	a.fn.splitbutton.defaults = a.extend({},
	a.fn.linkbutton.defaults, {
		plain: !0,
		menu: null,
		duration: 100,
		cls: {
			btn1: "m-btn-active s-btn-active",
			btn2: "m-btn-plain-active s-btn-plain-active",
			arrow: "m-btn-downarrow",
			trigger: "m-btn-line"
		}
	})
} (jQuery),
function($) {
	function init(a) {
		$(a).addClass("searchbox-f").hide();
		var b = $('<span class="searchbox"></span>').insertAfter(a),
		c = $('<input type="text" class="searchbox-text">').appendTo(b);
		$('<span><span class="searchbox-button"></span></span>').appendTo(b);
		var d = $(a).attr("name");
		return d && (c.attr("name", d), $(a).removeAttr("name").attr("searchboxName", d)),
		b
	}
	function _3fe(a, b) {
		var c = $.data(a, "searchbox").options,
		d = $.data(a, "searchbox").searchbox;
		b && (c.width = b),
		d.appendTo("body"),
		isNaN(c.width) && (c.width = d._outerWidth());
		var e = d.find("span.searchbox-button"),
		f = d.find("a.searchbox-menu"),
		g = d.find("input.searchbox-text");
		d._outerWidth(c.width)._outerHeight(c.height),
		g._outerWidth(d.width() - f._outerWidth() - e._outerWidth()),
		g.css({
			height: d.height() + "px",
			lineHeight: d.height() + "px"
		}),
		f._outerHeight(d.height()),
		e._outerHeight(d.height());
		var h = f.find("span.l-btn-left");
		h._outerHeight(d.height()),
		h.find("span.l-btn-text").css({
			height: h.height() + "px",
			lineHeight: h.height() + "px"
		}),
		d.insertAfter(a)
	}
	function _404(a) {
		function e(c) {
			b.searchbox.find("a.searchbox-menu").remove();
			var d = $('<a class="searchbox-menu" href="javascript:void(0)"></a>').html(c.text);
			d.prependTo(b.searchbox).menubutton({
				menu: b.menu,
				iconCls: c.iconCls
			}),
			b.searchbox.find("input.searchbox-text").attr("name", c.name || c.text),
			_3fe(a)
		}
		var b = $.data(a, "searchbox"),
		c = b.options;
		if (c.menu) {
			b.menu = $(c.menu).menu({
				onClick: function(a) {
					e(a)
				}
			});
			var d = b.menu.children("div.menu-item:first");
			b.menu.children("div.menu-item").each(function() {
				var a = $.extend({},
				$.parser.parseOptions(this), {
					selected: $(this).attr("selected") ? !0 : undefined
				});
				if (a.selected) return d = $(this),
				!1
			}),
			d.triggerHandler("click")
		} else b.searchbox.find("a.searchbox-menu").remove(),
		b.menu = null
	}
	function _409(a) {
		var b = $.data(a, "searchbox"),
		c = b.options,
		d = b.searchbox.find("input.searchbox-text"),
		e = b.searchbox.find(".searchbox-button");
		d.unbind(".searchbox"),
		e.unbind(".searchbox"),
		c.disabled || (d.bind("blur.searchbox",
		function(a) {
			c.value = $(this).val(),
			c.value == "" ? ($(this).val(c.prompt), $(this).addClass("searchbox-prompt")) : $(this).removeClass("searchbox-prompt")
		}).bind("focus.searchbox",
		function(a) {
			$(this).val() != c.value && $(this).val(c.value),
			$(this).removeClass("searchbox-prompt")
		}).bind("keydown.searchbox",
		function(b) {
			if (b.keyCode == 13) return b.preventDefault(),
			c.value = $(this).val(),
			c.searcher.call(a, c.value, d._propAttr("name")),
			!1
		}), e.bind("click.searchbox",
		function() {
			c.searcher.call(a, c.value, d._propAttr("name"))
		}).bind("mouseenter.searchbox",
		function() {
			$(this).addClass("searchbox-button-hover")
		}).bind("mouseleave.searchbox",
		function() {
			$(this).removeClass("searchbox-button-hover")
		}))
	}
	function _40e(a, b) {
		var c = $.data(a, "searchbox"),
		d = c.options,
		e = c.searchbox.find("input.searchbox-text"),
		f = c.searchbox.find("a.searchbox-menu");
		b ? (d.disabled = !0, $(a).attr("disabled", !0), e.attr("disabled", !0), f.length && f.menubutton("disable")) : (d.disabled = !1, $(a).removeAttr("disabled"), e.removeAttr("disabled"), f.length && f.menubutton("enable"))
	}
	function _413(a) {
		var b = $.data(a, "searchbox"),
		c = b.options,
		d = b.searchbox.find("input.searchbox-text");
		c.originalValue = c.value,
		c.value ? (d.val(c.value), d.removeClass("searchbox-prompt")) : (d.val(c.prompt), d.addClass("searchbox-prompt"))
	}
	$.fn.searchbox = function(a, b) {
		return typeof a == "string" ? $.fn.searchbox.methods[a](this, b) : (a = a || {},
		this.each(function() {
			var b = $.data(this, "searchbox");
			b ? $.extend(b.options, a) : b = $.data(this, "searchbox", {
				options: $.extend({},
				$.fn.searchbox.defaults, $.fn.searchbox.parseOptions(this), a),
				searchbox: init(this)
			}),
			_404(this),
			_413(this),
			_409(this),
			_40e(this, b.options.disabled),
			_3fe(this)
		}))
	},
	$.fn.searchbox.methods = {
		options: function(a) {
			return $.data(a[0], "searchbox").options
		},
		menu: function(a) {
			return $.data(a[0], "searchbox").menu
		},
		textbox: function(a) {
			return $.data(a[0], "searchbox").searchbox.find("input.searchbox-text")
		},
		getValue: function(a) {
			return $.data(a[0], "searchbox").options.value
		},
		setValue: function(a, b) {
			return a.each(function() {
				$(this).searchbox("options").value = b,
				$(this).searchbox("textbox").val(b),
				$(this).searchbox("textbox").blur()
			})
		},
		clear: function(a) {
			return a.each(function() {
				$(this).searchbox("setValue", "")
			})
		},
		reset: function(a) {
			return a.each(function() {
				var a = $(this).searchbox("options");
				$(this).searchbox("setValue", a.originalValue)
			})
		},
		getName: function(a) {
			return $.data(a[0], "searchbox").searchbox.find("input.searchbox-text").attr("name")
		},
		selectName: function(a, b) {
			return a.each(function() {
				var a = $.data(this, "searchbox").menu;
				a && a.children('div.menu-item[name="' + b + '"]').triggerHandler("click")
			})
		},
		destroy: function(a) {
			return a.each(function() {
				var a = $(this).searchbox("menu");
				a && a.menu("destroy"),
				$.data(this, "searchbox").searchbox.remove(),
				$(this).remove()
			})
		},
		resize: function(a, b) {
			return a.each(function() {
				_3fe(this, b)
			})
		},
		disable: function(a) {
			return a.each(function() {
				_40e(this, !0),
				_409(this)
			})
		},
		enable: function(a) {
			return a.each(function() {
				_40e(this, !1),
				_409(this)
			})
		}
	},
	$.fn.searchbox.parseOptions = function(_41c) {
		var t = $(_41c);
		return $.extend({},
		$.parser.parseOptions(_41c, ["width", "height", "prompt", "menu"]), {
			value: t.val() || undefined,
			disabled: t.attr("disabled") ? !0 : undefined,
			searcher: t.attr("searcher") ? eval(t.attr("searcher")) : undefined
		})
	},
	$.fn.searchbox.defaults = {
		width: "auto",
		height: 22,
		prompt: "",
		value: "",
		menu: null,
		disabled: !1,
		searcher: function(a, b) {}
	}
} (jQuery),
function($) {
	function init(a) {
		$(a).addClass("validatebox-text")
	}
	function _41f(a) {
		var b = $.data(a, "validatebox");
		b.validating = !1,
		b.timer && clearTimeout(b.timer),
		$(a).tooltip("destroy"),
		$(a).unbind(),
		$(a).remove()
	}
	function _422(a) {
		var b = $(a),
		c = $.data(a, "validatebox");
		b.unbind(".validatebox");
		if (c.options.novalidate) return;
		b.bind("focus.validatebox",
		function() {
			c.validating = !0,
			c.value = undefined,
			function() {
				c.validating && (c.value != b.val() ? (c.value = b.val(), c.timer && clearTimeout(c.timer), c.timer = setTimeout(function() {
					$(a).validatebox("validate")
				},
				c.options.delay)) : _429(a), setTimeout(arguments.callee, 200))
			} ()
		}).bind("blur.validatebox",
		function() {
			c.timer && (clearTimeout(c.timer), c.timer = undefined),
			c.validating = !1,
			_425(a)
		}).bind("mouseenter.validatebox",
		function() {
			b.hasClass("validatebox-invalid") && _426(a)
		}).bind("mouseleave.validatebox",
		function() {
			c.validating || _425(a)
		})
	}
	function _426(a) {
		var b = $.data(a, "validatebox"),
		c = b.options;
		$(a).tooltip($.extend({},
		c.tipOptions, {
			content: b.message,
			position: c.tipPosition,
			deltaX: c.deltaX
		})).tooltip("show"),
		b.tip = !0
	}
	function _429(a) {
		var b = $.data(a, "validatebox");
		b && b.tip && $(a).tooltip("reposition")
	}
	function _425(a) {
		var b = $.data(a, "validatebox");
		b.tip = !1,
		$(a).tooltip("hide")
	}
	function _42e(_42f) {
		function _432(a) {
			_430.message = a
		}
		function _433(_434, _435) {
			var _436 = /([a-zA-Z_]+)(.*)/.exec(_434),
			rule = opts.rules[_436[1]];
			if (rule && _431) {
				var _437 = _435 || opts.validParams || eval(_436[2]);
				if (!rule.validator.call(_42f, _431, _437)) {
					box.addClass("validatebox-invalid");
					var _438 = rule.message;
					if (_437) for (var i = 0; i < _437.length; i++) _438 = _438.replace(new RegExp("\\{" + i + "\\}", "g"), _437[i]);
					return _432(opts.invalidMessage || _438),
					_430.validating && _426(_42f),
					!1
				}
			}
			return ! 0
		}
		var _430 = $.data(_42f, "validatebox"),
		opts = _430.options,
		box = $(_42f),
		_431 = box.val();
		box.removeClass("validatebox-invalid"),
		_425(_42f);
		if (opts.novalidate || box.is(":disabled")) return ! 0;
		if (opts.required && _431 == "") return box.addClass("validatebox-invalid"),
		_432(opts.missingMessage),
		_430.validating && _426(_42f),
		!1;
		if (opts.validType) if ($.isArray(opts.validType)) {
			for (var i = 0; i < opts.validType.length; i++) if (!_433(opts.validType[i])) return ! 1
		} else if (typeof opts.validType == "string") {
			if (!_433(opts.validType)) return ! 1
		} else for (var _439 in opts.validType) {
			var _43a = opts.validType[_439];
			if (!_433(_439, _43a)) return ! 1
		}
		return ! 0
	}
	function _43b(a, b) {
		var c = $.data(a, "validatebox").options;
		b != undefined && (c.novalidate = b),
		c.novalidate && ($(a).removeClass("validatebox-invalid"), _425(a)),
		_422(a)
	}
	$.fn.validatebox = function(a, b) {
		return typeof a == "string" ? $.fn.validatebox.methods[a](this, b) : (a = a || {},
		this.each(function() {
			var b = $.data(this, "validatebox");
			b ? $.extend(b.options, a) : (init(this), $.data(this, "validatebox", {
				options: $.extend({},
				$.fn.validatebox.defaults, $.fn.validatebox.parseOptions(this), a)
			})),
			_43b(this),
			_42e(this)
		}))
	},
	$.fn.validatebox.methods = {
		options: function(a) {
			return $.data(a[0], "validatebox").options
		},
		destroy: function(a) {
			return a.each(function() {
				_41f(this)
			})
		},
		validate: function(a) {
			return a.each(function() {
				_42e(this)
			})
		},
		isValid: function(a) {
			return _42e(a[0])
		},
		enableValidation: function(a) {
			return a.each(function() {
				_43b(this, !1)
			})
		},
		disableValidation: function(a) {
			return a.each(function() {
				_43b(this, !0)
			})
		}
	},
	$.fn.validatebox.parseOptions = function(a) {
		var b = $(a);
		return $.extend({},
		$.parser.parseOptions(a, ["validType", "missingMessage", "invalidMessage", "tipPosition", {
			delay: "number",
			deltaX: "number"
		}]), {
			required: b.attr("required") ? !0 : undefined,
			novalidate: b.attr("novalidate") != undefined ? !0 : undefined
		})
	},
	$.fn.validatebox.defaults = {
		required: !1,
		validType: null,
		validParams: null,
		delay: 200,
		missingMessage: "This field is required.",
		invalidMessage: null,
		tipPosition: "right",
		deltaX: 0,
		novalidate: !1,
		tipOptions: {
			showEvent: "none",
			hideEvent: "none",
			showDelay: 0,
			hideDelay: 0,
			zIndex: "",
			onShow: function() {
				$(this).tooltip("tip").css({
					color: "#000",
					borderColor: "#CC9933",
					backgroundColor: "#FFFFCC"
				})
			},
			onHide: function() {
				$(this).tooltip("destroy")
			}
		},
		rules: {
			email: {
				validator: function(a) {
					return /^((([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+(\.([a-z]|\d|[!#\$%&'\*\+\-\/=\?\^_`{\|}~]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])+)*)|((\x22)((((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(([\x01-\x08\x0b\x0c\x0e-\x1f\x7f]|\x21|[\x23-\x5b]|[\x5d-\x7e]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(\\([\x01-\x09\x0b\x0c\x0d-\x7f]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]))))*(((\x20|\x09)*(\x0d\x0a))?(\x20|\x09)+)?(\x22)))@((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?$/i.test(a)
				},
				message: "Please enter a valid email address."
			},
			url: {
				validator: function(a) {
					return /^(https?|ftp):\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)+(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(\#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i.test(a)
				},
				message: "Please enter a valid URL."
			},
			length: {
				validator: function(a, b) {
					var c = $.trim(a).length;
					return c >= b[0] && c <= b[1]
				},
				message: "Please enter a value between {0} and {1}."
			},
			remote: {
				validator: function(a, b) {
					var c = {};
					c[b[1]] = a;
					var d = $.ajax({
						url: b[0],
						dataType: "json",
						data: c,
						async: !1,
						cache: !1,
						type: "post"
					}).responseText;
					return d == "true"
				},
				message: "Please fix this field."
			}
		}
	}
} (jQuery),
function(a) {
	function b(b, c) {
		function m() {
			var b = a("#" + f);
			if (!b.length) return;
			try {
				var c = b.contents()[0].readyState;
				c && c.toLowerCase() == "uninitialized" && setTimeout(m, 100)
			} catch(d) {
				o()
			}
		}
		function o() {
			var b = a("#" + f);
			if (!b.length) return;
			b.unbind();
			var d = "";
			try {
				var e = b.contents().find("body");
				d = e.html();
				if (d == "" && --n) {
					setTimeout(o, 100);
					return
				}
				var g = e.find(">textarea");
				if (g.length) d = g.val();
				else {
					var h = e.find(">pre");
					h.length && (d = h.html())
				}
			} catch(i) {}
			c.success && c.success(d),
			setTimeout(function() {
				b.unbind(),
				b.remove()
			},
			100)
		}
		c = c || {};
		var d = {};
		if (c.onSubmit && c.onSubmit.call(b, d) == 0) return;
		var e = a(b);
		c.url && e.attr("action", c.url);
		var f = "easyui_frame_" + (new Date).getTime(),
		g = a("<iframe id=" + f + " name=" + f + "></iframe>").attr("src", window.ActiveXObject ? "javascript:false": "about:blank").css({
			position: "absolute",
			top: -1e3,
			left: -1e3
		}),
		h = e.attr("target"),
		i = e.attr("action");
		e.attr("target", f);
		var j = a();
		try {
			g.appendTo("body"),
			g.bind("load", o);
			for (var k in d) {
				var l = a('<input type="hidden" name="' + k + '">').val(d[k]).appendTo(e);
				j = j.add(l)
			}
			m(),
			e[0].submit()
		} finally {
			e.attr("action", i),
			h ? e.attr("target", h) : e.removeAttr("target"),
			j.remove()
		}
		var n = 10
	}
	function c(b, c) {
		function f(c) {
			var e = a(b);
			for (var f in c) {
				var k = c[f],
				l = h(f, k);
				if (!l.length) {
					var m = i(f, k);
					m || (a('input[name="' + f + '"]', e).val(k), a('textarea[name="' + f + '"]', e).val(k), a('select[name="' + f + '"]', e).val(k))
				}
				j(f, k)
			}
			d.onLoadSuccess.call(b, c),
			g(b)
		}
		function h(c, d) {
			var e = a(b).find('input[name="' + c + '"][type=radio], input[name="' + c + '"][type=checkbox]');
			return e._propAttr("checked", !1),
			e.each(function() {
				var b = a(this); (b.val() == String(d) || a.inArray(b.val(), a.isArray(d) ? d: [d]) >= 0) && b._propAttr("checked", !0)
			}),
			e
		}
		function i(c, d) {
			var e = 0,
			f = ["numberbox", "slider"];
			for (var g = 0; g < f.length; g++) {
				var h = f[g],
				i = a(b).find("input[" + h + 'Name="' + c + '"]');
				i.length && (i[h]("setValue", d), e += i.length)
			}
			return e
		}
		function j(c, d) {
			var e = a(b),
			f = ["combobox", "combotree", "combogrid", "datetimebox", "datebox", "combo"],
			g = e.find('[comboName="' + c + '"]');
			if (g.length) for (var h = 0; h < f.length; h++) {
				var i = f[h];
				if (g.hasClass(i + "-f")) {
					g[i]("options").multiple ? g[i]("setValues", d) : g[i]("setValue", d);
					return
				}
			}
		}
		a.data(b, "form") || a.data(b, "form", {
			options: a.extend({},
			a.fn.form.defaults)
		});
		var d = a.data(b, "form").options;
		if (typeof c == "string") {
			var e = {};
			if (d.onBeforeLoad.call(b, e) == 0) return;
			a.ajax({
				url: c,
				data: e,
				dataType: "json",
				success: function(a) {
					f(a)
				},
				error: function() {
					d.onLoadError.apply(b, arguments)
				}
			})
		} else f(c)
	}
	function d(b) {
		a("input,select,textarea", b).each(function() {
			var b = this.type,
			c = this.tagName.toLowerCase();
			if (b == "text" || b == "hidden" || b == "password" || c == "textarea") this.value = "";
			else if (b == "file") {
				var d = a(this),
				e = d.clone().val("");
				e.insertAfter(d),
				d.data("validatebox") ? (d.validatebox("destroy"), e.validatebox()) : d.remove()
			} else b == "checkbox" || b == "radio" ? this.checked = !1 : c == "select" && (this.selectedIndex = -1)
		});
		var c = a(b),
		d = ["combo", "combobox", "combotree", "combogrid", "slider"];
		for (var e = 0; e < d.length; e++) {
			var f = d[e],
			h = c.find("." + f + "-f");
			h.length && h[f] && h[f]("clear")
		}
		g(b)
	}
	function e(b) {
		b.reset();
		var c = a(b),
		d = ["combo", "combobox", "combotree", "combogrid", "datebox", "datetimebox", "spinner", "timespinner", "numberbox", "numberspinner", "slider"];
		for (var e = 0; e < d.length; e++) {
			var f = d[e],
			h = c.find("." + f + "-f");
			h.length && h[f] && h[f]("reset")
		}
		g(b)
	}
	function f(c) {
		var d = a.data(c, "form").options,
		e = a(c);
		e.unbind(".form").bind("submit.form",
		function() {
			return setTimeout(function() {
				b(c, d)
			},
			0),
			!1
		})
	}
	function g(b) {
		if (a.fn.validatebox) {
			var c = a(b);
			c.find(".validatebox-text:not(:disabled)").validatebox("validate");
			var d = c.find(".validatebox-invalid");
			return d.filter(":not(:disabled):first").focus(),
			d.length == 0
		}
		return ! 0
	}
	function h(b, c) {
		a(b).find(".validatebox-text:not(:disabled)").validatebox(c ? "disableValidation": "enableValidation")
	}
	a.fn.form = function(b, c) {
		return typeof b == "string" ? a.fn.form.methods[b](this, c) : (b = b || {},
		this.each(function() {
			a.data(this, "form") || a.data(this, "form", {
				options: a.extend({},
				a.fn.form.defaults, b)
			}),
			f(this)
		}))
	},
	a.fn.form.methods = {
		submit: function(c, d) {
			return c.each(function() {
				var c = a.extend({},
				a.fn.form.defaults, a.data(this, "form") ? a.data(this, "form").options: {},
				d || {});
				b(this, c)
			})
		},
		load: function(a, b) {
			return a.each(function() {
				c(this, b)
			})
		},
		clear: function(a) {
			return a.each(function() {
				d(this)
			})
		},
		reset: function(a) {
			return a.each(function() {
				e(this)
			})
		},
		validate: function(a) {
			return g(a[0])
		},
		disableValidation: function(a) {
			return a.each(function() {
				h(this, !0)
			})
		},
		enableValidation: function(a) {
			return a.each(function() {
				h(this, !1)
			})
		}
	},
	a.fn.form.defaults = {
		url: null,
		onSubmit: function(b) {
			return a(this).form("validate")
		},
		success: function(a) {},
		onBeforeLoad: function(a) {},
		onLoadSuccess: function(a) {},
		onLoadError: function() {}
	}
} (jQuery),
function(a) {
	function b(b) {
		a(b).addClass("numberbox numberbox-f");
		var c = a('<input type="hidden">').insertAfter(b),
		d = a(b).attr("name");
		return d && (c.attr("name", d), a(b).removeAttr("name").attr("numberboxName", d)),
		c
	}
	function c(b) {
		var c = a.data(b, "numberbox").options,
		d = c.onChange;
		c.onChange = function() {},
		f(b, c.parser.call(b, c.value)),
		c.onChange = d,
		c.originalValue = e(b)
	}
	function d(b, c) {
		var d = a.data(b, "numberbox").options;
		c && (d.width = c);
		var e = a(b),
		f = a('<div style="display:none"></div>').insertBefore(e);
		e.appendTo("body"),
		isNaN(d.width) && (d.width = e.outerWidth()),
		e._outerWidth(d.width)._outerHeight(d.height),
		e.css("line-height", e.height() + "px"),
		e.insertAfter(f),
		f.remove()
	}
	function e(b) {
		return a.data(b, "numberbox").field.val()
	}
	function f(b, c) {
		var d = a.data(b, "numberbox"),
		f = d.options,
		g = e(b);
		c = f.parser.call(b, c),
		f.value = c,
		d.field.val(c),
		a(b).val(f.formatter.call(b, c)),
		g != c && f.onChange.call(b, c, g)
	}
	function g(b) {
		var c = a.data(b, "numberbox").options;
		a(b).unbind(".numberbox").bind("keypress.numberbox",
		function(a) {
			return c.filter.call(b, a)
		}).bind("blur.numberbox",
		function() {
			f(b, a(this).val()),
			a(this).val(c.formatter.call(b, e(b)))
		}).bind("focus.numberbox",
		function() {
			var d = e(b);
			d != c.parser.call(b, a(this).val()) && a(this).val(c.formatter.call(b, d))
		})
	}
	function h(b) {
		if (a.fn.validatebox) {
			var c = a.data(b, "numberbox").options;
			a(b).validatebox(c)
		}
	}
	function i(b, c) {
		var d = a.data(b, "numberbox").options;
		c ? (d.disabled = !0, a(b).attr("disabled", !0)) : (d.disabled = !1, a(b).removeAttr("disabled"))
	}
	a.fn.numberbox = function(e, f) {
		if (typeof e == "string") {
			var j = a.fn.numberbox.methods[e];
			return j ? j(this, f) : this.validatebox(e, f)
		}
		return e = e || {},
		this.each(function() {
			var f = a.data(this, "numberbox");
			f ? a.extend(f.options, e) : (f = a.data(this, "numberbox", {
				options: a.extend({},
				a.fn.numberbox.defaults, a.fn.numberbox.parseOptions(this), e),
				field: b(this)
			}), a(this).removeAttr("disabled"), a(this).css({
				imeMode: "disabled"
			})),
			i(this, f.options.disabled),
			d(this),
			g(this),
			h(this),
			c(this)
		})
	},
	a.fn.numberbox.methods = {
		options: function(b) {
			return a.data(b[0], "numberbox").options
		},
		destroy: function(b) {
			return b.each(function() {
				a.data(this, "numberbox").field.remove(),
				a(this).validatebox("destroy"),
				a(this).remove()
			})
		},
		resize: function(a, b) {
			return a.each(function() {
				d(this, b)
			})
		},
		disable: function(a) {
			return a.each(function() {
				i(this, !0)
			})
		},
		enable: function(a) {
			return a.each(function() {
				i(this, !1)
			})
		},
		fix: function(b) {
			return b.each(function() {
				f(this, a(this).val())
			})
		},
		setValue: function(a, b) {
			return a.each(function() {
				f(this, b)
			})
		},
		getValue: function(a) {
			return e(a[0])
		},
		clear: function(b) {
			return b.each(function() {
				var b = a.data(this, "numberbox");
				b.field.val(""),
				a(this).val("")
			})
		},
		reset: function(b) {
			return b.each(function() {
				var b = a(this).numberbox("options");
				a(this).numberbox("setValue", b.originalValue)
			})
		}
	},
	a.fn.numberbox.parseOptions = function(b) {
		var c = a(b);
		return a.extend({},
		a.fn.validatebox.parseOptions(b), a.parser.parseOptions(b, ["width", "height", "decimalSeparator", "groupSeparator", "suffix", {
			min: "number",
			max: "number",
			precision: "number"
		}]), {
			prefix: c.attr("prefix") ? c.attr("prefix") : undefined,
			disabled: c.attr("disabled") ? !0 : undefined,
			value: c.val() || undefined
		})
	},
	a.fn.numberbox.defaults = a.extend({},
	a.fn.validatebox.defaults, {
		width: "auto",
		height: 22,
		disabled: !1,
		value: "",
		min: null,
		max: null,
		precision: 0,
		decimalSeparator: ".",
		groupSeparator: "",
		prefix: "",
		suffix: "",
		filter: function(b) {
			var c = a(this).numberbox("options");
			if (b.which == 45) return a(this).val().indexOf("-") == -1 ? !0 : !1;
			var d = String.fromCharCode(b.which);
			return d == c.decimalSeparator ? a(this).val().indexOf(d) == -1 ? !0 : !1 : d == c.groupSeparator ? !0 : b.which >= 48 && b.which <= 57 && b.ctrlKey == 0 && b.shiftKey == 0 || b.which == 0 || b.which == 8 ? !0 : b.ctrlKey != 1 || b.which != 99 && b.which != 118 ? !1 : !0
		},
		formatter: function(b) {
			if (!b) return b;
			b += "";
			var c = a(this).numberbox("options"),
			d = b,
			e = "",
			f = b.indexOf(".");
			f >= 0 && (d = b.substring(0, f), e = b.substring(f + 1, b.length));
			if (c.groupSeparator) {
				var g = /(\d+)(\d{3})/;
				while (g.test(d)) d = d.replace(g, "$1" + c.groupSeparator + "$2")
			}
			return e ? c.prefix + d + c.decimalSeparator + e + c.suffix: c.prefix + d + c.suffix
		},
		parser: function(b) {
			b += "";
			var c = a(this).numberbox("options");
			parseFloat(b) != b && (c.prefix && (b = a.trim(b.replace(new RegExp("\\" + a.trim(c.prefix), "g"), ""))), c.suffix && (b = a.trim(b.replace(new RegExp("\\" + a.trim(c.suffix), "g"), ""))), c.groupSeparator && (b = a.trim(b.replace(new RegExp("\\" + c.groupSeparator, "g"), ""))), c.decimalSeparator && (b = a.trim(b.replace(new RegExp("\\" + c.decimalSeparator, "g"), "."))), b = b.replace(/\s/g, ""));
			var d = parseFloat(b).toFixed(c.precision);
			return isNaN(d) ? d = "": typeof c.min == "number" && d < c.min ? d = c.min.toFixed(c.precision) : typeof c.max == "number" && d > c.max && (d = c.max.toFixed(c.precision)),
			d
		},
		onChange: function(a, b) {}
	})
} (jQuery),
function(a) {
	function b(b) {
		var c = a.data(b, "calendar").options,
		d = a(b);
		c.fit ? a.extend(c, d._fit()) : d._fit(!1);
		var e = d.find(".calendar-header");
		d._outerWidth(c.width),
		d._outerHeight(c.height),
		d.find(".calendar-body")._outerHeight(d.height() - e._outerHeight())
	}
	function c(c) {
		a(c).addClass("calendar").html('<div class="calendar-header"><div class="calendar-prevmonth"></div><div class="calendar-nextmonth"></div><div class="calendar-prevyear"></div><div class="calendar-nextyear"></div><div class="calendar-title"><span>Aprial 2010</span></div></div><div class="calendar-body"><div class="calendar-menu"><div class="calendar-menu-year-inner"><span class="calendar-menu-prev"></span><span><input class="calendar-menu-year" type="text"></input></span><span class="calendar-menu-next"></span></div><div class="calendar-menu-month-inner"></div></div></div>'),
		a(c).find(".calendar-title span").hover(function() {
			a(this).addClass("calendar-menu-hover")
		},
		function() {
			a(this).removeClass("calendar-menu-hover")
		}).click(function() {
			var b = a(c).find(".calendar-menu");
			b.is(":visible") ? b.hide() : f(c)
		}),
		a(".calendar-prevmonth,.calendar-nextmonth,.calendar-prevyear,.calendar-nextyear", c).hover(function() {
			a(this).addClass("calendar-nav-hover")
		},
		function() {
			a(this).removeClass("calendar-nav-hover")
		}),
		a(c).find(".calendar-nextmonth").click(function() {
			d(c, 1)
		}),
		a(c).find(".calendar-prevmonth").click(function() {
			d(c, -1)
		}),
		a(c).find(".calendar-nextyear").click(function() {
			e(c, 1)
		}),
		a(c).find(".calendar-prevyear").click(function() {
			e(c, -1)
		}),
		a(c).bind("_resize",
		function() {
			var d = a.data(c, "calendar").options;
			return d.fit == 1 && b(c),
			!1
		})
	}
	function d(b, c) {
		var d = a.data(b, "calendar").options;
		d.month += c,
		d.month > 12 ? (d.year++, d.month = 1) : d.month < 1 && (d.year--, d.month = 12),
		h(b);
		var e = a(b).find(".calendar-menu-month-inner");
		e.find("td.calendar-selected").removeClass("calendar-selected"),
		e.find("td:eq(" + (d.month - 1) + ")").addClass("calendar-selected")
	}
	function e(b, c) {
		var d = a.data(b, "calendar").options;
		d.year += c,
		h(b);
		var e = a(b).find(".calendar-menu-year");
		e.val(d.year)
	}
	function f(b) {
		function j(d) {
			var e = a(b).find(".calendar-menu"),
			f = e.find(".calendar-menu-year").val(),
			g = e.find(".calendar-selected").attr("abbr");
			isNaN(f) || (c.year = parseInt(f), c.month = parseInt(g), h(b)),
			d && e.hide()
		}
		var c = a.data(b, "calendar").options;
		a(b).find(".calendar-menu").show();
		if (a(b).find(".calendar-menu-month-inner").is(":empty")) {
			a(b).find(".calendar-menu-month-inner").empty();
			var d = a('<table class="calendar-mtable"></table>').appendTo(a(b).find(".calendar-menu-month-inner")),
			e = 0;
			for (var f = 0; f < 3; f++) {
				var g = a("<tr></tr>").appendTo(d);
				for (var i = 0; i < 4; i++) a('<td class="calendar-menu-month"></td>').html(c.months[e++]).attr("abbr", e).appendTo(g)
			}
			a(b).find(".calendar-menu-prev,.calendar-menu-next").hover(function() {
				a(this).addClass("calendar-menu-hover")
			},
			function() {
				a(this).removeClass("calendar-menu-hover")
			}),
			a(b).find(".calendar-menu-next").click(function() {
				var c = a(b).find(".calendar-menu-year");
				isNaN(c.val()) || (c.val(parseInt(c.val()) + 1), j())
			}),
			a(b).find(".calendar-menu-prev").click(function() {
				var c = a(b).find(".calendar-menu-year");
				isNaN(c.val()) || (c.val(parseInt(c.val() - 1)), j())
			}),
			a(b).find(".calendar-menu-year").keypress(function(a) {
				a.keyCode == 13 && j(!0)
			}),
			a(b).find(".calendar-menu-month").hover(function() {
				a(this).addClass("calendar-menu-hover")
			},
			function() {
				a(this).removeClass("calendar-menu-hover")
			}).click(function() {
				var c = a(b).find(".calendar-menu");
				c.find(".calendar-selected").removeClass("calendar-selected"),
				a(this).addClass("calendar-selected"),
				j(!0)
			})
		}
		var k = a(b).find(".calendar-body"),
		l = a(b).find(".calendar-menu"),
		m = l.find(".calendar-menu-year-inner"),
		n = l.find(".calendar-menu-month-inner");
		m.find("input").val(c.year).focus(),
		n.find("td.calendar-selected").removeClass("calendar-selected"),
		n.find("td:eq(" + (c.month - 1) + ")").addClass("calendar-selected"),
		l._outerWidth(k._outerWidth()),
		l._outerHeight(k._outerHeight()),
		n._outerHeight(l.height() - m._outerHeight())
	}
	function g(b, c, d) {
		var e = a.data(b, "calendar").options,
		f = [],
		g = (new Date(c, d, 0)).getDate();
		for (var h = 1; h <= g; h++) f.push([c, d, h]);
		var i = [],
		j = [],
		k = -1;
		while (f.length > 0) {
			var l = f.shift();
			j.push(l);
			var m = (new Date(l[0], l[1] - 1, l[2])).getDay();
			k == m ? m = 0 : m == (e.firstDay == 0 ? 7 : e.firstDay) - 1 && (i.push(j), j = []),
			k = m
		}
		j.length && i.push(j);
		var n = i[0];
		if (n.length < 7) while (n.length < 7) {
			var o = n[0],
			l = new Date(o[0], o[1] - 1, o[2] - 1);
			n.unshift([l.getFullYear(), l.getMonth() + 1, l.getDate()])
		} else {
			var o = n[0],
			j = [];
			for (var h = 1; h <= 7; h++) {
				var l = new Date(o[0], o[1] - 1, o[2] - h);
				j.unshift([l.getFullYear(), l.getMonth() + 1, l.getDate()])
			}
			i.unshift(j)
		}
		var p = i[i.length - 1];
		while (p.length < 7) {
			var q = p[p.length - 1],
			l = new Date(q[0], q[1] - 1, q[2] + 1);
			p.push([l.getFullYear(), l.getMonth() + 1, l.getDate()])
		}
		if (i.length < 6) {
			var q = p[p.length - 1],
			j = [];
			for (var h = 1; h <= 7; h++) {
				var l = new Date(q[0], q[1] - 1, q[2] + h);
				j.push([l.getFullYear(), l.getMonth() + 1, l.getDate()])
			}
			i.push(j)
		}
		return i
	}
	function h(b) {
		var c = a.data(b, "calendar").options;
		c.current && !c.validator.call(b, c.current) && (c.current = null);
		var d = new Date,
		e = d.getFullYear() + "," + (d.getMonth() + 1) + "," + d.getDate(),
		f = c.current ? c.current.getFullYear() + "," + (c.current.getMonth() + 1) + "," + c.current.getDate() : "",
		h = 6 - c.firstDay,
		i = h + 1;
		h >= 7 && (h -= 7),
		i >= 7 && (i -= 7),
		a(b).find(".calendar-title span").html(c.months[c.month - 1] + " " + c.year);
		var j = a(b).find("div.calendar-body");
		j.children("table").remove();
		var k = ['<table class="calendar-dtable" cellspacing="0" cellpadding="0" border="0">'];
		k.push("<thead><tr>");
		for (var l = c.firstDay; l < c.weeks.length; l++) k.push("<th>" + c.weeks[l] + "</th>");
		for (var l = 0; l < c.firstDay; l++) k.push("<th>" + c.weeks[l] + "</th>");
		k.push("</tr></thead>"),
		k.push("<tbody>");
		var m = g(b, c.year, c.month);
		for (var l = 0; l < m.length; l++) {
			var n = m[l],
			o = "";
			l == 0 ? o = "calendar-first": l == m.length - 1 && (o = "calendar-last"),
			k.push('<tr class="' + o + '">');
			for (var p = 0; p < n.length; p++) {
				var q = n[p],
				r = q[0] + "," + q[1] + "," + q[2],
				s = new Date(q[0], parseInt(q[1]) - 1, q[2]),
				t = c.formatter.call(b, s),
				u = c.styler.call(b, s),
				v = "",
				w = "";
				typeof u == "string" ? w = u: u && (v = u["class"] || "", w = u.style || "");
				var o = "calendar-day";
				if (c.year != q[0] || c.month != q[1]) o += " calendar-other-month";
				r == e && (o += " calendar-today"),
				r == f && (o += " calendar-selected"),
				p == h ? o += " calendar-saturday": p == i && (o += " calendar-sunday"),
				p == 0 ? o += " calendar-first": p == n.length - 1 && (o += " calendar-last"),
				o += " " + v,
				c.validator.call(b, s) || (o += " calendar-disabled"),
				k.push('<td class="' + o + '" abbr="' + r + '" style="' + w + '">' + t + "</td>")
			}
			k.push("</tr>")
		}
		k.push("</tbody>"),
		k.push("</table>"),
		j.append(k.join(""));
		var x = j.children("table.calendar-dtable").prependTo(j);
		x.find("td.calendar-day:not(.calendar-disabled)").hover(function() {
			a(this).addClass("calendar-hover")
		},
		function() {
			a(this).removeClass("calendar-hover")
		}).click(function() {
			var d = c.current;
			x.find(".calendar-selected").removeClass("calendar-selected"),
			a(this).addClass("calendar-selected");
			var e = a(this).attr("abbr").split(",");
			c.current = new Date(e[0], parseInt(e[1]) - 1, e[2]),
			c.onSelect.call(b, c.current),
			(!d || d.getTime() != c.current.getTime()) && c.onChange.call(b, c.current, d)
		})
	}
	a.fn.calendar = function(d, e) {
		return typeof d == "string" ? a.fn.calendar.methods[d](this, e) : (d = d || {},
		this.each(function() {
			var e = a.data(this, "calendar");
			e ? a.extend(e.options, d) : (e = a.data(this, "calendar", {
				options: a.extend({},
				a.fn.calendar.defaults, a.fn.calendar.parseOptions(this), d)
			}), c(this)),
			e.options.border == 0 && a(this).addClass("calendar-noborder"),
			b(this),
			h(this),
			a(this).find("div.calendar-menu").hide()
		}))
	},
	a.fn.calendar.methods = {
		options: function(b) {
			return a.data(b[0], "calendar").options
		},
		resize: function(a) {
			return a.each(function() {
				b(this)
			})
		},
		moveTo: function(b, c) {
			return b.each(function() {
				var b = a(this).calendar("options");
				if (b.validator.call(this, c)) {
					var d = b.current;
					a(this).calendar({
						year: c.getFullYear(),
						month: c.getMonth() + 1,
						current: c
					}),
					(!d || d.getTime() != c.getTime()) && b.onChange.call(this, b.current, d)
				}
			})
		}
	},
	a.fn.calendar.parseOptions = function(b) {
		var c = a(b);
		return a.extend({},
		a.parser.parseOptions(b, ["width", "height", {
			firstDay: "number",
			fit: "boolean",
			border: "boolean"
		}]))
	},
	a.fn.calendar.defaults = {
		width: 180,
		height: 180,
		fit: !1,
		border: !0,
		firstDay: 0,
		weeks: ["S", "M", "T", "W", "T", "F", "S"],
		months: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
		year: (new Date).getFullYear(),
		month: (new Date).getMonth() + 1,
		current: function() {
			var a = new Date;
			return new Date(a.getFullYear(), a.getMonth(), a.getDate())
		} (),
		formatter: function(a) {
			return a.getDate()
		},
		styler: function(a) {
			return ""
		},
		validator: function(a) {
			return ! 0
		},
		onSelect: function(a) {},
		onChange: function(a, b) {}
	}
} (jQuery),
function(a) {
	function b(b) {
		var c = a('<span class="spinner"><span class="spinner-arrow"><span class="spinner-arrow-up"></span><span class="spinner-arrow-down"></span></span></span>').insertAfter(b);
		return a(b).addClass("spinner-text spinner-f").prependTo(c),
		c
	}
	function c(b, c) {
		var d = a.data(b, "spinner").options,
		e = a.data(b, "spinner").spinner;
		c && (d.width = c);
		var f = a('<div style="display:none"></div>').insertBefore(e);
		e.appendTo("body"),
		isNaN(d.width) && (d.width = a(b).outerWidth());
		var g = e.find(".spinner-arrow");
		e._outerWidth(d.width)._outerHeight(d.height),
		a(b)._outerWidth(e.width() - g.outerWidth()),
		a(b).css({
			height: e.height() + "px",
			lineHeight: e.height() + "px"
		}),
		g._outerHeight(e.height()),
		g.find("span")._outerHeight(g.height() / 2),
		e.insertAfter(f),
		f.remove()
	}
	function d(b) {
		var c = a.data(b, "spinner").options,
		d = a.data(b, "spinner").spinner;
		a(b).unbind(".spinner"),
		d.find(".spinner-arrow-up,.spinner-arrow-down").unbind(".spinner"),
		!c.disabled && !c.readonly && (d.find(".spinner-arrow-up").bind("mouseenter.spinner",
		function() {
			a(this).addClass("spinner-arrow-hover")
		}).bind("mouseleave.spinner",
		function() {
			a(this).removeClass("spinner-arrow-hover")
		}).bind("click.spinner",
		function() {
			c.spin.call(b, !1),
			c.onSpinUp.call(b),
			a(b).validatebox("validate")
		}), d.find(".spinner-arrow-down").bind("mouseenter.spinner",
		function() {
			a(this).addClass("spinner-arrow-hover")
		}).bind("mouseleave.spinner",
		function() {
			a(this).removeClass("spinner-arrow-hover")
		}).bind("click.spinner",
		function() {
			c.spin.call(b, !0),
			c.onSpinDown.call(b),
			a(b).validatebox("validate")
		}), a(b).bind("change.spinner",
		function() {
			a(this).spinner("setValue", a(this).val())
		}))
	}
	function e(b, c) {
		var d = a.data(b, "spinner").options;
		c ? (d.disabled = !0, a(b).attr("disabled", !0)) : (d.disabled = !1, a(b).removeAttr("disabled"))
	}
	function f(b, c) {
		var d = a.data(b, "spinner"),
		e = d.options;
		e.readonly = c == undefined ? !0 : c;
		var f = e.readonly ? !0 : !e.editable;
		a(b).attr("readonly", f).css("cursor", f ? "pointer": "")
	}
	a.fn.spinner = function(g, h) {
		if (typeof g == "string") {
			var i = a.fn.spinner.methods[g];
			return i ? i(this, h) : this.validatebox(g, h)
		}
		return g = g || {},
		this.each(function() {
			var h = a.data(this, "spinner");
			h ? a.extend(h.options, g) : (h = a.data(this, "spinner", {
				options: a.extend({},
				a.fn.spinner.defaults, a.fn.spinner.parseOptions(this), g),
				spinner: b(this)
			}), a(this).removeAttr("disabled")),
			h.options.originalValue = h.options.value,
			a(this).val(h.options.value),
			e(this, h.options.disabled),
			f(this, h.options.readonly),
			c(this),
			a(this).validatebox(h.options),
			d(this)
		})
	},
	a.fn.spinner.methods = {
		options: function(b) {
			var c = a.data(b[0], "spinner").options;
			return a.extend(c, {
				value: b.val()
			})
		},
		destroy: function(b) {
			return b.each(function() {
				var b = a.data(this, "spinner").spinner;
				a(this).validatebox("destroy"),
				b.remove()
			})
		},
		resize: function(a, b) {
			return a.each(function() {
				c(this, b)
			})
		},
		enable: function(a) {
			return a.each(function() {
				e(this, !1),
				d(this)
			})
		},
		disable: function(a) {
			return a.each(function() {
				e(this, !0),
				d(this)
			})
		},
		readonly: function(a, b) {
			return a.each(function() {
				f(this, b),
				d(this)
			})
		},
		getValue: function(a) {
			return a.val()
		},
		setValue: function(b, c) {
			return b.each(function() {
				var b = a.data(this, "spinner").options,
				d = b.value;
				b.value = c,
				a(this).val(c),
				d != c && b.onChange.call(this, c, d)
			})
		},
		clear: function(b) {
			return b.each(function() {
				var b = a.data(this, "spinner").options;
				b.value = "",
				a(this).val("")
			})
		},
		reset: function(b) {
			return b.each(function() {
				var b = a(this).spinner("options");
				a(this).spinner("setValue", b.originalValue)
			})
		}
	},
	a.fn.spinner.parseOptions = function(b) {
		var c = a(b);
		return a.extend({},
		a.fn.validatebox.parseOptions(b), a.parser.parseOptions(b, ["width", "height", "min", "max", {
			increment: "number",
			editable: "boolean"
		}]), {
			value: c.val() || undefined,
			disabled: c.attr("disabled") ? !0 : undefined,
			readonly: c.attr("readonly") ? !0 : undefined
		})
	},
	a.fn.spinner.defaults = a.extend({},
	a.fn.validatebox.defaults, {
		width: "auto",
		height: 22,
		deltaX: 19,
		value: "",
		min: null,
		max: null,
		increment: 1,
		editable: !0,
		disabled: !1,
		readonly: !1,
		spin: function(a) {},
		onSpinUp: function() {},
		onSpinDown: function() {},
		onChange: function(a, b) {}
	})
} (jQuery),
function(a) {
	function b(b) {
		a(b).addClass("numberspinner-f");
		var c = a.data(b, "numberspinner").options;
		a(b).spinner(c).numberbox(a.extend({},
		c, {
			width: "auto"
		}))
	}
	function c(b, c) {
		var d = a.data(b, "numberspinner").options,
		e = parseFloat(a(b).numberbox("getValue") || d.value) || 0;
		c == 1 ? e -= d.increment: e += d.increment,
		a(b).numberbox("setValue", e)
	}
	a.fn.numberspinner = function(c, d) {
		if (typeof c == "string") {
			var e = a.fn.numberspinner.methods[c];
			return e ? e(this, d) : this.spinner(c, d)
		}
		return c = c || {},
		this.each(function() {
			var d = a.data(this, "numberspinner");
			d ? a.extend(d.options, c) : a.data(this, "numberspinner", {
				options: a.extend({},
				a.fn.numberspinner.defaults, a.fn.numberspinner.parseOptions(this), c)
			}),
			b(this)
		})
	},
	a.fn.numberspinner.methods = {
		options: function(b) {
			var c = a.data(b[0], "numberspinner").options;
			return a.extend(c, {
				value: b.numberbox("getValue"),
				originalValue: b.numberbox("options").originalValue
			})
		},
		setValue: function(b, c) {
			return b.each(function() {
				a(this).numberbox("setValue", c)
			})
		},
		getValue: function(a) {
			return a.numberbox("getValue")
		},
		clear: function(b) {
			return b.each(function() {
				a(this).spinner("clear"),
				a(this).numberbox("clear")
			})
		},
		reset: function(b) {
			return b.each(function() {
				var b = a(this).numberspinner("options");
				a(this).numberspinner("setValue", b.originalValue)
			})
		}
	},
	a.fn.numberspinner.parseOptions = function(b) {
		return a.extend({},
		a.fn.spinner.parseOptions(b), a.fn.numberbox.parseOptions(b), {})
	},
	a.fn.numberspinner.defaults = a.extend({},
	a.fn.spinner.defaults, a.fn.numberbox.defaults, {
		spin: function(a) {
			c(this, a)
		}
	})
} (jQuery),
function(a) {
	function b(b) {
		var d = a.data(b, "timespinner").options;
		a(b).addClass("timespinner-f"),
		a(b).spinner(d),
		a(b).unbind(".timespinner"),
		a(b).bind("click.timespinner",
		function() {
			var a = 0;
			if (this.selectionStart != null) a = this.selectionStart;
			else if (this.createTextRange) {
				var e = b.createTextRange(),
				f = document.selection.createRange();
				f.setEndPoint("StartToStart", e),
				a = f.text.length
			}
			a >= 0 && a <= 2 ? d.highlight = 0 : a >= 3 && a <= 5 ? d.highlight = 1 : a >= 6 && a <= 8 && (d.highlight = 2),
			c(b)
		}).bind("blur.timespinner",
		function() {
			e(b)
		})
	}
	function c(b) {
		var c = a.data(b, "timespinner").options,
		d = 0,
		e = 0;
		c.highlight == 0 ? (d = 0, e = 2) : c.highlight == 1 ? (d = 3, e = 5) : c.highlight == 2 && (d = 6, e = 8);
		if (b.selectionStart != null) b.setSelectionRange(d, e);
		else if (b.createTextRange) {
			var f = b.createTextRange();
			f.collapse(),
			f.moveEnd("character", e),
			f.moveStart("character", d),
			f.select()
		}
		a(b).focus()
	}
	function d(b, c) {
		var d = a.data(b, "timespinner").options;
		if (!c) return null;
		var e = c.split(d.separator);
		for (var f = 0; f < e.length; f++) if (isNaN(e[f])) return null;
		while (e.length < 3) e.push(0);
		return new Date(1900, 0, 0, e[0], e[1], e[2])
	}
	function e(b) {
		function k(a) {
			return (a < 10 ? "0": "") + a
		}
		var c = a.data(b, "timespinner").options,
		e = a(b).val(),
		f = d(b, e);
		if (!f) {
			c.value = "",
			a(b).spinner("setValue", "");
			return
		}
		var g = d(b, c.min),
		h = d(b, c.max);
		g && g > f && (f = g),
		h && h < f && (f = h);
		var i = [k(f.getHours()), k(f.getMinutes())];
		c.showSeconds && i.push(k(f.getSeconds()));
		var j = i.join(c.separator);
		c.value = j,
		a(b).spinner("setValue", j)
	}
	function f(b, d) {
		var f = a.data(b, "timespinner").options,
		g = a(b).val();
		g == "" && (g = [0, 0, 0].join(f.separator));
		var h = g.split(f.separator);
		for (var i = 0; i < h.length; i++) h[i] = parseInt(h[i], 10);
		d == 1 ? h[f.highlight] -= f.increment: h[f.highlight] += f.increment,
		a(b).val(h.join(f.separator)),
		e(b),
		c(b)
	}
	a.fn.timespinner = function(c, d) {
		if (typeof c == "string") {
			var e = a.fn.timespinner.methods[c];
			return e ? e(this, d) : this.spinner(c, d)
		}
		return c = c || {},
		this.each(function() {
			var d = a.data(this, "timespinner");
			d ? a.extend(d.options, c) : a.data(this, "timespinner", {
				options: a.extend({},
				a.fn.timespinner.defaults, a.fn.timespinner.parseOptions(this), c)
			}),
			b(this)
		})
	},
	a.fn.timespinner.methods = {
		options: function(b) {
			var c = a.data(b[0], "timespinner").options;
			return a.extend(c, {
				value: b.val(),
				originalValue: b.spinner("options").originalValue
			})
		},
		setValue: function(b, c) {
			return b.each(function() {
				a(this).val(c),
				e(this)
			})
		},
		getHours: function(b) {
			var c = a.data(b[0], "timespinner").options,
			d = b.val().split(c.separator);
			return parseInt(d[0], 10)
		},
		getMinutes: function(b) {
			var c = a.data(b[0], "timespinner").options,
			d = b.val().split(c.separator);
			return parseInt(d[1], 10)
		},
		getSeconds: function(b) {
			var c = a.data(b[0], "timespinner").options,
			d = b.val().split(c.separator);
			return parseInt(d[2], 10) || 0
		}
	},
	a.fn.timespinner.parseOptions = function(b) {
		return a.extend({},
		a.fn.spinner.parseOptions(b), a.parser.parseOptions(b, ["separator", {
			showSeconds: "boolean",
			highlight: "number"
		}]))
	},
	a.fn.timespinner.defaults = a.extend({},
	a.fn.spinner.defaults, {
		separator: ":",
		showSeconds: !1,
		highlight: 0,
		spin: function(a) {
			f(this, a)
		}
	})
} (jQuery),
function($) {
	function _502(a, b) {
		for (var c = 0,
		d = a.length; c < d; c++) if (a[c] == b) return c;
		return - 1
	}
	function _503(a, b, c) {
		if (typeof b == "string") {
			for (var d = 0,
			e = a.length; d < e; d++) if (a[d][b] == c) {
				a.splice(d, 1);
				return
			}
		} else {
			var f = _502(a, b);
			f != -1 && a.splice(f, 1)
		}
	}
	function _505(a, b, c) {
		for (var d = 0,
		e = a.length; d < e; d++) if (a[d][b] == c[b]) return;
		a.push(c)
	}
	function _506(a) {
		var b = $.data(a, "datagrid"),
		c = b.options,
		d = b.panel,
		e = b.dc,
		f = null;
		c.sharedStyleSheet ? f = typeof c.sharedStyleSheet == "boolean" ? "head": c.sharedStyleSheet: (f = d.closest("div.datagrid-view"), f.length || (f = e.view));
		var g = $(f),
		h = $.data(g[0], "ss");
		return h || (h = $.data(g[0], "ss", {
			cache: {},
			dirty: []
		})),
		{
			add: function(a) {
				var b = ['<style type="text/css" easyui="true">'];
				for (var c = 0; c < a.length; c++) h.cache[a[c][0]] = {
					width: a[c][1]
				};
				var d = 0;
				for (var e in h.cache) {
					var f = h.cache[e];
					f.index = d++,
					b.push(e + "{width:" + f.width + "}")
				}
				b.push("</style>"),
				$(b.join("\n")).appendTo(g),
				g.children("style[easyui]:not(:last)").remove()
			},
			getRule: function(a) {
				var b = g.children("style[easyui]:last")[0],
				c = b.styleSheet ? b.styleSheet: b.sheet || document.styleSheets[document.styleSheets.length - 1],
				d = c.cssRules || c.rules;
				return d[a]
			},
			set: function(a, b) {
				var c = h.cache[a];
				if (c) {
					c.width = b;
					var d = this.getRule(c.index);
					d && (d.style.width = b)
				}
			},
			remove: function(a) {
				var b = [];
				for (var c in h.cache) c.indexOf(a) == -1 && b.push([c, h.cache[c].width]);
				h.cache = {},
				this.add(b)
			},
			dirty: function(a) {
				a && h.dirty.push(a)
			},
			clean: function() {
				for (var a = 0; a < h.dirty.length; a++) this.remove(h.dirty[a]);
				h.dirty = []
			}
		}
	}
	function _515(a, b) {
		var c = $.data(a, "datagrid").options,
		d = $.data(a, "datagrid").panel;
		b && (b.width && (c.width = b.width), b.height && (c.height = b.height));
		if (c.fit == 1) {
			var e = d.panel("panel").parent();
			c.width = e.width(),
			c.height = e.height()
		}
		d.panel("resize", {
			width: c.width,
			height: c.height
		})
	}
	function _519(a) {
		var b = $.data(a, "datagrid").options,
		c = $.data(a, "datagrid").dc,
		d = $.data(a, "datagrid").panel,
		e = d.width(),
		f = d.height(),
		g = c.view,
		h = c.view1,
		i = c.view2,
		j = h.children("div.datagrid-header"),
		k = i.children("div.datagrid-header"),
		l = j.find("table"),
		m = k.find("table");
		g.width(e);
		var n = j.children("div.datagrid-header-inner").show();
		h.width(n.find("table").width()),
		b.showHeader || n.hide(),
		i.width(e - h._outerWidth()),
		h.children("div.datagrid-header,div.datagrid-body,div.datagrid-footer").width(h.width()),
		i.children("div.datagrid-header,div.datagrid-body,div.datagrid-footer").width(i.width());
		var o;
		j.css("height", ""),
		k.css("height", ""),
		l.css("height", ""),
		m.css("height", ""),
		o = Math.max(l.height(), m.height()),
		l.height(o),
		m.height(o),
		j.add(k)._outerHeight(o);
		if (b.height != "auto") {
			var p = f - i.children("div.datagrid-header")._outerHeight() - i.children("div.datagrid-footer")._outerHeight() - d.children("div.datagrid-toolbar")._outerHeight();
			d.children("div.datagrid-pager").each(function() {
				p -= $(this)._outerHeight()
			}),
			c.body1.add(c.body2).children("table.datagrid-btable-frozen").css({
				position: "absolute",
				top: c.header2._outerHeight()
			});
			var q = c.body2.children("table.datagrid-btable-frozen")._outerHeight();
			h.add(i).children("div.datagrid-body").css({
				marginTop: q,
				height: p - q
			})
		}
		g.height(i.height())
	}
	function _526(a, b, c) {
		function m(a, b) {
			for (var c = 0; c < b.length; c++) {
				var d = $(a[c]),
				e = $(b[c]);
				d.css("height", ""),
				e.css("height", "");
				var f = Math.max(d.height(), e.height());
				d.css("height", f),
				e.css("height", f)
			}
		}
		function n(a) {
			var b = 0,
			c = 0;
			return $(a).children().each(function() {
				var a = $(this);
				a.is(":visible") && (c += a._outerHeight(), b < a._outerWidth() && (b = a._outerWidth()))
			}),
			{
				width: b,
				height: c
			}
		}
		var d = $.data(a, "datagrid").data.rows,
		e = $.data(a, "datagrid").options,
		f = $.data(a, "datagrid").dc;
		if (!f.body1.is(":empty") && (!e.nowrap || e.autoRowHeight || c)) if (b != undefined) {
			var g = e.finder.getTr(a, b, "body", 1),
			h = e.finder.getTr(a, b, "body", 2);
			m(g, h)
		} else {
			var g = e.finder.getTr(a, 0, "allbody", 1),
			h = e.finder.getTr(a, 0, "allbody", 2);
			m(g, h);
			if (e.showFooter) {
				var g = e.finder.getTr(a, 0, "allfooter", 1),
				h = e.finder.getTr(a, 0, "allfooter", 2);
				m(g, h)
			}
		}
		_519(a);
		if (e.height == "auto") {
			var i = f.body1.parent(),
			j = f.body2,
			k = n(j),
			l = k.height;
			k.width > j.width() && (l += 18),
			i.height(l),
			j.height(l),
			f.view.height(f.view2.height())
		}
		f.body2.triggerHandler("scroll")
	}
	function _533(a, b) {
		function f(c) {
			var f = c ? 1 : 2,
			g = d.finder.getTr(a, b, "body", f); (c ? e.body1: e.body2).children("table.datagrid-btable-frozen").append(g)
		}
		var c = $.data(a, "datagrid"),
		d = c.options,
		e = c.dc;
		e.body2.children("table.datagrid-btable-frozen").length || e.body1.add(e.body2).prepend('<table class="datagrid-btable datagrid-btable-frozen" cellspacing="0" cellpadding="0"></table>'),
		f(!0),
		f(!1),
		_519(a)
	}
	function _53a(_53b, _53c) {
		function _53d() {
			var _53e = [],
			_53f = [];
			return $(_53b).children("thead").each(function() {
				var opt = $.parser.parseOptions(this, [{
					frozen: "boolean"
				}]);
				$(this).find("tr").each(function() {
					var cols = [];
					$(this).find("th").each(function() {
						var th = $(this),
						col = $.extend({},
						$.parser.parseOptions(this, ["field", "align", "halign", "order", {
							sortable: "boolean",
							checkbox: "boolean",
							resizable: "boolean",
							fixed: "boolean"
						},
						{
							rowspan: "number",
							colspan: "number",
							width: "number"
						}]), {
							title: th.html() || undefined,
							hidden: th.attr("hidden") ? !0 : undefined,
							formatter: th.attr("formatter") ? eval(th.attr("formatter")) : undefined,
							styler: th.attr("styler") ? eval(th.attr("styler")) : undefined,
							sorter: th.attr("sorter") ? eval(th.attr("sorter")) : undefined
						});
						if (th.attr("editor")) {
							var s = $.trim(th.attr("editor"));
							s.substr(0, 1) == "{" ? col.editor = eval("(" + s + ")") : col.editor = s
						}
						cols.push(col)
					}),
					opt.frozen ? _53e.push(cols) : _53f.push(cols)
				})
			}),
			[_53e, _53f]
		}
		var _540 = $('<div class="datagrid-wrap"><div class="datagrid-view"><div class="datagrid-view1"><div class="datagrid-header"><div class="datagrid-header-inner"></div></div><div class="datagrid-body"><div class="datagrid-body-inner"></div></div><div class="datagrid-footer"><div class="datagrid-footer-inner"></div></div></div><div class="datagrid-view2"><div class="datagrid-header"><div class="datagrid-header-inner"></div></div><div class="datagrid-body"></div><div class="datagrid-footer"><div class="datagrid-footer-inner"></div></div></div></div></div>').insertAfter(_53b);
		_540.panel({
			doSize: !1
		}),
		_540.panel("panel").addClass("datagrid").bind("_resize",
		function(a, b) {
			var c = $.data(_53b, "datagrid").options;
			if (c.fit == 1 || b) _515(_53b),
			setTimeout(function() {
				$.data(_53b, "datagrid") && _542(_53b)
			},
			0);
			return ! 1
		}),
		$(_53b).hide().appendTo(_540.children("div.datagrid-view"));
		var cc = _53d(),
		view = _540.children("div.datagrid-view"),
		_543 = view.children("div.datagrid-view1"),
		_544 = view.children("div.datagrid-view2");
		return {
			panel: _540,
			frozenColumns: cc[0],
			columns: cc[1],
			dc: {
				view: view,
				view1: _543,
				view2: _544,
				header1: _543.children("div.datagrid-header").children("div.datagrid-header-inner"),
				header2: _544.children("div.datagrid-header").children("div.datagrid-header-inner"),
				body1: _543.children("div.datagrid-body").children("div.datagrid-body-inner"),
				body2: _544.children("div.datagrid-body"),
				footer1: _543.children("div.datagrid-footer").children("div.datagrid-footer-inner"),
				footer2: _544.children("div.datagrid-footer").children("div.datagrid-footer-inner")
			}
		}
	}
	function _545(_546) {
		function _54b(a, b, c) {
			if (!b) return;
			$(a).show(),
			$(a).empty();
			var d = [],
			e = [];
			opts.sortName && (d = opts.sortName.split(","), e = opts.sortOrder.split(","));
			var f = $('<table class="datagrid-htable" border="0" cellspacing="0" cellpadding="0"><tbody></tbody></table>').appendTo(a);
			for (var g = 0; g < b.length; g++) {
				var h = $('<tr class="datagrid-header-row"></tr>').appendTo($("tbody", f)),
				i = b[g];
				for (var j = 0; j < i.length; j++) {
					var k = i[j],
					l = "";
					k.rowspan && (l += 'rowspan="' + k.rowspan + '" '),
					k.colspan && (l += 'colspan="' + k.colspan + '" ');
					var m = $("<td " + l + "></td>").appendTo(h);
					if (k.checkbox) m.attr("field", k.field),
					$('<div class="datagrid-header-check"></div>').html('<input type="checkbox"/>').appendTo(m);
					else if (k.field) {
						m.attr("field", k.field),
						m.append('<div class="datagrid-cell"><span></span><span class="datagrid-sort-icon"></span></div>'),
						$("span", m).html(k.title),
						$("span.datagrid-sort-icon", m).html("&nbsp;");
						var n = m.find("div.datagrid-cell"),
						o = _502(d, k.field);
						o >= 0 && n.addClass("datagrid-sort-" + e[o]),
						k.resizable == 0 && n.attr("resizable", "false"),
						k.width ? (n._outerWidth(k.width), k.boxWidth = parseInt(n[0].style.width)) : k.auto = !0,
						n.css("text-align", k.halign || k.align || ""),
						k.cellClass = _547.cellClassPrefix + "-" + k.field.replace(/[\.|\s]/g, "-"),
						n.addClass(k.cellClass).css("width", "")
					} else $('<div class="datagrid-cell-group"></div>').html(k.title).appendTo(m);
					k.hidden && m.hide()
				}
			}
			if (c && opts.rownumbers) {
				var m = $('<td rowspan="' + opts.frozenColumns.length + '"><div class="datagrid-header-rownumber"></div></td>');
				$("tr", f).length == 0 ? m.wrap('<tr class="datagrid-header-row"></tr>').parent().appendTo($("tbody", f)) : m.prependTo($("tr:first", f))
			}
		}
		function _54c() {
			var a = [],
			b = _557(_546, !0).concat(_557(_546));
			for (var c = 0; c < b.length; c++) {
				var d = _558(_546, b[c]);
				d && !d.checkbox && a.push(["." + d.cellClass, d.boxWidth ? d.boxWidth + "px": "auto"])
			}
			_547.ss.add(a),
			_547.ss.dirty(_547.cellSelectorPrefix),
			_547.cellSelectorPrefix = "." + _547.cellClassPrefix
		}
		var _547 = $.data(_546, "datagrid"),
		opts = _547.options,
		dc = _547.dc,
		_548 = _547.panel;
		_547.ss = $(_546).datagrid("createStyleSheet"),
		_548.panel($.extend({},
		opts, {
			id: null,
			doSize: !1,
			onResize: function(a, b) {
				setTimeout(function() {
					$.data(_546, "datagrid") && (_519(_546), _579(_546), opts.onResize.call(_548, a, b))
				},
				0)
			},
			onExpand: function() {
				_526(_546),
				opts.onExpand.call(_548)
			}
		})),
		_547.rowIdPrefix = "datagrid-row-r" + ++_501,
		_547.cellClassPrefix = "datagrid-cell-c" + _501,
		_54b(dc.header1, opts.frozenColumns, !0),
		_54b(dc.header2, opts.columns, !1),
		_54c(),
		dc.header1.add(dc.header2).css("display", opts.showHeader ? "block": "none"),
		dc.footer1.add(dc.footer2).css("display", opts.showFooter ? "block": "none");
		if (opts.toolbar) if ($.isArray(opts.toolbar)) {
			$("div.datagrid-toolbar", _548).remove();
			var tb = $('<div class="datagrid-toolbar"><table cellspacing="0" cellpadding="0"><tr></tr></table></div>').prependTo(_548),
			tr = tb.find("tr");
			for (var i = 0; i < opts.toolbar.length; i++) {
				var btn = opts.toolbar[i];
				if (btn == "-") $('<td><div class="datagrid-btn-separator"></div></td>').appendTo(tr);
				else {
					var td = $("<td></td>").appendTo(tr),
					tool = $('<a href="javascript:void(0)"></a>').appendTo(td);
					tool[0].onclick = eval(btn.handler ||
					function() {}),
					tool.linkbutton($.extend({},
					btn, {
						plain: !0
					}))
				}
			}
		} else $(opts.toolbar).addClass("datagrid-toolbar").prependTo(_548),
		$(opts.toolbar).show();
		else $("div.datagrid-toolbar", _548).remove();
		$("div.datagrid-pager", _548).remove();
		if (opts.pagination) {
			var _54d = $('<div class="datagrid-pager"></div>');
			if (opts.pagePosition == "bottom") _54d.appendTo(_548);
			else if (opts.pagePosition == "top") _54d.addClass("datagrid-pager-top").prependTo(_548);
			else {
				var ptop = $('<div class="datagrid-pager datagrid-pager-top"></div>').prependTo(_548);
				_54d.appendTo(_548),
				_54d = _54d.add(ptop)
			}
			_54d.pagination({
				total: opts.pageNumber * opts.pageSize,
				pageNumber: opts.pageNumber,
				pageSize: opts.pageSize,
				pageList: opts.pageList,
				onSelectPage: function(a, b) {
					opts.pageNumber = a,
					opts.pageSize = b,
					_54d.pagination("refresh", {
						pageNumber: a,
						pageSize: b
					}),
					_577(_546)
				}
			}),
			opts.pageSize = _54d.pagination("options").pageSize
		}
	}
	function _559(a) {
		function i(a) {
			return a.attr("datagrid-row-index") ? parseInt(a.attr("datagrid-row-index")) : a.attr("node-id")
		}
		function j(a) {
			return a.length && a.parent().length
		}
		var b = $.data(a, "datagrid"),
		c = b.panel,
		d = b.options,
		e = b.dc,
		f = e.header1.add(e.header2);
		f.find("input[type=checkbox]").unbind(".datagrid").bind("click.datagrid",
		function(b) {
			if (d.singleSelect && d.selectOnCheck) return ! 1;
			$(this).is(":checked") ? _5df(a) : _5e5(a),
			b.stopPropagation()
		});
		var g = f.find("div.datagrid-cell");
		g.closest("td").unbind(".datagrid").bind("mouseenter.datagrid",
		function() {
			if (b.resizing) return;
			$(this).addClass("datagrid-header-over")
		}).bind("mouseleave.datagrid",
		function() {
			$(this).removeClass("datagrid-header-over")
		}).bind("contextmenu.datagrid",
		function(b) {
			var c = $(this).attr("field");
			d.onHeaderContextMenu.call(a, b, c)
		}),
		g.unbind(".datagrid").bind("click.datagrid",
		function(b) {
			var c = $(this).offset().left + 5,
			d = $(this).offset().left + $(this)._outerWidth() - 5;
			b.pageX < d && b.pageX > c && _56c(a, $(this).parent().attr("field"))
		}).bind("dblclick.datagrid",
		function(b) {
			var c = $(this).offset().left + 5,
			e = $(this).offset().left + $(this)._outerWidth() - 5,
			f = d.resizeHandle == "right" ? b.pageX > e: d.resizeHandle == "left" ? b.pageX < c: b.pageX < c || b.pageX > e;
			if (f) {
				var g = $(this).parent().attr("field"),
				h = _558(a, g);
				if (h.resizable == 0) return;
				$(a).datagrid("autoSizeColumn", g),
				h.auto = !1
			}
		});
		var h = d.resizeHandle == "right" ? "e": d.resizeHandle == "left" ? "w": "e,w";
		g.each(function() {
			$(this).resizable({
				handles: h,
				disabled: $(this).attr("resizable") ? $(this).attr("resizable") == "false": !1,
				minWidth: 25,
				onStartResize: function(a) {
					b.resizing = !0,
					f.css("cursor", $("body").css("cursor")),
					b.proxy || (b.proxy = $('<div class="datagrid-resize-proxy"></div>').appendTo(e.view)),
					b.proxy.css({
						left: a.pageX - $(c).offset().left - 1,
						display: "none"
					}),
					setTimeout(function() {
						b.proxy && b.proxy.show()
					},
					500)
				},
				onResize: function(a) {
					return b.proxy.css({
						left: a.pageX - $(c).offset().left - 1,
						display: "block"
					}),
					!1
				},
				onStopResize: function(c) {
					f.css("cursor", ""),
					$(this).css("height", ""),
					$(this)._outerWidth($(this)._outerWidth());
					var e = $(this).parent().attr("field"),
					g = _558(a, e);
					g.width = $(this)._outerWidth(),
					g.boxWidth = parseInt(this.style.width),
					g.auto = undefined,
					$(this).css("width", ""),
					_542(a, e),
					b.proxy.remove(),
					b.proxy = null,
					$(this).parents("div:first.datagrid-header").parent().hasClass("datagrid-view1") && _519(a),
					_579(a),
					d.onResizeColumn.call(a, e, g.width),
					setTimeout(function() {
						b.resizing = !1
					},
					0)
				}
			})
		}),
		e.body1.add(e.body2).unbind().bind("mouseover",
		function(c) {
			if (b.resizing) return;
			var d = $(c.target).closest("tr.datagrid-row");
			if (!j(d)) return;
			var e = i(d);
			_5c7(a, e),
			c.stopPropagation()
		}).bind("mouseout",
		function(b) {
			var c = $(b.target).closest("tr.datagrid-row");
			if (!j(c)) return;
			var e = i(c);
			d.finder.getTr(a, e).removeClass("datagrid-row-over"),
			b.stopPropagation()
		}).bind("click",
		function(b) {
			var c = $(b.target),
			e = c.closest("tr.datagrid-row");
			if (!j(e)) return;
			var f = i(e);
			if (c.parent().hasClass("datagrid-cell-check")) d.singleSelect && d.selectOnCheck ? (d.checkOnSelect || _5e5(a, !0), _5d2(a, f)) : c.is(":checked") ? _5d2(a, f) : _5d9(a, f);
			else {
				var g = d.finder.getRow(a, f),
				h = c.closest("td[field]", e);
				if (h.length) {
					var k = h.attr("field");
					d.onClickCell.call(a, f, k, g[k])
				}
				d.singleSelect == 1 ? _5cb(a, f) : d.ctrlSelect ? b.ctrlKey ? e.hasClass("datagrid-row-selected") ? _5d3(a, f) : _5cb(a, f) : ($(a).datagrid("clearSelections"), _5cb(a, f)) : e.hasClass("datagrid-row-selected") ? _5d3(a, f) : _5cb(a, f),
				d.onClickRow.call(a, f, g)
			}
			b.stopPropagation()
		}).bind("dblclick",
		function(b) {
			var c = $(b.target),
			e = c.closest("tr.datagrid-row");
			if (!j(e)) return;
			var f = i(e),
			g = d.finder.getRow(a, f),
			h = c.closest("td[field]", e);
			if (h.length) {
				var k = h.attr("field");
				d.onDblClickCell.call(a, f, k, g[k])
			}
			d.onDblClickRow.call(a, f, g),
			b.stopPropagation()
		}).bind("contextmenu",
		function(b) {
			var c = $(b.target).closest("tr.datagrid-row");
			if (!j(c)) return;
			var e = i(c),
			f = d.finder.getRow(a, e);
			d.onRowContextMenu.call(a, b, e, f),
			b.stopPropagation()
		}),
		e.body2.bind("scroll",
		function() {
			var a = e.view1.children("div.datagrid-body");
			a.scrollTop($(this).scrollTop());
			var b = e.body1.children(":first"),
			c = e.body2.children(":first");
			if (b.length && c.length) {
				var d = b.offset().top,
				f = c.offset().top;
				d != f && a.scrollTop(a.scrollTop() + d - f)
			}
			e.view2.children("div.datagrid-header,div.datagrid-footer")._scrollLeft($(this)._scrollLeft()),
			e.body2.children("table.datagrid-btable-frozen").css("left", -$(this)._scrollLeft())
		})
	}
	function _56c(a, b) {
		var c = $.data(a, "datagrid"),
		d = c.options;
		b = b || {};
		var e = {
			sortName: d.sortName,
			sortOrder: d.sortOrder
		};
		typeof b == "object" && $.extend(e, b);
		var f = [],
		g = [];
		e.sortName && (f = e.sortName.split(","), g = e.sortOrder.split(","));
		if (typeof b == "string") {
			var h = b,
			i = _558(a, h);
			if (!i.sortable || c.resizing) return;
			var j = i.order || "asc",
			k = _502(f, h);
			if (k >= 0) {
				var l = g[k] == "asc" ? "desc": "asc";
				d.multiSort && l == j ? (f.splice(k, 1), g.splice(k, 1)) : g[k] = l
			} else d.multiSort ? (f.push(h), g.push(j)) : (f = [h], g = [j]);
			e.sortName = f.join(","),
			e.sortOrder = g.join(",")
		}
		if (d.onBeforeSortColumn.call(a, e.sortName, e.sortOrder) == 0) return;
		$.extend(d, e);
		var m = c.dc,
		n = m.header1.add(m.header2);
		n.find("div.datagrid-cell").removeClass("datagrid-sort-asc datagrid-sort-desc");
		for (var o = 0; o < f.length; o++) {
			var i = _558(a, f[o]);
			n.find("div." + i.cellClass).addClass("datagrid-sort-" + g[o])
		}
		d.remoteSort ? _577(a) : _578(a, $(a).datagrid("getData")),
		d.onSortColumn.call(a, d.sortName, d.sortOrder)
	}
	function _579(a) {
		function o(a, b) {
			a.width + b > 0 && (a.width += b, a.boxWidth += b)
		}
		function p(a) {
			if (!a.hidden && !a.checkbox && !a.auto && !a.fixed) return ! 0
		}
		var b = $.data(a, "datagrid"),
		c = b.options,
		d = b.dc;
		d.body2.css("overflow-x", "");
		if (!c.fitColumns) return;
		b.leftWidth || (b.leftWidth = 0);
		var e = d.view2.children("div.datagrid-header"),
		f = 0,
		g,
		h = _557(a, !1);
		for (var i = 0; i < h.length; i++) {
			var j = _558(a, h[i]);
			p(j) && (f += j.width, g = j)
		}
		if (!f) return;
		g && o(g, -b.leftWidth);
		var k = e.children("div.datagrid-header-inner").show(),
		l = e.width() - e.find("table").width() - c.scrollbarSize + b.leftWidth,
		m = l / f;
		c.showHeader || k.hide();
		for (var i = 0; i < h.length; i++) {
			var j = _558(a, h[i]);
			if (p(j)) {
				var n = parseInt(j.width * m);
				o(j, n),
				l -= n
			}
		}
		b.leftWidth = l,
		g && o(g, b.leftWidth),
		_542(a),
		e.width() >= e.find("table").width() && d.body2.css("overflow-x", "hidden")
	}
	function _586(a, b) {
		function k(b) {
			function i(e) {
				function h(a) {
					return a.is(":visible") ? a._outerWidth() : f.html(a.html())._outerWidth()
				}
				var g = 0;
				return e == "header" ? g = h(c) : d.finder.getTr(a, 0, e).find('td[field="' + b + '"] div.datagrid-cell').each(function() {
					var a = h($(this));
					g < a && (g = a)
				}),
				g
			}
			var c = e.view.find('div.datagrid-header td[field="' + b + '"] div.datagrid-cell');
			c.css("width", "");
			var g = $(a).datagrid("getColumnOption", b);
			g.width = undefined,
			g.boxWidth = undefined,
			g.auto = !0,
			$(a).datagrid("fixColumnSize", b);
			var h = Math.max(i("header"), i("allbody"), i("allfooter"));
			c._outerWidth(h),
			g.width = h,
			g.boxWidth = parseInt(c[0].style.width),
			c.css("width", ""),
			$(a).datagrid("fixColumnSize", b),
			d.onResizeColumn.call(a, b, g.width)
		}
		var c = $.data(a, "datagrid"),
		d = c.options,
		e = c.dc,
		f = $('<div class="datagrid-cell" style="position:absolute;left:-9999px"></div>').appendTo("body");
		if (b) k(b),
		d.fitColumns && (_519(a), _579(a));
		else {
			var g = !1,
			h = _557(a, !0).concat(_557(a, !1));
			for (var i = 0; i < h.length; i++) {
				var b = h[i],
				j = _558(a, b);
				j.auto && (k(b), g = !0)
			}
			g && d.fitColumns && (_519(a), _579(a))
		}
		f.remove()
	}
	function _542(a, b) {
		function i(b) {
			var d = _558(a, b);
			d.checkbox || c.ss.set("." + d.cellClass, d.boxWidth ? d.boxWidth + "px": "auto")
		}
		var c = $.data(a, "datagrid"),
		d = c.options,
		e = c.dc,
		f = e.view.find("table.datagrid-btable,table.datagrid-ftable");
		f.css("table-layout", "fixed");
		if (b) i(b);
		else {
			var g = _557(a, !0).concat(_557(a, !1));
			for (var h = 0; h < g.length; h++) i(g[h])
		}
		f.css("table-layout", "auto"),
		_596(a),
		setTimeout(function() {
			_526(a),
			_59b(a)
		},
		0)
	}
	function _596(a) {
		var b = $.data(a, "datagrid").dc;
		b.body1.add(b.body2).find("td.datagrid-td-merged").each(function() {
			var b = $(this),
			c = b.attr("colspan") || 1,
			d = _558(a, b.attr("field")).width;
			for (var e = 1; e < c; e++) b = b.next(),
			d += _558(a, b.attr("field")).width + 1;
			$(this).children("div.datagrid-cell")._outerWidth(d)
		})
	}
	function _59b(a) {
		var b = $.data(a, "datagrid").dc;
		b.view.find("div.datagrid-editable").each(function() {
			var b = $(this),
			c = b.parent().attr("field"),
			d = $(a).datagrid("getColumnOption", c);
			b._outerWidth(d.width);
			var e = $.data(this, "datagrid.editor");
			e.actions.resize && e.actions.resize(e.target, b.width())
		})
	}
	function _558(a, b) {
		function c(a) {
			if (a) for (var c = 0; c < a.length; c++) {
				var d = a[c];
				for (var e = 0; e < d.length; e++) {
					var f = d[e];
					if (f.field == b) return f
				}
			}
			return null
		}
		var d = $.data(a, "datagrid").options,
		e = c(d.columns);
		return e || (e = c(d.frozenColumns)),
		e
	}
	function _557(a, b) {
		function f(a) {
			var b = 0,
			c = 0;
			for (;;) {
				if (e[c] == undefined) {
					if (b == a) return c;
					b++
				}
				c++
			}
		}
		function g(a) {
			var b = [],
			c = 0;
			for (var g = 0; g < d[a].length; g++) {
				var h = d[a][g];
				h.field && b.push([c, h.field]),
				c += parseInt(h.colspan || "1")
			}
			for (var g = 0; g < b.length; g++) b[g][0] = f(b[g][0]);
			for (var g = 0; g < b.length; g++) {
				var i = b[g];
				e[i[0]] = i[1]
			}
		}
		var c = $.data(a, "datagrid").options,
		d = b == 1 ? c.frozenColumns || [[]] : c.columns;
		if (d.length == 0) return [];
		var e = [];
		for (var h = 0; h < d.length; h++) g(h);
		return e
	}
	function _578(a, b) {
		var c = $.data(a, "datagrid"),
		d = c.options,
		e = c.dc;
		b = d.loadFilter.call(a, b),
		b.total = parseInt(b.total),
		c.data = b,
		b.footer && (c.footer = b.footer);
		if (!d.remoteSort && d.sortName) {
			var f = d.sortName.split(","),
			g = d.sortOrder.split(",");
			b.rows.sort(function(b, c) {
				var d = 0;
				for (var e = 0; e < f.length; e++) {
					var h = f[e],
					i = g[e],
					j = _558(a, h),
					k = j.sorter ||
					function(a, b) {
						return a == b ? 0 : a > b ? 1 : -1
					};
					d = k(b[h], c[h]) * (i == "asc" ? 1 : -1);
					if (d != 0) return d
				}
				return d
			})
		}
		d.view.onBeforeRender && d.view.onBeforeRender.call(d.view, a, b.rows),
		d.view.render.call(d.view, a, e.body2, !1),
		d.view.render.call(d.view, a, e.body1, !0),
		d.showFooter && (d.view.renderFooter.call(d.view, a, e.footer2, !1), d.view.renderFooter.call(d.view, a, e.footer1, !0)),
		d.view.onAfterRender && d.view.onAfterRender.call(d.view, a),
		c.ss.clean(),
		d.onLoadSuccess.call(a, b);
		var h = $(a).datagrid("getPager");
		if (h.length) {
			var i = h.pagination("options");
			i.total != b.total && (h.pagination("refresh", {
				total: b.total
			}), d.pageNumber != i.pageNumber && (d.pageNumber = i.pageNumber, _577(a)))
		}
		_526(a),
		e.body2.triggerHandler("scroll"),
		_5af(a),
		$(a).datagrid("autoSizeColumn")
	}
	function _5af(a) {
		function k(a, b) {
			for (var d = 0; d < a.length; d++) if (a[d][c.idField] == b[c.idField]) return a[d] = b,
			!0;
			return ! 1
		}
		var b = $.data(a, "datagrid"),
		c = b.options;
		if (c.idField) {
			var d = $.data(a, "treegrid") ? !0 : !1,
			e = c.onSelect,
			f = c.onCheck;
			c.onSelect = c.onCheck = function() {};
			var g = c.finder.getRows(a);
			for (var h = 0; h < g.length; h++) {
				var i = g[h],
				j = d ? i[c.idField] : h;
				k(b.selectedRows, i) && _5cb(a, j, !0),
				k(b.checkedRows, i) && _5d2(a, j, !0)
			}
			c.onSelect = e,
			c.onCheck = f
		}
	}
	function _5b7(a, b) {
		var c = $.data(a, "datagrid"),
		d = c.options,
		e = c.data.rows;
		if (typeof b == "object") return _502(e, b);
		for (var f = 0; f < e.length; f++) if (e[f][d.idField] == b) return f;
		return - 1
	}
	function _5ba(a) {
		var b = $.data(a, "datagrid"),
		c = b.options,
		d = b.data;
		if (c.idField) return b.selectedRows;
		var e = [];
		return c.finder.getTr(a, "", "selected", 2).each(function() {
			e.push(c.finder.getRow(a, $(this)))
		}),
		e
	}
	function _5bd(a) {
		var b = $.data(a, "datagrid"),
		c = b.options;
		if (c.idField) return b.checkedRows;
		var d = [];
		return c.finder.getTr(a, "", "checked", 2).each(function() {
			d.push(c.finder.getRow(a, $(this)))
		}),
		d
	}
	function _5c0(a, b) {
		var c = $.data(a, "datagrid"),
		d = c.dc,
		e = c.options,
		f = e.finder.getTr(a, b);
		if (f.length) {
			if (f.closest("table").hasClass("datagrid-btable-frozen")) return;
			var g = d.view2.children("div.datagrid-header")._outerHeight(),
			h = d.body2,
			i = h.outerHeight(!0) - h.outerHeight(),
			j = f.position().top - g - i;
			j < 0 ? h.scrollTop(h.scrollTop() + j) : j + f._outerHeight() > h.height() - 18 && h.scrollTop(h.scrollTop() + j + f._outerHeight() - h.height() + 18)
		}
	}
	function _5c7(a, b) {
		var c = $.data(a, "datagrid"),
		d = c.options;
		d.finder.getTr(a, c.highlightIndex).removeClass("datagrid-row-over"),
		d.finder.getTr(a, b).addClass("datagrid-row-over"),
		c.highlightIndex = b
	}
	function _5cb(a, b, c) {
		var d = $.data(a, "datagrid"),
		e = d.dc,
		f = d.options,
		g = d.selectedRows;
		f.singleSelect && (_5d1(a), g.splice(0, g.length)),
		!c && f.checkOnSelect && _5d2(a, b, !0);
		var h = f.finder.getRow(a, b);
		f.idField && _505(g, f.idField, h),
		f.finder.getTr(a, b).addClass("datagrid-row-selected"),
		f.onSelect.call(a, b, h),
		_5c0(a, b)
	}
	function _5d3(a, b, c) {
		var d = $.data(a, "datagrid"),
		e = d.dc,
		f = d.options,
		g = $.data(a, "datagrid").selectedRows; ! c && f.checkOnSelect && _5d9(a, b, !0),
		f.finder.getTr(a, b).removeClass("datagrid-row-selected");
		var h = f.finder.getRow(a, b);
		f.idField && _503(g, f.idField, h[f.idField]),
		f.onUnselect.call(a, b, h)
	}
	function _5da(a, b) {
		var c = $.data(a, "datagrid"),
		d = c.options,
		e = d.finder.getRows(a),
		f = $.data(a, "datagrid").selectedRows; ! b && d.checkOnSelect && _5df(a, !0),
		d.finder.getTr(a, "", "allbody").addClass("datagrid-row-selected");
		if (d.idField) for (var g = 0; g < e.length; g++) _505(f, d.idField, e[g]);
		d.onSelectAll.call(a, e)
	}
	function _5d1(a, b) {
		var c = $.data(a, "datagrid"),
		d = c.options,
		e = d.finder.getRows(a),
		f = $.data(a, "datagrid").selectedRows; ! b && d.checkOnSelect && _5e5(a, !0),
		d.finder.getTr(a, "", "selected").removeClass("datagrid-row-selected");
		if (d.idField) for (var g = 0; g < e.length; g++) _503(f, d.idField, e[g][d.idField]);
		d.onUnselectAll.call(a, e)
	}
	function _5d2(a, b, c) {
		var d = $.data(a, "datagrid"),
		e = d.options; ! c && e.selectOnCheck && _5cb(a, b, !0);
		var f = e.finder.getTr(a, b).addClass("datagrid-row-checked"),
		g = f.find("div.datagrid-cell-check input[type=checkbox]");
		g._propAttr("checked", !0),
		f = e.finder.getTr(a, "", "checked", 2);
		if (f.length == e.finder.getRows(a).length) {
			var h = d.dc,
			i = h.header1.add(h.header2);
			i.find("input[type=checkbox]")._propAttr("checked", !0)
		}
		var j = e.finder.getRow(a, b);
		e.idField && _505(d.checkedRows, e.idField, j),
		e.onCheck.call(a, b, j)
	}
	function _5d9(a, b, c) {
		var d = $.data(a, "datagrid"),
		e = d.options; ! c && e.selectOnCheck && _5d3(a, b, !0);
		var f = e.finder.getTr(a, b).removeClass("datagrid-row-checked"),
		g = f.find("div.datagrid-cell-check input[type=checkbox]");
		g._propAttr("checked", !1);
		var h = d.dc,
		i = h.header1.add(h.header2);
		i.find("input[type=checkbox]")._propAttr("checked", !1);
		var j = e.finder.getRow(a, b);
		e.idField && _503(d.checkedRows, e.idField, j[e.idField]),
		e.onUncheck.call(a, b, j)
	}
	function _5df(a, b) {
		var c = $.data(a, "datagrid"),
		d = c.options,
		e = d.finder.getRows(a); ! b && d.selectOnCheck && _5da(a, !0);
		var f = c.dc,
		g = f.header1.add(f.header2).find("input[type=checkbox]"),
		h = d.finder.getTr(a, "", "allbody").addClass("datagrid-row-checked").find("div.datagrid-cell-check input[type=checkbox]");
		g.add(h)._propAttr("checked", !0);
		if (d.idField) for (var i = 0; i < e.length; i++) _505(c.checkedRows, d.idField, e[i]);
		d.onCheckAll.call(a, e)
	}
	function _5e5(a, b) {
		var c = $.data(a, "datagrid"),
		d = c.options,
		e = d.finder.getRows(a); ! b && d.selectOnCheck && _5d1(a, !0);
		var f = c.dc,
		g = f.header1.add(f.header2).find("input[type=checkbox]"),
		h = d.finder.getTr(a, "", "checked").removeClass("datagrid-row-checked").find("div.datagrid-cell-check input[type=checkbox]");
		g.add(h)._propAttr("checked", !1);
		if (d.idField) for (var i = 0; i < e.length; i++) _503(c.checkedRows, d.idField, e[i][d.idField]);
		d.onUncheckAll.call(a, e)
	}
	function _5f7(a, b) {
		var c = $.data(a, "datagrid").options,
		d = c.finder.getTr(a, b),
		e = c.finder.getRow(a, b);
		if (d.hasClass("datagrid-row-editing")) return;
		if (c.onBeforeEdit.call(a, b, e) == 0) return;
		d.addClass("datagrid-row-editing"),
		_5fa(a, b),
		_59b(a),
		d.find("div.datagrid-editable").each(function() {
			var a = $(this).parent().attr("field"),
			b = $.data(this, "datagrid.editor");
			b.actions.setValue(b.target, e[a])
		}),
		_5fc(a, b),
		c.onBeginEdit.call(a, b, e)
	}
	function _5fd(a, b, c) {
		var d = $.data(a, "datagrid").options,
		e = $.data(a, "datagrid").updatedRows,
		f = $.data(a, "datagrid").insertedRows,
		g = d.finder.getTr(a, b),
		h = d.finder.getRow(a, b);
		if (!g.hasClass("datagrid-row-editing")) return;
		if (!c) {
			if (!_5fc(a, b)) return;
			var i = !1,
			j = {};
			g.find("div.datagrid-editable").each(function() {
				var a = $(this).parent().attr("field"),
				b = $.data(this, "datagrid.editor"),
				c = b.actions.getValue(b.target);
				h[a] != c && (h[a] = c, i = !0, j[a] = c)
			}),
			i && _502(f, h) == -1 && _502(e, h) == -1 && e.push(h),
			d.onEndEdit.call(a, b, h, j)
		}
		g.removeClass("datagrid-row-editing"),
		_607(a, b),
		$(a).datagrid("refreshRow", b),
		c ? d.onCancelEdit.call(a, b, h) : d.onAfterEdit.call(a, b, h, j)
	}
	function _608(a, b) {
		var c = $.data(a, "datagrid").options,
		d = c.finder.getTr(a, b),
		e = [];
		return d.children("td").each(function() {
			var a = $(this).find("div.datagrid-editable");
			if (a.length) {
				var b = $.data(a[0], "datagrid.editor");
				e.push(b)
			}
		}),
		e
	}
	function _60c(a, b) {
		var c = _608(a, b.index != undefined ? b.index: b.id);
		for (var d = 0; d < c.length; d++) if (c[d].field == b.field) return c[d];
		return null
	}
	function _5fa(a, b) {
		var c = $.data(a, "datagrid").options,
		d = c.finder.getTr(a, b);
		d.children("td").each(function() {
			var b = $(this).find("div.datagrid-cell"),
			d = $(this).attr("field"),
			e = _558(a, d);
			if (e && e.editor) {
				var f, g;
				typeof e.editor == "string" ? f = e.editor: (f = e.editor.type, g = e.editor.options);
				var h = c.editors[f];
				if (h) {
					var i = b.html(),
					j = b._outerWidth();
					b.addClass("datagrid-editable"),
					b._outerWidth(j),
					b.html('<table border="0" cellspacing="0" cellpadding="1"><tr><td></td></tr></table>'),
					b.children("table").bind("click dblclick contextmenu",
					function(a) {
						a.stopPropagation()
					}),
					$.data(b[0], "datagrid.editor", {
						actions: h,
						target: h.init(b.find("td"), g),
						field: d,
						type: f,
						oldHtml: i
					})
				}
			}
		}),
		_526(a, b, !0)
	}
	function _607(a, b) {
		var c = $.data(a, "datagrid").options,
		d = c.finder.getTr(a, b);
		d.children("td").each(function() {
			var a = $(this).find("div.datagrid-editable");
			if (a.length) {
				var b = $.data(a[0], "datagrid.editor");
				b.actions.destroy && b.actions.destroy(b.target),
				a.html(b.oldHtml),
				$.removeData(a[0], "datagrid.editor"),
				a.removeClass("datagrid-editable"),
				a.css("width", "")
			}
		})
	}
	function _5fc(a, b) {
		var c = $.data(a, "datagrid").options.finder.getTr(a, b);
		if (!c.hasClass("datagrid-row-editing")) return ! 0;
		var d = c.find(".validatebox-text");
		d.validatebox("validate"),
		d.trigger("mouseleave");
		var e = c.find(".validatebox-invalid");
		return e.length == 0
	}
	function _61d(a, b) {
		var c = $.data(a, "datagrid").insertedRows,
		d = $.data(a, "datagrid").deletedRows,
		e = $.data(a, "datagrid").updatedRows;
		if (!b) {
			var f = [];
			return f = f.concat(c),
			f = f.concat(d),
			f = f.concat(e),
			f
		}
		return b == "inserted" ? c: b == "deleted" ? d: b == "updated" ? e: []
	}
	function _623(a, b) {
		var c = $.data(a, "datagrid"),
		d = c.options,
		e = c.data,
		f = c.insertedRows,
		g = c.deletedRows;
		$(a).datagrid("cancelEdit", b);
		var h = d.finder.getRow(a, b);
		_502(f, h) >= 0 ? _503(f, h) : g.push(h),
		_503(c.selectedRows, d.idField, h[d.idField]),
		_503(c.checkedRows, d.idField, h[d.idField]),
		d.view.deleteRow.call(d.view, a, b),
		d.height == "auto" && _526(a),
		$(a).datagrid("getPager").pagination("refresh", {
			total: e.total
		})
	}
	function _629(a, b) {
		var c = $.data(a, "datagrid").data,
		d = $.data(a, "datagrid").options.view,
		e = $.data(a, "datagrid").insertedRows;
		d.insertRow.call(d, a, b.index, b.row),
		e.push(b.row),
		$(a).datagrid("getPager").pagination("refresh", {
			total: c.total
		})
	}
	function _62d(a, b) {
		var c = $.data(a, "datagrid").data,
		d = $.data(a, "datagrid").options.view,
		e = $.data(a, "datagrid").insertedRows;
		d.insertRow.call(d, a, null, b),
		e.push(b),
		$(a).datagrid("getPager").pagination("refresh", {
			total: c.total
		})
	}
	function _630(a) {
		var b = $.data(a, "datagrid"),
		c = b.data,
		d = c.rows,
		e = [];
		for (var f = 0; f < d.length; f++) e.push($.extend({},
		d[f]));
		b.originalRows = e,
		b.updatedRows = [],
		b.insertedRows = [],
		b.deletedRows = []
	}
	function _634(a) {
		var b = $.data(a, "datagrid").data,
		c = !0;
		for (var d = 0,
		e = b.rows.length; d < e; d++) _5fc(a, d) ? _5fd(a, d, !1) : c = !1;
		c && _630(a)
	}
	function _636(a) {
		function j(a) {
			var b = [];
			for (var d = 0; d < a.length; d++) b.push(a[d][c.idField]);
			return b
		}
		function k(b, c) {
			for (var d = 0; d < b.length; d++) {
				var e = _5b7(a, b[d]);
				e >= 0 && (c == "s" ? _5cb: _5d2)(a, e, !0)
			}
		}
		var b = $.data(a, "datagrid"),
		c = b.options,
		d = b.originalRows,
		e = b.insertedRows,
		f = b.deletedRows,
		g = b.selectedRows,
		h = b.checkedRows,
		i = b.data;
		for (var l = 0; l < i.rows.length; l++) _5fd(a, l, !0);
		var m = j(g),
		n = j(h);
		g.splice(0, g.length),
		h.splice(0, h.length),
		i.total += f.length - e.length,
		i.rows = d,
		_578(a, i),
		k(m, "s"),
		k(n, "c"),
		_630(a)
	}
	function _577(a, b) {
		function e() {
			var b = c.loader.call(a, d,
			function(b) {
				setTimeout(function() {
					$(a).datagrid("loaded")
				},
				0),
				_578(a, b),
				setTimeout(function() {
					_630(a)
				},
				0)
			},
			function() {
				setTimeout(function() {
					$(a).datagrid("loaded")
				},
				0),
				c.onLoadError.apply(a, arguments)
			});
			b == 0 && $(a).datagrid("loaded")
		}
		var c = $.data(a, "datagrid").options;
		b && (c.queryParams = b);
		var d = $.extend({},
		c.queryParams);
		c.pagination && $.extend(d, {
			page: c.pageNumber,
			rows: c.pageSize
		}),
		c.sortName && $.extend(d, {
			sort: c.sortName,
			order: c.sortOrder
		});
		if (c.onBeforeLoad.call(a, d) == 0) return;
		$(a).datagrid("loading"),
		setTimeout(function() {
			e()
		},
		0)
	}
	function _649(a, b) {
		var c = $.data(a, "datagrid").options;
		b.rowspan = b.rowspan || 1,
		b.colspan = b.colspan || 1;
		if (b.rowspan == 1 && b.colspan == 1) return;
		var d = c.finder.getTr(a, b.index != undefined ? b.index: b.id);
		if (!d.length) return;
		var e = c.finder.getRow(a, d),
		f = e[b.field],
		g = d.find('td[field="' + b.field + '"]');
		g.attr("rowspan", b.rowspan).attr("colspan", b.colspan),
		g.addClass("datagrid-td-merged");
		for (var h = 1; h < b.colspan; h++) g = g.next(),
		g.hide(),
		e[g.attr("field")] = f;
		for (var h = 1; h < b.rowspan; h++) {
			d = d.next();
			if (!d.length) break;
			var e = c.finder.getRow(a, d),
			g = d.find('td[field="' + b.field + '"]').hide();
			e[g.attr("field")] = f;
			for (var i = 1; i < b.colspan; i++) g = g.next(),
			g.hide(),
			e[g.attr("field")] = f
		}
		_596(a)
	}
	var _501 = 0;
	$.fn.datagrid = function(a, b) {
		return typeof a == "string" ? $.fn.datagrid.methods[a](this, b) : (a = a || {},
		this.each(function() {
			var b = $.data(this, "datagrid"),
			c;
			if (b) c = $.extend(b.options, a),
			b.options = c;
			else {
				c = $.extend({},
				$.extend({},
				$.fn.datagrid.defaults, {
					queryParams: {}
				}), $.fn.datagrid.parseOptions(this), a),
				$(this).css("width", "").css("height", "");
				var d = _53a(this, c.rownumbers);
				c.columns || (c.columns = d.columns),
				c.frozenColumns || (c.frozenColumns = d.frozenColumns),
				c.columns = $.extend(!0, [], c.columns),
				c.frozenColumns = $.extend(!0, [], c.frozenColumns),
				c.view = $.extend({},
				c.view),
				$.data(this, "datagrid", {
					options: c,
					panel: d.panel,
					dc: d.dc,
					ss: null,
					selectedRows: [],
					checkedRows: [],
					data: {
						total: 0,
						rows: []
					},
					originalRows: [],
					updatedRows: [],
					insertedRows: [],
					deletedRows: []
				})
			}
			_545(this),
			_559(this),
			_515(this);
			if (c.data) _578(this, c.data),
			_630(this);
			else {
				var e = $.fn.datagrid.parseData(this);
				e.total > 0 && (_578(this, e), _630(this))
			}
			_577(this)
		}))
	};
	var _651 = {
		text: {
			init: function(a, b) {
				var c = $('<input type="text" class="datagrid-editable-input">').appendTo(a);
				return c
			},
			getValue: function(a) {
				return $(a).val()
			},
			setValue: function(a, b) {
				$(a).val(b)
			},
			resize: function(a, b) {
				$(a)._outerWidth(b)._outerHeight(22)
			}
		},
		textarea: {
			init: function(a, b) {
				var c = $('<textarea class="datagrid-editable-input"></textarea>').appendTo(a);
				return c
			},
			getValue: function(a) {
				return $(a).val()
			},
			setValue: function(a, b) {
				$(a).val(b)
			},
			resize: function(a, b) {
				$(a)._outerWidth(b)
			}
		},
		checkbox: {
			init: function(a, b) {
				var c = $('<input type="checkbox">').appendTo(a);
				return c.val(b.on),
				c.attr("offval", b.off),
				c
			},
			getValue: function(a) {
				return $(a).is(":checked") ? $(a).val() : $(a).attr("offval")
			},
			setValue: function(a, b) {
				var c = !1;
				$(a).val() == b && (c = !0),
				$(a)._propAttr("checked", c)
			}
		},
		numberbox: {
			init: function(a, b) {
				var c = $('<input type="text" class="datagrid-editable-input">').appendTo(a);
				return c.numberbox(b),
				c
			},
			destroy: function(a) {
				$(a).numberbox("destroy")
			},
			getValue: function(a) {
				return $(a).blur(),
				$(a).numberbox("getValue")
			},
			setValue: function(a, b) {
				$(a).numberbox("setValue", b)
			},
			resize: function(a, b) {
				$(a)._outerWidth(b)._outerHeight(22)
			}
		},
		validatebox: {
			init: function(a, b) {
				var c = $('<input type="text" class="datagrid-editable-input">').appendTo(a);
				return c.validatebox(b),
				c
			},
			destroy: function(a) {
				$(a).validatebox("destroy")
			},
			getValue: function(a) {
				return $(a).val()
			},
			setValue: function(a, b) {
				$(a).val(b)
			},
			resize: function(a, b) {
				$(a)._outerWidth(b)._outerHeight(22)
			}
		},
		datebox: {
			init: function(a, b) {
				var c = $('<input type="text">').appendTo(a);
				return c.datebox(b),
				c
			},
			destroy: function(a) {
				$(a).datebox("destroy")
			},
			getValue: function(a) {
				return $(a).datebox("getValue")
			},
			setValue: function(a, b) {
				$(a).datebox("setValue", b)
			},
			resize: function(a, b) {
				$(a).datebox("resize", b)
			}
		},
		combobox: {
			init: function(a, b) {
				var c = $('<input type="text">').appendTo(a);
				return c.combobox(b || {}),
				c
			},
			destroy: function(a) {
				$(a).combobox("destroy")
			},
			getValue: function(a) {
				var b = $(a).combobox("options");
				return b.multiple ? $(a).combobox("getValues").join(b.separator) : $(a).combobox("getValue")
			},
			setValue: function(a, b) {
				var c = $(a).combobox("options");
				c.multiple ? b ? $(a).combobox("setValues", b.split(c.separator)) : $(a).combobox("clear") : $(a).combobox("setValue", b)
			},
			resize: function(a, b) {
				$(a).combobox("resize", b)
			}
		},
		combotree: {
			init: function(a, b) {
				var c = $('<input type="text">').appendTo(a);
				return c.combotree(b),
				c
			},
			destroy: function(a) {
				$(a).combotree("destroy")
			},
			getValue: function(a) {
				var b = $(a).combotree("options");
				return b.multiple ? $(a).combotree("getValues").join(b.separator) : $(a).combotree("getValue")
			},
			setValue: function(a, b) {
				var c = $(a).combotree("options");
				c.multiple ? b ? $(a).combotree("setValues", b.split(c.separator)) : $(a).combotree("clear") : $(a).combotree("setValue", b)
			},
			resize: function(a, b) {
				$(a).combotree("resize", b)
			}
		},
		combogrid: {
			init: function(a, b) {
				var c = $('<input type="text">').appendTo(a);
				return c.combogrid(b),
				c
			},
			destroy: function(a) {
				$(a).combogrid("destroy")
			},
			getValue: function(a) {
				var b = $(a).combogrid("options");
				return b.multiple ? $(a).combogrid("getValues").join(b.separator) : $(a).combogrid("getValue")
			},
			setValue: function(a, b) {
				var c = $(a).combogrid("options");
				c.multiple ? b ? $(a).combogrid("setValues", b.split(c.separator)) : $(a).combogrid("clear") : $(a).combogrid("setValue", b)
			},
			resize: function(a, b) {
				$(a).combogrid("resize", b)
			}
		}
	};
	$.fn.datagrid.methods = {
		options: function(a) {
			var b = $.data(a[0], "datagrid").options,
			c = $.data(a[0], "datagrid").panel.panel("options"),
			d = $.extend(b, {
				width: c.width,
				height: c.height,
				closed: c.closed,
				collapsed: c.collapsed,
				minimized: c.minimized,
				maximized: c.maximized
			});
			return d
		},
		setSelectionState: function(a) {
			return a.each(function() {
				_5af(this)
			})
		},
		createStyleSheet: function(a) {
			return _506(a[0])
		},
		getPanel: function(a) {
			return $.data(a[0], "datagrid").panel
		},
		getPager: function(a) {
			return $.data(a[0], "datagrid").panel.children("div.datagrid-pager")
		},
		getColumnFields: function(a, b) {
			return _557(a[0], b)
		},
		getColumnOption: function(a, b) {
			return _558(a[0], b)
		},
		resize: function(a, b) {
			return a.each(function() {
				_515(this, b)
			})
		},
		load: function(a, b) {
			return a.each(function() {
				var a = $(this).datagrid("options");
				a.pageNumber = 1;
				var c = $(this).datagrid("getPager");
				c.pagination("refresh", {
					pageNumber: 1
				}),
				_577(this, b)
			})
		},
		reload: function(a, b) {
			return a.each(function() {
				_577(this, b)
			})
		},
		reloadFooter: function(a, b) {
			return a.each(function() {
				var a = $.data(this, "datagrid").options,
				c = $.data(this, "datagrid").dc;
				b && ($.data(this, "datagrid").footer = b),
				a.showFooter && (a.view.renderFooter.call(a.view, this, c.footer2, !1), a.view.renderFooter.call(a.view, this, c.footer1, !0), a.view.onAfterRender && a.view.onAfterRender.call(a.view, this), $(this).datagrid("fixRowHeight"))
			})
		},
		loading: function(a) {
			return a.each(function() {
				var a = $.data(this, "datagrid").options;
				$(this).datagrid("getPager").pagination("loading");
				if (a.loadMsg) {
					var b = $(this).datagrid("getPanel");
					if (!b.children("div.datagrid-mask").length) {
						$('<div class="datagrid-mask" style="display:block"></div>').appendTo(b);
						var c = $('<div class="datagrid-mask-msg" style="display:block;left:50%"></div>').html(a.loadMsg).appendTo(b);
						c._outerHeight(40),
						c.css({
							marginLeft: -c.outerWidth() / 2,
							lineHeight: c.height() + "px"
						})
					}
				}
			})
		},
		loaded: function(a) {
			return a.each(function() {
				$(this).datagrid("getPager").pagination("loaded");
				var a = $(this).datagrid("getPanel");
				a.children("div.datagrid-mask-msg").remove(),
				a.children("div.datagrid-mask").remove()
			})
		},
		fitColumns: function(a) {
			return a.each(function() {
				_579(this)
			})
		},
		fixColumnSize: function(a, b) {
			return a.each(function() {
				_542(this, b)
			})
		},
		fixRowHeight: function(a, b) {
			return a.each(function() {
				_526(this, b)
			})
		},
		freezeRow: function(a, b) {
			return a.each(function() {
				_533(this, b)
			})
		},
		autoSizeColumn: function(a, b) {
			return a.each(function() {
				_586(this, b)
			})
		},
		loadData: function(a, b) {
			return a.each(function() {
				_578(this, b),
				_630(this)
			})
		},
		getData: function(a) {
			return $.data(a[0], "datagrid").data
		},
		getRows: function(a) {
			return $.data(a[0], "datagrid").data.rows
		},
		getFooterRows: function(a) {
			return $.data(a[0], "datagrid").footer
		},
		getRowIndex: function(a, b) {
			return _5b7(a[0], b)
		},
		getChecked: function(a) {
			return _5bd(a[0])
		},
		getSelected: function(a) {
			var b = _5ba(a[0]);
			return b.length > 0 ? b[0] : null
		},
		getSelections: function(a) {
			return _5ba(a[0])
		},
		clearSelections: function(a) {
			return a.each(function() {
				var a = $.data(this, "datagrid"),
				b = a.selectedRows,
				c = a.checkedRows;
				b.splice(0, b.length),
				_5d1(this),
				a.options.checkOnSelect && c.splice(0, c.length)
			})
		},
		clearChecked: function(a) {
			return a.each(function() {
				var a = $.data(this, "datagrid"),
				b = a.selectedRows,
				c = a.checkedRows;
				c.splice(0, c.length),
				_5e5(this),
				a.options.selectOnCheck && b.splice(0, b.length)
			})
		},
		scrollTo: function(a, b) {
			return a.each(function() {
				_5c0(this, b)
			})
		},
		highlightRow: function(a, b) {
			return a.each(function() {
				_5c7(this, b),
				_5c0(this, b)
			})
		},
		selectAll: function(a) {
			return a.each(function() {
				_5da(this)
			})
		},
		unselectAll: function(a) {
			return a.each(function() {
				_5d1(this)
			})
		},
		selectRow: function(a, b) {
			return a.each(function() {
				_5cb(this, b)
			})
		},
		selectRecord: function(a, b) {
			return a.each(function() {
				var a = $.data(this, "datagrid").options;
				if (a.idField) {
					var c = _5b7(this, b);
					c >= 0 && $(this).datagrid("selectRow", c)
				}
			})
		},
		unselectRow: function(a, b) {
			return a.each(function() {
				_5d3(this, b)
			})
		},
		checkRow: function(a, b) {
			return a.each(function() {
				_5d2(this, b)
			})
		},
		uncheckRow: function(a, b) {
			return a.each(function() {
				_5d9(this, b)
			})
		},
		checkAll: function(a) {
			return a.each(function() {
				_5df(this)
			})
		},
		uncheckAll: function(a) {
			return a.each(function() {
				_5e5(this)
			})
		},
		beginEdit: function(a, b) {
			return a.each(function() {
				_5f7(this, b)
			})
		},
		endEdit: function(a, b) {
			return a.each(function() {
				_5fd(this, b, !1)
			})
		},
		cancelEdit: function(a, b) {
			return a.each(function() {
				_5fd(this, b, !0)
			})
		},
		getEditors: function(a, b) {
			return _608(a[0], b)
		},
		getEditor: function(a, b) {
			return _60c(a[0], b)
		},
		refreshRow: function(a, b) {
			return a.each(function() {
				var a = $.data(this, "datagrid").options;
				a.view.refreshRow.call(a.view, this, b)
			})
		},
		validateRow: function(a, b) {
			return _5fc(a[0], b)
		},
		updateRow: function(a, b) {
			return a.each(function() {
				var a = $.data(this, "datagrid").options;
				a.view.updateRow.call(a.view, this, b.index, b.row)
			})
		},
		appendRow: function(a, b) {
			return a.each(function() {
				_62d(this, b)
			})
		},
		insertRow: function(a, b) {
			return a.each(function() {
				_629(this, b)
			})
		},
		deleteRow: function(a, b) {
			return a.each(function() {
				_623(this, b)
			})
		},
		getChanges: function(a, b) {
			return _61d(a[0], b)
		},
		acceptChanges: function(a) {
			return a.each(function() {
				_634(this)
			})
		},
		rejectChanges: function(a) {
			return a.each(function() {
				_636(this)
			})
		},
		mergeCells: function(a, b) {
			return a.each(function() {
				_649(this, b)
			})
		},
		showColumn: function(a, b) {
			return a.each(function() {
				var a = $(this).datagrid("getPanel");
				a.find('td[field="' + b + '"]').show(),
				$(this).datagrid("getColumnOption", b).hidden = !1,
				$(this).datagrid("fitColumns")
			})
		},
		hideColumn: function(a, b) {
			return a.each(function() {
				var a = $(this).datagrid("getPanel");
				a.find('td[field="' + b + '"]').hide(),
				$(this).datagrid("getColumnOption", b).hidden = !0,
				$(this).datagrid("fitColumns")
			})
		},
		sort: function(a, b) {
			return a.each(function() {
				_56c(this, b)
			})
		}
	},
	$.fn.datagrid.parseOptions = function(_6cc) {
		var t = $(_6cc);
		return $.extend({},
		$.fn.panel.parseOptions(_6cc), $.parser.parseOptions(_6cc, ["url", "toolbar", "idField", "sortName", "sortOrder", "pagePosition", "resizeHandle", {
			sharedStyleSheet: "boolean",
			fitColumns: "boolean",
			autoRowHeight: "boolean",
			striped: "boolean",
			nowrap: "boolean"
		},
		{
			rownumbers: "boolean",
			singleSelect: "boolean",
			ctrlSelect: "boolean",
			checkOnSelect: "boolean",
			selectOnCheck: "boolean"
		},
		{
			pagination: "boolean",
			pageSize: "number",
			pageNumber: "number"
		},
		{
			multiSort: "boolean",
			remoteSort: "boolean",
			showHeader: "boolean",
			showFooter: "boolean"
		},
		{
			scrollbarSize: "number"
		}]), {
			pageList: t.attr("pageList") ? eval(t.attr("pageList")) : undefined,
			loadMsg: t.attr("loadMsg") != undefined ? t.attr("loadMsg") : undefined,
			rowStyler: t.attr("rowStyler") ? eval(t.attr("rowStyler")) : undefined
		})
	},
	$.fn.datagrid.parseData = function(a) {
		var b = $(a),
		c = {
			total: 0,
			rows: []
		},
		d = b.datagrid("getColumnFields", !0).concat(b.datagrid("getColumnFields", !1));
		return b.find("tbody tr").each(function() {
			c.total++;
			var a = {};
			$.extend(a, $.parser.parseOptions(this, ["iconCls", "state"]));
			for (var b = 0; b < d.length; b++) a[d[b]] = $(this).find("td:eq(" + b + ")").html();
			c.rows.push(a)
		}),
		c
	};
	var _6cf = {
		render: function(a, b, c) {
			var d = $.data(a, "datagrid"),
			e = d.options,
			f = d.data.rows,
			g = $(a).datagrid("getColumnFields", c);
			if (c && !(e.rownumbers || e.frozenColumns && e.frozenColumns.length)) return;
			var h = ['<table class="datagrid-btable" cellspacing="0" cellpadding="0" border="0"><tbody>'];
			for (var i = 0; i < f.length; i++) {
				var j = e.rowStyler ? e.rowStyler.call(a, i, f[i]) : "",
				k = "",
				l = "";
				typeof j == "string" ? l = j: j && (k = j["class"] || "", l = j.style || "");
				var m = 'class="datagrid-row ' + (i % 2 && e.striped ? "datagrid-row-alt ": " ") + k + '"',
				n = l ? 'style="' + l + '"': "",
				o = d.rowIdPrefix + "-" + (c ? 1 : 2) + "-" + i;
				h.push('<tr id="' + o + '" datagrid-row-index="' + i + '" ' + m + " " + n + ">"),
				h.push(this.renderRow.call(this, a, g, c, i, f[i])),
				h.push("</tr>")
			}
			h.push("</tbody></table>"),
			$(b).html(h.join(""))
		},
		renderFooter: function(a, b, c) {
			var d = $.data(a, "datagrid").options,
			e = $.data(a, "datagrid").footer || [],
			f = $(a).datagrid("getColumnFields", c),
			g = ['<table class="datagrid-ftable" cellspacing="0" cellpadding="0" border="0"><tbody>'];
			for (var h = 0; h < e.length; h++) g.push('<tr class="datagrid-row" datagrid-row-index="' + h + '">'),
			g.push(this.renderRow.call(this, a, f, c, h, e[h])),
			g.push("</tr>");
			g.push("</tbody></table>"),
			$(b).html(g.join(""))
		},
		renderRow: function(a, b, c, d, e) {
			var f = $.data(a, "datagrid").options,
			g = [];
			if (c && f.rownumbers) {
				var h = d + 1;
				f.pagination && (h += (f.pageNumber - 1) * f.pageSize),
				g.push('<td class="datagrid-td-rownumber"><div class="datagrid-cell-rownumber">' + h + "</div></td>")
			}
			for (var i = 0; i < b.length; i++) {
				var j = b[i],
				k = $(a).datagrid("getColumnOption", j);
				if (k) {
					var l = e[j],
					m = k.styler ? k.styler(l, e, d) || "": "",
					n = "",
					o = "";
					typeof m == "string" ? o = m: m && (n = m["class"] || "", o = m.style || "");
					var p = n ? 'class="' + n + '"': "",
					q = k.hidden ? 'style="display:none;' + o + '"': o ? 'style="' + o + '"': "";
					g.push('<td field="' + j + '" ' + p + " " + q + ">");
					var q = "";
					k.checkbox || (k.align && (q += "text-align:" + k.align + ";"), f.nowrap ? f.autoRowHeight && (q += "height:auto;") : q += "white-space:normal;height:auto;"),
					g.push('<div style="' + q + '" '),
					g.push(k.checkbox ? 'class="datagrid-cell-check"': 'class="datagrid-cell ' + k.cellClass + '"'),
					g.push(">"),
					k.checkbox ? (g.push('<input type="checkbox" ' + (e.checked ? 'checked="checked"': "")), g.push(' name="' + j + '" value="' + (l != undefined ? l: "") + '">')) : k.formatter ? g.push(k.formatter(l, e, d)) : g.push(l),
					g.push("</div>"),
					g.push("</td>")
				}
			}
			return g.join("")
		},
		refreshRow: function(a, b) {
			this.updateRow.call(this, a, b, {})
		},
		updateRow: function(a, b, c) {
			function i(c) {
				var f = $(a).datagrid("getColumnFields", c),
				i = d.finder.getTr(a, b, "body", c ? 1 : 2),
				j = i.find("div.datagrid-cell-check input[type=checkbox]").is(":checked");
				i.html(this.renderRow.call(this, a, f, c, b, e[b])),
				i.attr("style", h).attr("class", i.hasClass("datagrid-row-selected") ? g + " datagrid-row-selected": g),
				j && i.find("div.datagrid-cell-check input[type=checkbox]")._propAttr("checked", !0)
			}
			var d = $.data(a, "datagrid").options,
			e = $(a).datagrid("getRows");
			$.extend(e[b], c);
			var f = d.rowStyler ? d.rowStyler.call(a, b, e[b]) : "",
			g = "",
			h = "";
			typeof f == "string" ? h = f: f && (g = f["class"] || "", h = f.style || "");
			var g = "datagrid-row " + (b % 2 && d.striped ? "datagrid-row-alt ": " ") + g;
			i.call(this, !0),
			i.call(this, !1),
			$(a).datagrid("fixRowHeight", b)
		},
		insertRow: function(a, b, c) {
			function h(c) {
				var f = c ? 1 : 2;
				for (var h = g.rows.length - 1; h >= b; h--) {
					var i = e.finder.getTr(a, h, "body", f);
					i.attr("datagrid-row-index", h + 1),
					i.attr("id", d.rowIdPrefix + "-" + f + "-" + (h + 1));
					if (c && e.rownumbers) {
						var j = h + 2;
						e.pagination && (j += (e.pageNumber - 1) * e.pageSize),
						i.find("div.datagrid-cell-rownumber").html(j)
					}
					e.striped && i.removeClass("datagrid-row-alt").addClass((h + 1) % 2 ? "datagrid-row-alt": "")
				}
			}
			function i(c) {
				var h = c ? 1 : 2,
				i = $(a).datagrid("getColumnFields", c),
				j = d.rowIdPrefix + "-" + h + "-" + b,
				k = '<tr id="' + j + '" class="datagrid-row" datagrid-row-index="' + b + '"></tr>';
				if (b >= g.rows.length) if (g.rows.length) e.finder.getTr(a, "", "last", h).after(k);
				else {
					var l = c ? f.body1: f.body2;
					l.html('<table cellspacing="0" cellpadding="0" border="0"><tbody>' + k + "</tbody></table>")
				} else e.finder.getTr(a, b + 1, "body", h).before(k)
			}
			var d = $.data(a, "datagrid"),
			e = d.options,
			f = d.dc,
			g = d.data;
			if (b == undefined || b == null) b = g.rows.length;
			b > g.rows.length && (b = g.rows.length),
			h.call(this, !0),
			h.call(this, !1),
			i.call(this, !0),
			i.call(this, !1),
			g.total += 1,
			g.rows.splice(b, 0, c),
			this.refreshRow.call(this, a, b)
		},
		deleteRow: function(a, b) {
			function f(f) {
				var g = f ? 1 : 2;
				for (var h = b + 1; h < e.rows.length; h++) {
					var i = d.finder.getTr(a, h, "body", g);
					i.attr("datagrid-row-index", h - 1),
					i.attr("id", c.rowIdPrefix + "-" + g + "-" + (h - 1));
					if (f && d.rownumbers) {
						var j = h;
						d.pagination && (j += (d.pageNumber - 1) * d.pageSize),
						i.find("div.datagrid-cell-rownumber").html(j)
					}
					d.striped && i.removeClass("datagrid-row-alt").addClass((h - 1) % 2 ? "datagrid-row-alt": "")
				}
			}
			var c = $.data(a, "datagrid"),
			d = c.options,
			e = c.data;
			d.finder.getTr(a, b).remove(),
			f.call(this, !0),
			f.call(this, !1),
			e.total -= 1,
			e.rows.splice(b, 1)
		},
		onBeforeRender: function(a, b) {},
		onAfterRender: function(a) {
			var b = $.data(a, "datagrid").options;
			if (b.showFooter) {
				var c = $(a).datagrid("getPanel").find("div.datagrid-footer");
				c.find("div.datagrid-cell-rownumber,div.datagrid-cell-check").css("visibility", "hidden")
			}
		}
	};
	$.fn.datagrid.defaults = $.extend({},
	$.fn.panel.defaults, {
		sharedStyleSheet: !1,
		frozenColumns: undefined,
		columns: undefined,
		fitColumns: !1,
		resizeHandle: "right",
		autoRowHeight: !0,
		toolbar: null,
		striped: !1,
		method: "post",
		nowrap: !0,
		idField: null,
		url: null,
		data: null,
		loadMsg: "Processing, please wait ...",
		rownumbers: !1,
		singleSelect: !1,
		ctrlSelect: !1,
		selectOnCheck: !0,
		checkOnSelect: !0,
		pagination: !1,
		pagePosition: "bottom",
		pageNumber: 1,
		pageSize: 10,
		pageList: [10, 20, 30, 40, 50],
		queryParams: {},
		sortName: null,
		sortOrder: "asc",
		multiSort: !1,
		remoteSort: !0,
		showHeader: !0,
		showFooter: !1,
		scrollbarSize: 18,
		rowStyler: function(a, b) {},
		loader: function(a, b, c) {
			var d = $(this).datagrid("options");
			if (!d.url) return ! 1;
			$.ajax({
				type: d.method,
				url: d.url,
				data: a,
				dataType: "json",
				success: function(a) {
					b(a)
				},
				error: function() {
					c.apply(this, arguments)
				}
			})
		},
		loadFilter: function(a) {
			return typeof a.length == "number" && typeof a.splice == "function" ? {
				total: a.length,
				rows: a
			}: a
		},
		editors: _651,
		finder: {
			getTr: function(a, b, c, d) {
				c = c || "body",
				d = d || 0;
				var e = $.data(a, "datagrid"),
				f = e.dc,
				g = e.options;
				if (d == 0) {
					var h = g.finder.getTr(a, b, c, 1),
					i = g.finder.getTr(a, b, c, 2);
					return h.add(i)
				}
				if (c == "body") {
					var j = $("#" + e.rowIdPrefix + "-" + d + "-" + b);
					return j.length || (j = (d == 1 ? f.body1: f.body2).find(">table>tbody>tr[datagrid-row-index=" + b + "]")),
					j
				}
				if (c == "footer") return (d == 1 ? f.footer1: f.footer2).find(">table>tbody>tr[datagrid-row-index=" + b + "]");
				if (c == "selected") return (d == 1 ? f.body1: f.body2).find(">table>tbody>tr.datagrid-row-selected");
				if (c == "highlight") return (d == 1 ? f.body1: f.body2).find(">table>tbody>tr.datagrid-row-over");
				if (c == "checked") return (d == 1 ? f.body1: f.body2).find(">table>tbody>tr.datagrid-row-checked");
				if (c == "last") return (d == 1 ? f.body1: f.body2).find(">table>tbody>tr[datagrid-row-index]:last");
				if (c == "allbody") return (d == 1 ? f.body1: f.body2).find(">table>tbody>tr[datagrid-row-index]");
				if (c == "allfooter") return (d == 1 ? f.footer1: f.footer2).find(">table>tbody>tr[datagrid-row-index]")
			},
			getRow: function(a, b) {
				var c = typeof b == "object" ? b.attr("datagrid-row-index") : b;
				return $.data(a, "datagrid").data.rows[parseInt(c)]
			},
			getRows: function(a) {
				return $(a).datagrid("getRows")
			}
		},
		view: _6cf,
		onBeforeLoad: function(a) {},
		onLoadSuccess: function() {},
		onLoadError: function() {},
		onClickRow: function(a, b) {},
		onDblClickRow: function(a, b) {},
		onClickCell: function(a, b, c) {},
		onDblClickCell: function(a, b, c) {},
		onBeforeSortColumn: function(a, b) {},
		onSortColumn: function(a, b) {},
		onResizeColumn: function(a, b) {},
		onSelect: function(a, b) {},
		onUnselect: function(a, b) {},
		onSelectAll: function(a) {},
		onUnselectAll: function(a) {},
		onCheck: function(a, b) {},
		onUncheck: function(a, b) {},
		onCheckAll: function(a) {},
		onUncheckAll: function(a) {},
		onBeforeEdit: function(a, b) {},
		onBeginEdit: function(a, b) {},
		onEndEdit: function(a, b, c) {},
		onAfterEdit: function(a, b, c) {},
		onCancelEdit: function(a, b) {},
		onHeaderContextMenu: function(a, b) {},
		onRowContextMenu: function(a, b, c) {}
	})
} (jQuery),
function(a) {
	function c(c) {
		var e = a.data(c, "propertygrid"),
		f = a.data(c, "propertygrid").options;
		a(c).datagrid(a.extend({},
		f, {
			cls: "propertygrid",
			view: f.showGroup ? f.groupView: f.view,
			onClickRow: function(e, g) {
				b != this && (d(b), b = this);
				if (f.editIndex != e && g.editor) {
					var h = a(this).datagrid("getColumnOption", "value");
					h.editor = g.editor,
					d(b),
					a(this).datagrid("beginEdit", e),
					a(this).datagrid("getEditors", e)[0].target.focus(),
					f.editIndex = e
				}
				f.onClickRow.call(c, e, g)
			},
			loadFilter: function(a) {
				return d(this),
				f.loadFilter.call(this, a)
			}
		})),
		a(document).unbind(".propertygrid").bind("mousedown.propertygrid",
		function(c) {
			var e = a(c.target).closest("div.datagrid-view,div.combo-panel");
			if (e.length) return;
			d(b),
			b = undefined
		})
	}
	function d(b) {
		var c = a(b);
		if (!c.length) return;
		var d = a.data(b, "propertygrid").options,
		e = d.editIndex;
		if (e == undefined) return;
		var f = c.datagrid("getEditors", e)[0];
		f && (f.target.blur(), c.datagrid("validateRow", e) ? c.datagrid("endEdit", e) : c.datagrid("cancelEdit", e)),
		d.editIndex = undefined
	}
	var b;
	a.fn.propertygrid = function(b, d) {
		if (typeof b == "string") {
			var e = a.fn.propertygrid.methods[b];
			return e ? e(this, d) : this.datagrid(b, d)
		}
		return b = b || {},
		this.each(function() {
			var d = a.data(this, "propertygrid");
			if (d) a.extend(d.options, b);
			else {
				var e = a.extend({},
				a.fn.propertygrid.defaults, a.fn.propertygrid.parseOptions(this), b);
				e.frozenColumns = a.extend(!0, [], e.frozenColumns),
				e.columns = a.extend(!0, [], e.columns),
				a.data(this, "propertygrid", {
					options: e
				})
			}
			c(this)
		})
	},
	a.fn.propertygrid.methods = {
		options: function(b) {
			return a.data(b[0], "propertygrid").options
		}
	},
	a.fn.propertygrid.parseOptions = function(b) {
		return a.extend({},
		a.fn.datagrid.parseOptions(b), a.parser.parseOptions(b, [{
			showGroup: "boolean"
		}]))
	};
	var e = a.extend({},
	a.fn.datagrid.defaults.view, {
		render: function(b, c, d) {
			var e = [],
			f = this.groups;
			for (var g = 0; g < f.length; g++) e.push(this.renderGroup.call(this, b, g, f[g], d));
			a(c).html(e.join(""))
		},
		renderGroup: function(b, c, d, e) {
			var f = a.data(b, "datagrid"),
			g = f.options,
			h = a(b).datagrid("getColumnFields", e),
			i = [];
			i.push('<div class="datagrid-group" group-index=' + c + ">"),
			i.push('<table cellspacing="0" cellpadding="0" border="0" style="height:100%"><tbody>'),
			i.push("<tr>"),
			(e && (g.rownumbers || g.frozenColumns.length) || !e && !g.rownumbers && !g.frozenColumns.length) && i.push('<td style="border:0;text-align:center;width:25px"><span class="datagrid-row-expander datagrid-row-collapse" style="display:inline-block;width:16px;height:16px;cursor:pointer">&nbsp;</span></td>'),
			i.push('<td style="border:0;">'),
			e || (i.push('<span class="datagrid-group-title">'), i.push(g.groupFormatter.call(b, d.value, d.rows)), i.push("</span>")),
			i.push("</td>"),
			i.push("</tr>"),
			i.push("</tbody></table>"),
			i.push("</div>"),
			i.push('<table class="datagrid-btable" cellspacing="0" cellpadding="0" border="0"><tbody>');
			var j = d.startIndex;
			for (var k = 0; k < d.rows.length; k++) {
				var l = g.rowStyler ? g.rowStyler.call(b, j, d.rows[k]) : "",
				m = "",
				n = "";
				typeof l == "string" ? n = l: l && (m = l["class"] || "", n = l.style || "");
				var o = 'class="datagrid-row ' + (j % 2 && g.striped ? "datagrid-row-alt ": " ") + m + '"',
				p = n ? 'style="' + n + '"': "",
				q = f.rowIdPrefix + "-" + (e ? 1 : 2) + "-" + j;
				i.push('<tr id="' + q + '" datagrid-row-index="' + j + '" ' + o + " " + p + ">"),
				i.push(this.renderRow.call(this, b, h, e, j, d.rows[k])),
				i.push("</tr>"),
				j++
			}
			return i.push("</tbody></table>"),
			i.join("")
		},
		bindEvents: function(b) {
			var c = a.data(b, "datagrid"),
			d = c.dc,
			e = d.body1.add(d.body2),
			f = (a.data(e[0], "events") || a._data(e[0], "events")).click[0].handler;
			e.unbind("click").bind("click",
			function(c) {
				var d = a(c.target),
				e = d.closest("span.datagrid-row-expander");
				if (e.length) {
					var g = e.closest("div.datagrid-group").attr("group-index");
					e.hasClass("datagrid-row-collapse") ? a(b).datagrid("collapseGroup", g) : a(b).datagrid("expandGroup", g)
				} else f(c);
				c.stopPropagation()
			})
		},
		onBeforeRender: function(b, c) {
			function m(a) {
				for (var b = 0; b < f.length; b++) {
					var c = f[b];
					if (c.value == a) return c
				}
				return null
			}
			function n() {
				a("#datagrid-group-style").length || a("head").append('<style id="datagrid-group-style">.datagrid-group{height:25px;overflow:hidden;font-weight:bold;border-bottom:1px solid #ccc;}</style>')
			}
			var d = a.data(b, "datagrid"),
			e = d.options;
			n();
			var f = [];
			for (var g = 0; g < c.length; g++) {
				var h = c[g],
				i = m(h[e.groupField]);
				i ? i.rows.push(h) : (i = {
					value: h[e.groupField],
					rows: [h]
				},
				f.push(i))
			}
			var j = 0,
			k = [];
			for (var g = 0; g < f.length; g++) {
				var i = f[g];
				i.startIndex = j,
				j += i.rows.length,
				k = k.concat(i.rows)
			}
			d.data.rows = k,
			this.groups = f;
			var l = this;
			setTimeout(function() {
				l.bindEvents(b)
			},
			0)
		}
	});
	a.extend(a.fn.datagrid.methods, {
		expandGroup: function(b, c) {
			return b.each(function() {
				var b = a.data(this, "datagrid").dc.view,
				d = b.find(c != undefined ? 'div.datagrid-group[group-index="' + c + '"]': "div.datagrid-group"),
				e = d.find("span.datagrid-row-expander");
				e.hasClass("datagrid-row-expand") && (e.removeClass("datagrid-row-expand").addClass("datagrid-row-collapse"), d.next("table").show()),
				a(this).datagrid("fixRowHeight")
			})
		},
		collapseGroup: function(b, c) {
			return b.each(function() {
				var b = a.data(this, "datagrid").dc.view,
				d = b.find(c != undefined ? 'div.datagrid-group[group-index="' + c + '"]': "div.datagrid-group"),
				e = d.find("span.datagrid-row-expander");
				e.hasClass("datagrid-row-collapse") && (e.removeClass("datagrid-row-collapse").addClass("datagrid-row-expand"), d.next("table").hide()),
				a(this).datagrid("fixRowHeight")
			})
		}
	}),
	a.fn.propertygrid.defaults = a.extend({},
	a.fn.datagrid.defaults, {
		singleSelect: !0,
		remoteSort: !1,
		fitColumns: !0,
		loadMsg: "",
		frozenColumns: [[{
			field: "f",
			width: 16,
			resizable: !1
		}]],
		columns: [[{
			field: "name",
			title: "Name",
			width: 100,
			sortable: !0
		},
		{
			field: "value",
			title: "Value",
			width: 100,
			resizable: !1
		}]],
		showGroup: !1,
		groupView: e,
		groupField: "group",
		groupFormatter: function(a, b) {
			return a
		}
	})
} (jQuery),
function(a) {
	function b(b) {
		var d = a.data(b, "treegrid"),
		e = d.options;
		a(b).datagrid(a.extend({},
		e, {
			url: null,
			data: null,
			loader: function() {
				return ! 1
			},
			onBeforeLoad: function() {
				return ! 1
			},
			onLoadSuccess: function() {},
			onResizeColumn: function(a, d) {
				c(b),
				e.onResizeColumn.call(b, a, d)
			},
			onSortColumn: function(c, d) {
				e.sortName = c,
				e.sortOrder = d;
				if (e.remoteSort) h(b);
				else {
					var f = a(b).treegrid("getData");
					g(b, 0, f)
				}
				e.onSortColumn.call(b, c, d)
			},
			onBeforeEdit: function(a, c) {
				if (e.onBeforeEdit.call(b, c) == 0) return ! 1
			},
			onAfterEdit: function(a, c, d) {
				e.onAfterEdit.call(b, c, d)
			},
			onCancelEdit: function(a, c) {
				e.onCancelEdit.call(b, c)
			},
			onSelect: function(a) {
				e.onSelect.call(b, n(b, a))
			},
			onUnselect: function(a) {
				e.onUnselect.call(b, n(b, a))
			},
			onCheck: function(a) {
				e.onCheck.call(b, n(b, a))
			},
			onUncheck: function(a) {
				e.onUncheck.call(b, n(b, a))
			},
			onClickRow: function(a) {
				e.onClickRow.call(b, n(b, a))
			},
			onDblClickRow: function(a) {
				e.onDblClickRow.call(b, n(b, a))
			},
			onClickCell: function(a, c) {
				e.onClickCell.call(b, c, n(b, a))
			},
			onDblClickCell: function(a, c) {
				e.onDblClickCell.call(b, c, n(b, a))
			},
			onRowContextMenu: function(a, c) {
				e.onContextMenu.call(b, a, n(b, c))
			}
		}));
		if (!e.columns) {
			var f = a.data(b, "datagrid").options;
			e.columns = f.columns,
			e.frozenColumns = f.frozenColumns
		}
		d.dc = a.data(b, "datagrid").dc;
		if (e.pagination) {
			var i = a(b).datagrid("getPager");
			i.pagination({
				pageNumber: e.pageNumber,
				pageSize: e.pageSize,
				pageList: e.pageList,
				onSelectPage: function(a, c) {
					e.pageNumber = a,
					e.pageSize = c,
					h(b)
				}
			}),
			e.pageSize = i.pagination("options").pageSize
		}
	}
	function c(b, c) {
		function h(a) {
			var c = d.finder.getTr(b, a, "body", 1),
			e = d.finder.getTr(b, a, "body", 2);
			c.css("height", ""),
			e.css("height", "");
			var f = Math.max(c.height(), e.height());
			c.css("height", f),
			e.css("height", f)
		}
		var d = a.data(b, "datagrid").options,
		e = a.data(b, "datagrid").dc;
		if (!e.body1.is(":empty") && (!d.nowrap || d.autoRowHeight) && c != undefined) {
			var f = l(b, c);
			for (var g = 0; g < f.length; g++) h(f[g][d.idField])
		}
		a(b).datagrid("fixRowHeight", c)
	}
	function d(b) {
		var c = a.data(b, "datagrid").dc,
		d = a.data(b, "treegrid").options;
		if (!d.rownumbers) return;
		c.body1.find("div.datagrid-cell-rownumber").each(function(b) {
			a(this).html(b + 1)
		})
	}
	function e(b) {
		var c = a.data(b, "datagrid").dc,
		d = c.body1.add(c.body2),
		e = (a.data(d[0], "events") || a._data(d[0], "events")).click[0].handler;
		c.body1.add(c.body2).bind("mouseover",
		function(b) {
			var c = a(b.target),
			d = c.closest("tr.datagrid-row");
			if (!d.length) return;
			c.hasClass("tree-hit") && (c.hasClass("tree-expanded") ? c.addClass("tree-expanded-hover") : c.addClass("tree-collapsed-hover")),
			b.stopPropagation()
		}).bind("mouseout",
		function(b) {
			var c = a(b.target),
			d = c.closest("tr.datagrid-row");
			if (!d.length) return;
			c.hasClass("tree-hit") && (c.hasClass("tree-expanded") ? c.removeClass("tree-expanded-hover") : c.removeClass("tree-collapsed-hover")),
			b.stopPropagation()
		}).unbind("click").bind("click",
		function(c) {
			var d = a(c.target),
			f = d.closest("tr.datagrid-row");
			if (!f.length) return;
			d.hasClass("tree-hit") ? q(b, f.attr("node-id")) : e(c),
			c.stopPropagation()
		})
	}
	function f(b, c) {
		function i(b, c) {
			a('<tr class="treegrid-tr-tree"><td style="border:0px" colspan="' + c + '">' + "<div></div>" + "</td>" + "</tr>").insertAfter(b)
		}
		var d = a.data(b, "treegrid").options,
		e = d.finder.getTr(b, c, "body", 1),
		f = d.finder.getTr(b, c, "body", 2),
		g = a(b).datagrid("getColumnFields", !0).length + (d.rownumbers ? 1 : 0),
		h = a(b).datagrid("getColumnFields", !1).length;
		i(e, g),
		i(f, h)
	}
	function g(b, e, f, g) {
		var h = a.data(b, "treegrid"),
		i = h.options,
		j = h.dc;
		f = i.loadFilter.call(b, f, e);
		var k = n(b, e);
		if (k) {
			var l = i.finder.getTr(b, e, "body", 1),
			m = i.finder.getTr(b, e, "body", 2),
			o = l.next("tr.treegrid-tr-tree").children("td").children("div"),
			p = m.next("tr.treegrid-tr-tree").children("td").children("div");
			g || (k.children = [])
		} else {
			var o = j.body1,
			p = j.body2;
			g || (h.data = [])
		}
		g || (o.empty(), p.empty()),
		i.view.onBeforeRender && i.view.onBeforeRender.call(i.view, b, e, f),
		i.view.render.call(i.view, b, o, !0),
		i.view.render.call(i.view, b, p, !1),
		i.showFooter && (i.view.renderFooter.call(i.view, b, j.footer1, !0), i.view.renderFooter.call(i.view, b, j.footer2, !1)),
		i.view.onAfterRender && i.view.onAfterRender.call(i.view, b),
		i.onLoadSuccess.call(b, k, f);
		if (!e && i.pagination) {
			var q = a.data(b, "treegrid").total,
			r = a(b).datagrid("getPager");
			r.pagination("options").total != q && r.pagination({
				total: q
			})
		}
		c(b),
		d(b),
		a(b).treegrid("setSelectionState"),
		a(b).treegrid("autoSizeColumn")
	}
	function h(b, c, d, e, f) {
		var h = a.data(b, "treegrid").options,
		i = a(b).datagrid("getPanel").find("div.datagrid-body");
		d && (h.queryParams = d);
		var j = a.extend({},
		h.queryParams);
		h.pagination && a.extend(j, {
			page: h.pageNumber,
			rows: h.pageSize
		}),
		h.sortName && a.extend(j, {
			sort: h.sortName,
			order: h.sortOrder
		});
		var k = n(b, c);
		if (h.onBeforeLoad.call(b, k, j) == 0) return;
		var l = i.find('tr[node-id="' + c + '"] span.tree-folder');
		l.addClass("tree-loading"),
		a(b).treegrid("loading");
		var m = h.loader.call(b, j,
		function(d) {
			l.removeClass("tree-loading"),
			a(b).treegrid("loaded"),
			g(b, c, d, e),
			f && f()
		},
		function() {
			l.removeClass("tree-loading"),
			a(b).treegrid("loaded"),
			h.onLoadError.apply(b, arguments),
			f && f()
		});
		m == 0 && (l.removeClass("tree-loading"), a(b).treegrid("loaded"))
	}
	function i(a) {
		var b = j(a);
		return b.length ? b[0] : null
	}
	function j(b) {
		return a.data(b, "treegrid").data
	}
	function k(a, b) {
		var c = n(a, b);
		return c._parentId ? n(a, c._parentId) : null
	}
	function l(b, c) {
		function i(a) {
			var c = n(b, a);
			if (c && c.children) for (var e = 0,
			g = c.children.length; e < g; e++) {
				var h = c.children[e];
				f.push(h),
				i(h[d.idField])
			}
		}
		var d = a.data(b, "treegrid").options,
		e = a(b).datagrid("getPanel").find("div.datagrid-view2 div.datagrid-body"),
		f = [];
		if (c) i(c);
		else {
			var g = j(b);
			for (var h = 0; h < g.length; h++) f.push(g[h]),
			i(g[h][d.idField])
		}
		return f
	}
	function m(b, c) {
		if (!c) return 0;
		var d = a.data(b, "treegrid").options,
		e = a(b).datagrid("getPanel").children("div.datagrid-view"),
		f = e.find('div.datagrid-body tr[node-id="' + c + '"]').children('td[field="' + d.treeField + '"]');
		return f.find("span.tree-indent,span.tree-hit").length
	}
	function n(b, c) {
		var d = a.data(b, "treegrid").options,
		e = a.data(b, "treegrid").data,
		f = [e];
		while (f.length) {
			var g = f.shift();
			for (var h = 0; h < g.length; h++) {
				var i = g[h];
				if (i[d.idField] == c) return i;
				i.children && f.push(i.children)
			}
		}
		return null
	}
	function o(b, d) {
		var e = a.data(b, "treegrid").options,
		f = n(b, d),
		g = e.finder.getTr(b, d),
		h = g.find("span.tree-hit");
		if (h.length == 0) return;
		if (h.hasClass("tree-collapsed")) return;
		if (e.onBeforeCollapse.call(b, f) == 0) return;
		h.removeClass("tree-expanded tree-expanded-hover").addClass("tree-collapsed"),
		h.next().removeClass("tree-folder-open"),
		f.state = "closed",
		g = g.next("tr.treegrid-tr-tree");
		var i = g.children("td").children("div");
		e.animate ? i.slideUp("normal",
		function() {
			a(b).treegrid("autoSizeColumn"),
			c(b, d),
			e.onCollapse.call(b, f)
		}) : (i.hide(), a(b).treegrid("autoSizeColumn"), c(b, d), e.onCollapse.call(b, f))
	}
	function p(b, d) {
		function o(f) {
			j.state = "open",
			e.animate ? f.slideDown("normal",
			function() {
				a(b).treegrid("autoSizeColumn"),
				c(b, d),
				e.onExpand.call(b, j)
			}) : (f.show(), a(b).treegrid("autoSizeColumn"), c(b, d), e.onExpand.call(b, j))
		}
		var e = a.data(b, "treegrid").options,
		g = e.finder.getTr(b, d),
		i = g.find("span.tree-hit"),
		j = n(b, d);
		if (i.length == 0) return;
		if (i.hasClass("tree-expanded")) return;
		if (e.onBeforeExpand.call(b, j) == 0) return;
		i.removeClass("tree-collapsed tree-collapsed-hover").addClass("tree-expanded"),
		i.next().addClass("tree-folder-open");
		var k = g.next("tr.treegrid-tr-tree");
		if (k.length) {
			var l = k.children("td").children("div");
			o(l)
		} else {
			f(b, j[e.idField]);
			var k = g.next("tr.treegrid-tr-tree"),
			l = k.children("td").children("div");
			l.hide();
			var m = a.extend({},
			e.queryParams || {});
			m.id = j[e.idField],
			h(b, j[e.idField], m, !0,
			function() {
				l.is(":empty") ? k.remove() : o(l)
			})
		}
	}
	function q(b, c) {
		var d = a.data(b, "treegrid").options,
		e = d.finder.getTr(b, c),
		f = e.find("span.tree-hit");
		f.hasClass("tree-expanded") ? o(b, c) : p(b, c)
	}
	function r(b, c) {
		var d = a.data(b, "treegrid").options,
		e = l(b, c);
		c && e.unshift(n(b, c));
		for (var f = 0; f < e.length; f++) o(b, e[f][d.idField])
	}
	function s(b, c) {
		var d = a.data(b, "treegrid").options,
		e = l(b, c);
		c && e.unshift(n(b, c));
		for (var f = 0; f < e.length; f++) p(b, e[f][d.idField])
	}
	function t(b, c) {
		var d = a.data(b, "treegrid").options,
		e = [],
		f = k(b, c);
		while (f) {
			var g = f[d.idField];
			e.unshift(g),
			f = k(b, g)
		}
		for (var h = 0; h < e.length; h++) p(b, e[h])
	}
	function u(b, c) {
		var d = a.data(b, "treegrid").options;
		if (c.parent) {
			var e = d.finder.getTr(b, c.parent);
			e.next("tr.treegrid-tr-tree").length == 0 && f(b, c.parent);
			var h = e.children('td[field="' + d.treeField + '"]').children("div.datagrid-cell"),
			i = h.children("span.tree-icon");
			if (i.hasClass("tree-file")) {
				i.removeClass("tree-file").addClass("tree-folder tree-folder-open");
				var j = a('<span class="tree-hit tree-expanded"></span>').insertBefore(i);
				j.prev().length && j.prev().remove()
			}
		}
		g(b, c.parent, c.data, !0)
	}
	function v(b, c) {
		function h(a) {
			var d = a ? 1 : 2,
			g = f.finder.getTr(b, c.data[f.idField], "body", d),
			h = g.closest("table.datagrid-btable");
			g = g.parent().children();
			var i = f.finder.getTr(b, e, "body", d);
			if (c.before) g.insertBefore(i);
			else {
				var j = i.next("tr.treegrid-tr-tree");
				g.insertAfter(j.length ? j: i)
			}
			h.remove()
		}
		var e = c.before || c.after,
		f = a.data(b, "treegrid").options,
		g = k(b, e);
		u(b, {
			parent: g ? g[f.idField] : null,
			data: [c.data]
		}),
		h(!0),
		h(!1),
		d(b)
	}
	function w(b, c) {
		var e = a.data(b, "treegrid");
		a(b).datagrid("deleteRow", c),
		d(b),
		e.total -= 1,
		a(b).datagrid("getPager").pagination("refresh", {
			total: e.total
		})
	}
	a.fn.treegrid = function(c, d) {
		if (typeof c == "string") {
			var f = a.fn.treegrid.methods[c];
			return f ? f(this, d) : this.datagrid(c, d)
		}
		return c = c || {},
		this.each(function() {
			var d = a.data(this, "treegrid");
			d ? a.extend(d.options, c) : d = a.data(this, "treegrid", {
				options: a.extend({},
				a.fn.treegrid.defaults, a.fn.treegrid.parseOptions(this), c),
				data: []
			}),
			b(this),
			d.options.data && a(this).treegrid("loadData", d.options.data),
			h(this),
			e(this)
		})
	},
	a.fn.treegrid.methods = {
		options: function(b) {
			return a.data(b[0], "treegrid").options
		},
		resize: function(b, c) {
			return b.each(function() {
				a(this).datagrid("resize", c)
			})
		},
		fixRowHeight: function(a, b) {
			return a.each(function() {
				c(this, b)
			})
		},
		loadData: function(a, b) {
			return a.each(function() {
				g(this, b.parent, b)
			})
		},
		load: function(b, c) {
			return b.each(function() {
				a(this).treegrid("options").pageNumber = 1,
				a(this).treegrid("getPager").pagination({
					pageNumber: 1
				}),
				a(this).treegrid("reload", c)
			})
		},
		reload: function(b, c) {
			return b.each(function() {
				var b = a(this).treegrid("options"),
				d = {};
				typeof c == "object" ? d = c: (d = a.extend({},
				b.queryParams), d.id = c);
				if (d.id) {
					var e = a(this).treegrid("find", d.id);
					e.children && e.children.splice(0, e.children.length),
					b.queryParams = d;
					var f = b.finder.getTr(this, d.id);
					f.next("tr.treegrid-tr-tree").remove(),
					f.find("span.tree-hit").removeClass("tree-expanded tree-expanded-hover").addClass("tree-collapsed"),
					p(this, d.id)
				} else h(this, null, d)
			})
		},
		reloadFooter: function(b, c) {
			return b.each(function() {
				var b = a.data(this, "treegrid").options,
				d = a.data(this, "datagrid").dc;
				c && (a.data(this, "treegrid").footer = c),
				b.showFooter && (b.view.renderFooter.call(b.view, this, d.footer1, !0), b.view.renderFooter.call(b.view, this, d.footer2, !1), b.view.onAfterRender && b.view.onAfterRender.call(b.view, this), a(this).treegrid("fixRowHeight"))
			})
		},
		getData: function(b) {
			return a.data(b[0], "treegrid").data
		},
		getFooterRows: function(b) {
			return a.data(b[0], "treegrid").footer
		},
		getRoot: function(a) {
			return i(a[0])
		},
		getRoots: function(a) {
			return j(a[0])
		},
		getParent: function(a, b) {
			return k(a[0], b)
		},
		getChildren: function(a, b) {
			return l(a[0], b)
		},
		getLevel: function(a, b) {
			return m(a[0], b)
		},
		find: function(a, b) {
			return n(a[0], b)
		},
		isLeaf: function(b, c) {
			var d = a.data(b[0], "treegrid").options,
			e = d.finder.getTr(b[0], c),
			f = e.find("span.tree-hit");
			return f.length == 0
		},
		select: function(b, c) {
			return b.each(function() {
				a(this).datagrid("selectRow", c)
			})
		},
		unselect: function(b, c) {
			return b.each(function() {
				a(this).datagrid("unselectRow", c)
			})
		},
		collapse: function(a, b) {
			return a.each(function() {
				o(this, b)
			})
		},
		expand: function(a, b) {
			return a.each(function() {
				p(this, b)
			})
		},
		toggle: function(a, b) {
			return a.each(function() {
				q(this, b)
			})
		},
		collapseAll: function(a, b) {
			return a.each(function() {
				r(this, b)
			})
		},
		expandAll: function(a, b) {
			return a.each(function() {
				s(this, b)
			})
		},
		expandTo: function(a, b) {
			return a.each(function() {
				t(this, b)
			})
		},
		append: function(a, b) {
			return a.each(function() {
				u(this, b)
			})
		},
		insert: function(a, b) {
			return a.each(function() {
				v(this, b)
			})
		},
		remove: function(a, b) {
			return a.each(function() {
				w(this, b)
			})
		},
		pop: function(a, b) {
			var c = a.treegrid("find", b);
			return a.treegrid("remove", b),
			c
		},
		refresh: function(b, c) {
			return b.each(function() {
				var b = a.data(this, "treegrid").options;
				b.view.refreshRow.call(b.view, this, c)
			})
		},
		update: function(b, c) {
			return b.each(function() {
				var b = a.data(this, "treegrid").options;
				b.view.updateRow.call(b.view, this, c.id, c.row)
			})
		},
		beginEdit: function(b, c) {
			return b.each(function() {
				a(this).datagrid("beginEdit", c),
				a(this).treegrid("fixRowHeight", c)
			})
		},
		endEdit: function(b, c) {
			return b.each(function() {
				a(this).datagrid("endEdit", c)
			})
		},
		cancelEdit: function(b, c) {
			return b.each(function() {
				a(this).datagrid("cancelEdit", c)
			})
		}
	},
	a.fn.treegrid.parseOptions = function(b) {
		return a.extend({},
		a.fn.datagrid.parseOptions(b), a.parser.parseOptions(b, ["treeField", {
			animate: "boolean"
		}]))
	};
	var x = a.extend({},
	a.fn.datagrid.defaults.view, {
		render: function(b, c, d) {
			function k(a, c, d) {
				var j = ['<table class="datagrid-btable" cellspacing="0" cellpadding="0" border="0"><tbody>'];
				for (var l = 0; l < d.length; l++) {
					var m = d[l];
					m.state != "open" && m.state != "closed" && (m.state = "open");
					var n = e.rowStyler ? e.rowStyler.call(b, m) : "",
					o = "",
					p = "";
					typeof n == "string" ? p = n: n && (o = n["class"] || "", p = n.style || "");
					var q = 'class="datagrid-row ' + (h++%2 && e.striped ? "datagrid-row-alt ": " ") + o + '"',
					r = p ? 'style="' + p + '"': "",
					s = g + "-" + (a ? 1 : 2) + "-" + m[e.idField];
					j.push('<tr id="' + s + '" node-id="' + m[e.idField] + '" ' + q + " " + r + ">"),
					j = j.concat(i.renderRow.call(i, b, f, a, c, m)),
					j.push("</tr>");
					if (m.children && m.children.length) {
						var t = k(a, c + 1, m.children),
						u = m.state == "closed" ? "none": "block";
						j.push('<tr class="treegrid-tr-tree"><td style="border:0px" colspan=' + (f.length + (e.rownumbers ? 1 : 0)) + '><div style="display:' + u + '">'),
						j = j.concat(t),
						j.push("</div></td></tr>")
					}
				}
				return j.push("</tbody></table>"),
				j
			}
			var e = a.data(b, "treegrid").options,
			f = a(b).datagrid("getColumnFields", d),
			g = a.data(b, "datagrid").rowIdPrefix;
			if (d && !(e.rownumbers || e.frozenColumns && e.frozenColumns.length)) return;
			var h = 0,
			i = this,
			j = k(d, this.treeLevel, this.treeNodes);
			a(c).append(j.join(""))
		},
		renderFooter: function(b, c, d) {
			var e = a.data(b, "treegrid").options,
			f = a.data(b, "treegrid").footer || [],
			g = a(b).datagrid("getColumnFields", d),
			h = ['<table class="datagrid-ftable" cellspacing="0" cellpadding="0" border="0"><tbody>'];
			for (var i = 0; i < f.length; i++) {
				var j = f[i];
				j[e.idField] = j[e.idField] || "foot-row-id" + i,
				h.push('<tr class="datagrid-row" node-id="' + j[e.idField] + '">'),
				h.push(this.renderRow.call(this, b, g, d, 0, j)),
				h.push("</tr>")
			}
			h.push("</tbody></table>"),
			a(c).html(h.join(""))
		},
		renderRow: function(b, c, d, e, f) {
			var g = a.data(b, "treegrid").options,
			h = [];
			d && g.rownumbers && h.push('<td class="datagrid-td-rownumber"><div class="datagrid-cell-rownumber">0</div></td>');
			for (var i = 0; i < c.length; i++) {
				var j = c[i],
				k = a(b).datagrid("getColumnOption", j);
				if (k) {
					var l = k.styler ? k.styler(f[j], f) || "": "",
					m = "",
					n = "";
					typeof l == "string" ? n = l: h && (m = l["class"] || "", n = l.style || "");
					var o = m ? 'class="' + m + '"': "",
					p = k.hidden ? 'style="display:none;' + n + '"': n ? 'style="' + n + '"': "";
					h.push('<td field="' + j + '" ' + o + " " + p + ">");
					var p = "";
					k.checkbox || (k.align && (p += "text-align:" + k.align + ";"), g.nowrap ? g.autoRowHeight && (p += "height:auto;") : p += "white-space:normal;height:auto;"),
					h.push('<div style="' + p + '" '),
					k.checkbox ? h.push('class="datagrid-cell-check ') : h.push('class="datagrid-cell ' + k.cellClass),
					h.push('">');
					if (k.checkbox) f.checked ? h.push('<input type="checkbox" checked="checked"') : h.push('<input type="checkbox"'),
					h.push(' name="' + j + '" value="' + (f[j] != undefined ? f[j] : "") + '">');
					else {
						var q = null;
						k.formatter ? q = k.formatter(f[j], f) : q = f[j];
						if (j == g.treeField) {
							for (var r = 0; r < e; r++) h.push('<span class="tree-indent"></span>');
							f.state == "closed" ? (h.push('<span class="tree-hit tree-collapsed"></span>'), h.push('<span class="tree-icon tree-folder ' + (f.iconCls ? f.iconCls: "") + '"></span>')) : f.children && f.children.length ? (h.push('<span class="tree-hit tree-expanded"></span>'), h.push('<span class="tree-icon tree-folder tree-folder-open ' + (f.iconCls ? f.iconCls: "") + '"></span>')) : (h.push('<span class="tree-indent"></span>'), h.push('<span class="tree-icon tree-file ' + (f.iconCls ? f.iconCls: "") + '"></span>')),
							h.push('<span class="tree-title">' + q + "</span>")
						} else h.push(q)
					}
					h.push("</div>"),
					h.push("</td>")
				}
			}
			return h.join("")
		},
		refreshRow: function(a, b) {
			this.updateRow.call(this, a, b, {})
		},
		updateRow: function(b, c, d) {
			function i(d) {
				var i = a(b).treegrid("getColumnFields", d),
				j = e.finder.getTr(b, c, "body", d ? 1 : 2),
				k = j.find("div.datagrid-cell-rownumber").html(),
				l = j.find("div.datagrid-cell-check input[type=checkbox]").is(":checked");
				j.html(this.renderRow(b, i, d, g, f)),
				j.attr("style", h || ""),
				j.find("div.datagrid-cell-rownumber").html(k),
				l && j.find("div.datagrid-cell-check input[type=checkbox]")._propAttr("checked", !0)
			}
			var e = a.data(b, "treegrid").options,
			f = a(b).treegrid("find", c);
			a.extend(f, d);
			var g = a(b).treegrid("getLevel", c) - 1,
			h = e.rowStyler ? e.rowStyler.call(b, f) : "";
			i.call(this, !0),
			i.call(this, !1),
			a(b).treegrid("fixRowHeight", c)
		},
		deleteRow: function(b, c) {
			function h(c) {
				var e, f = a(b).treegrid("getParent", c);
				f ? e = f.children: e = a(b).treegrid("getData");
				for (var g = 0; g < e.length; g++) if (e[g][d.idField] == c) {
					e.splice(g, 1);
					break
				}
				return f
			}
			var d = a.data(b, "treegrid").options,
			e = d.finder.getTr(b, c);
			e.next("tr.treegrid-tr-tree").remove(),
			e.remove();
			var f = h(c);
			if (f && f.children.length == 0) {
				e = d.finder.getTr(b, f[d.idField]),
				e.next("tr.treegrid-tr-tree").remove();
				var g = e.children('td[field="' + d.treeField + '"]').children("div.datagrid-cell");
				g.find(".tree-icon").removeClass("tree-folder").addClass("tree-file"),
				g.find(".tree-hit").remove(),
				a('<span class="tree-indent"></span>').prependTo(g)
			}
		},
		onBeforeRender: function(b, c, d) {
			a.isArray(c) && (d = {
				total: c.length,
				rows: c
			},
			c = null);
			if (!d) return ! 1;
			var e = a.data(b, "treegrid"),
			f = e.options;
			if (d.length == undefined) d.footer && (e.footer = d.footer),
			d.total && (e.total = d.total),
			d = this.transfer(b, c, d.rows);
			else {
				function g(a, b) {
					for (var c = 0; c < a.length; c++) {
						var d = a[c];
						d._parentId = b,
						d.children && d.children.length && g(d.children, d[f.idField])
					}
				}
				g(d, c)
			}
			var h = n(b, c);
			h ? h.children ? h.children = h.children.concat(d) : h.children = d: e.data = e.data.concat(d),
			this.sort(b, d),
			this.treeNodes = d,
			this.treeLevel = a(b).treegrid("getLevel", c)
		},
		sort: function(b, c) {
			function g(c) {
				c.sort(function(c, d) {
					var g = 0;
					for (var h = 0; h < e.length; h++) {
						var i = e[h],
						j = f[h],
						k = a(b).treegrid("getColumnOption", i),
						l = k.sorter ||
						function(a, b) {
							return a == b ? 0 : a > b ? 1 : -1
						};
						g = l(c[i], d[i]) * (j == "asc" ? 1 : -1);
						if (g != 0) return g
					}
					return g
				});
				for (var d = 0; d < c.length; d++) {
					var h = c[d].children;
					h && h.length && g(h)
				}
			}
			var d = a.data(b, "treegrid").options;
			if (!d.remoteSort && d.sortName) {
				var e = d.sortName.split(","),
				f = d.sortOrder.split(",");
				g(c)
			}
		},
		transfer: function(b, c, d) {
			var e = a.data(b, "treegrid").options,
			f = [];
			for (var g = 0; g < d.length; g++) f.push(d[g]);
			var h = [];
			for (var g = 0; g < f.length; g++) {
				var i = f[g];
				c ? i._parentId == c && (h.push(i), f.splice(g, 1), g--) : i._parentId || (h.push(i), f.splice(g, 1), g--)
			}
			var j = [];
			for (var g = 0; g < h.length; g++) j.push(h[g]);
			while (j.length) {
				var k = j.shift();
				for (var g = 0; g < f.length; g++) {
					var i = f[g];
					i._parentId == k[e.idField] && (k.children ? k.children.push(i) : k.children = [i], j.push(i), f.splice(g, 1), g--)
				}
			}
			return h
		}
	});
	a.fn.treegrid.defaults = a.extend({},
	a.fn.datagrid.defaults, {
		treeField: null,
		animate: !1,
		singleSelect: !0,
		view: x,
		loader: function(b, c, d) {
			var e = a(this).treegrid("options");
			if (!e.url) return ! 1;
			a.ajax({
				type: e.method,
				url: e.url,
				data: b,
				dataType: "json",
				success: function(a) {
					c(a)
				},
				error: function() {
					d.apply(this, arguments)
				}
			})
		},
		loadFilter: function(a, b) {
			return a
		},
		finder: {
			getTr: function(b, c, d, e) {
				d = d || "body",
				e = e || 0;
				var f = a.data(b, "datagrid").dc;
				if (e == 0) {
					var g = a.data(b, "treegrid").options,
					h = g.finder.getTr(b, c, d, 1),
					i = g.finder.getTr(b, c, d, 2);
					return h.add(i)
				}
				if (d == "body") {
					var j = a("#" + a.data(b, "datagrid").rowIdPrefix + "-" + e + "-" + c);
					return j.length || (j = (e == 1 ? f.body1: f.body2).find('tr[node-id="' + c + '"]')),
					j
				}
				if (d == "footer") return (e == 1 ? f.footer1: f.footer2).find('tr[node-id="' + c + '"]');
				if (d == "selected") return (e == 1 ? f.body1: f.body2).find("tr.datagrid-row-selected");
				if (d == "highlight") return (e == 1 ? f.body1: f.body2).find("tr.datagrid-row-over");
				if (d == "checked") return (e == 1 ? f.body1: f.body2).find("tr.datagrid-row-checked");
				if (d == "last") return (e == 1 ? f.body1: f.body2).find("tr:last[node-id]");
				if (d == "allbody") return (e == 1 ? f.body1: f.body2).find("tr[node-id]");
				if (d == "allfooter") return (e == 1 ? f.footer1: f.footer2).find("tr[node-id]")
			},
			getRow: function(b, c) {
				var d = typeof c == "object" ? c.attr("node-id") : c;
				return a(b).treegrid("find", d)
			},
			getRows: function(b) {
				return a(b).treegrid("getChildren")
			}
		},
		onBeforeLoad: function(a, b) {},
		onLoadSuccess: function(a, b) {},
		onLoadError: function() {},
		onBeforeCollapse: function(a) {},
		onCollapse: function(a) {},
		onBeforeExpand: function(a) {},
		onExpand: function(a) {},
		onClickRow: function(a) {},
		onDblClickRow: function(a) {},
		onClickCell: function(a, b) {},
		onDblClickCell: function(a, b) {},
		onContextMenu: function(a, b) {},
		onBeforeEdit: function(a) {},
		onAfterEdit: function(a, b) {},
		onCancelEdit: function(a) {}
	})
} (jQuery),
function(a) {
	function b(b, c) {
		var d = a.data(b, "combo"),
		e = d.options,
		f = d.combo,
		g = d.panel;
		c && (e.width = c);
		if (isNaN(e.width)) {
			var h = a(b).clone();
			h.css("visibility", "hidden"),
			h.appendTo("body"),
			e.width = h.outerWidth(),
			h.remove()
		}
		f.appendTo("body");
		var i = f.find("input.combo-text"),
		j = f.find(".combo-arrow"),
		k = e.hasDownArrow ? j._outerWidth() : 0;
		f._outerWidth(e.width)._outerHeight(e.height),
		i._outerWidth(f.width() - k),
		i.css({
			height: f.height() + "px",
			lineHeight: f.height() + "px"
		}),
		j._outerHeight(f.height()),
		g.panel("resize", {
			width: e.panelWidth ? e.panelWidth: f.outerWidth(),
			height: e.panelHeight
		}),
		f.insertAfter(b)
	}
	function c(b) {
		a(b).addClass("combo-f").hide();
		var c = a('<span class="combo"><input type="text" class="combo-text" autocomplete="off"><span><span class="combo-arrow"></span></span><input type="hidden" class="combo-value"></span>').insertAfter(b),
		d = a('<div class="combo-panel"></div>').appendTo("body");
		d.panel({
			doSize: !1,
			closed: !0,
			cls: "combo-p",
			style: {
				position: "absolute",
				zIndex: 10
			},
			onOpen: function() {
				var b = a(this).panel("panel");
				a.fn.menu ? b.css("z-index", a.fn.menu.defaults.zIndex++) : a.fn.window && b.css("z-index", a.fn.window.defaults.zIndex++),
				a(this).panel("resize")
			},
			onBeforeClose: function() {
				f(this)
			},
			onClose: function() {
				var c = a.data(b, "combo");
				c && c.options.onHidePanel.call(b)
			}
		});
		var e = a(b).attr("name");
		return e && (c.find("input.combo-value").attr("name", e), a(b).removeAttr("name").attr("comboName", e)),
		{
			combo: c,
			panel: d
		}
	}
	function d(b) {
		var c = a.data(b, "combo"),
		d = c.options,
		e = c.combo;
		d.hasDownArrow ? e.find(".combo-arrow").show() : e.find(".combo-arrow").hide(),
		k(b, d.disabled),
		l(b, d.readonly)
	}
	function e(b) {
		var c = a.data(b, "combo"),
		d = c.combo.find("input.combo-text");
		d.validatebox("destroy"),
		c.panel.panel("destroy"),
		c.combo.remove(),
		a(b).remove()
	}
	function f(b) {
		a(b).find(".combo-f").each(function() {
			var b = a(this).combo("panel");
			b.is(":visible") && b.panel("close")
		})
	}
	function g(b) {
		function k() {
			if (e.is(":visible")) i(b);
			else {
				var c = a(this).closest("div.combo-panel");
				a("div.combo-panel:visible").not(e).not(c).panel("close"),
				a(b).combo("showPanel")
			}
			h.focus()
		}
		var c = a.data(b, "combo"),
		d = c.options,
		e = c.panel,
		g = c.combo,
		h = g.find(".combo-text"),
		j = g.find(".combo-arrow");
		a(document).unbind(".combo").bind("mousedown.combo",
		function(b) {
			var c = a(b.target).closest("span.combo,div.combo-p");
			if (c.length) {
				f(c);
				return
			}
			a("body>div.combo-p>div.combo-panel:visible").panel("close")
		}),
		h.unbind(".combo"),
		j.unbind(".combo"),
		!d.disabled && !d.readonly && (h.bind("click.combo",
		function(b) {
			if (!d.editable) k.call(this);
			else {
				var c = a(this).closest("div.combo-panel");
				a("div.combo-panel:visible").not(e).not(c).panel("close")
			}
		}).bind("keydown.combo paste.combo drop.combo",
		function(e) {
			switch (e.keyCode) {
			case 38:
				d.keyHandler.up.call(b, e);
				break;
			case 40:
				d.keyHandler.down.call(b, e);
				break;
			case 37:
				d.keyHandler.left.call(b, e);
				break;
			case 39:
				d.keyHandler.right.call(b, e);
				break;
			case 13:
				return e.preventDefault(),
				d.keyHandler.enter.call(b, e),
				!1;
			case 9:
			case 27:
				i(b);
				break;
			default:
				d.editable && (c.timer && clearTimeout(c.timer), c.timer = setTimeout(function() {
					var f = h.val();
					c.previousValue != f && (c.previousValue = f, a(b).combo("showPanel"), d.keyHandler.query.call(b, h.val(), e), a(b).combo("validate"))
				},
				d.delay))
			}
		}), j.bind("click.combo",
		function() {
			k.call(this)
		}).bind("mouseenter.combo",
		function() {
			a(this).addClass("combo-arrow-hover")
		}).bind("mouseleave.combo",
		function() {
			a(this).removeClass("combo-arrow-hover")
		}))
	}
	function h(b) {
		function g() {
			var b = e.offset().left;
			return d.panelAlign == "right" && (b += e._outerWidth() - f._outerWidth()),
			b + f._outerWidth() > a(window)._outerWidth() + a(document).scrollLeft() && (b = a(window)._outerWidth() + a(document).scrollLeft() - f._outerWidth()),
			b < 0 && (b = 0),
			b
		}
		function h() {
			var b = e.offset().top + e._outerHeight();
			return b + f._outerHeight() > a(window)._outerHeight() + a(document).scrollTop() && (b = e.offset().top - f._outerHeight()),
			b < a(document).scrollTop() && (b = e.offset().top + e._outerHeight()),
			b
		}
		var c = a.data(b, "combo"),
		d = c.options,
		e = c.combo,
		f = c.panel;
		f.panel("move", {
			left: g(),
			top: h()
		}),
		f.panel("options").closed && (f.panel("open"), d.onShowPanel.call(b)),
		function() {
			f.is(":visible") && (f.panel("move", {
				left: g(),
				top: h()
			}), setTimeout(arguments.callee, 200))
		} ()
	}
	function i(b) {
		var c = a.data(b, "combo").panel;
		c.panel("close")
	}
	function j(b) {
		var c = a.data(b, "combo").options,
		d = a(b).combo("textbox");
		d.validatebox(a.extend({},
		c, {
			deltaX: c.hasDownArrow ? c.deltaX: c.deltaX > 0 ? 1 : -1
		}))
	}
	function k(b, c) {
		var d = a.data(b, "combo"),
		e = d.options,
		f = d.combo;
		c ? (e.disabled = !0, a(b).attr("disabled", !0), f.find(".combo-value").attr("disabled", !0), f.find(".combo-text").attr("disabled", !0)) : (e.disabled = !1, a(b).removeAttr("disabled"), f.find(".combo-value").removeAttr("disabled"), f.find(".combo-text").removeAttr("disabled"))
	}
	function l(b, c) {
		var d = a.data(b, "combo"),
		e = d.options;
		e.readonly = c == undefined ? !0 : c;
		var f = e.readonly ? !0 : !e.editable;
		d.combo.find(".combo-text").attr("readonly", f).css("cursor", f ? "pointer": "")
	}
	function m(b) {
		var c = a.data(b, "combo"),
		d = c.options,
		e = c.combo;
		d.multiple ? e.find("input.combo-value").remove() : e.find("input.combo-value").val(""),
		e.find("input.combo-text").val("")
	}
	function n(b) {
		var c = a.data(b, "combo").combo;
		return c.find("input.combo-text").val()
	}
	function o(b, c) {
		var d = a.data(b, "combo"),
		e = d.combo.find("input.combo-text");
		e.val() != c && (e.val(c), a(b).combo("validate"), d.previousValue = c)
	}
	function p(b) {
		var c = [],
		d = a.data(b, "combo").combo;
		return d.find("input.combo-value").each(function() {
			c.push(a(this).val())
		}),
		c
	}
	function q(b, c) {
		var d = a.data(b, "combo").options,
		e = p(b),
		f = a.data(b, "combo").combo;
		f.find("input.combo-value").remove();
		var g = a(b).attr("comboName");
		for (var h = 0; h < c.length; h++) {
			var i = a('<input type="hidden" class="combo-value">').appendTo(f);
			g && i.attr("name", g),
			i.val(c[h])
		}
		var j = [];
		for (var h = 0; h < e.length; h++) j[h] = e[h];
		var k = [];
		for (var h = 0; h < c.length; h++) for (var l = 0; l < j.length; l++) if (c[h] == j[l]) {
			k.push(c[h]),
			j.splice(l, 1);
			break
		}
		if (k.length != c.length || c.length != e.length) d.multiple ? d.onChange.call(b, c, e) : d.onChange.call(b, c[0], e[0])
	}
	function r(a) {
		var b = p(a);
		return b[0]
	}
	function s(a, b) {
		q(a, [b])
	}
	function t(b) {
		var c = a.data(b, "combo").options,
		d = c.onChange;
		c.onChange = function() {},
		c.multiple ? (c.value ? typeof c.value == "object" ? q(b, c.value) : s(b, c.value) : q(b, []), c.originalValue = p(b)) : (s(b, c.value), c.originalValue = c.value),
		c.onChange = d
	}
	a.fn.combo = function(e, f) {
		if (typeof e == "string") {
			var h = a.fn.combo.methods[e];
			return h ? h(this, f) : this.each(function() {
				var b = a(this).combo("textbox");
				b.validatebox(e, f)
			})
		}
		return e = e || {},
		this.each(function() {
			var f = a.data(this, "combo");
			if (f) a.extend(f.options, e);
			else {
				var h = c(this);
				f = a.data(this, "combo", {
					options: a.extend({},
					a.fn.combo.defaults, a.fn.combo.parseOptions(this), e),
					combo: h.combo,
					panel: h.panel,
					previousValue: null
				}),
				a(this).removeAttr("disabled")
			}
			d(this),
			b(this),
			g(this),
			j(this),
			t(this)
		})
	},
	a.fn.combo.methods = {
		options: function(b) {
			return a.data(b[0], "combo").options
		},
		panel: function(b) {
			return a.data(b[0], "combo").panel
		},
		textbox: function(b) {
			return a.data(b[0], "combo").combo.find("input.combo-text")
		},
		destroy: function(a) {
			return a.each(function() {
				e(this)
			})
		},
		resize: function(a, c) {
			return a.each(function() {
				b(this, c)
			})
		},
		showPanel: function(a) {
			return a.each(function() {
				h(this)
			})
		},
		hidePanel: function(a) {
			return a.each(function() {
				i(this)
			})
		},
		disable: function(a) {
			return a.each(function() {
				k(this, !0),
				g(this)
			})
		},
		enable: function(a) {
			return a.each(function() {
				k(this, !1),
				g(this)
			})
		},
		readonly: function(a, b) {
			return a.each(function() {
				l(this, b),
				g(this)
			})
		},
		isValid: function(b) {
			var c = a.data(b[0], "combo").combo.find("input.combo-text");
			return c.validatebox("isValid")
		},
		clear: function(a) {
			return a.each(function() {
				m(this)
			})
		},
		reset: function(b) {
			return b.each(function() {
				var b = a.data(this, "combo").options;
				b.multiple ? a(this).combo("setValues", b.originalValue) : a(this).combo("setValue", b.originalValue)
			})
		},
		getText: function(a) {
			return n(a[0])
		},
		setText: function(a, b) {
			return a.each(function() {
				o(this, b)
			})
		},
		getValues: function(a) {
			return p(a[0])
		},
		setValues: function(a, b) {
			return a.each(function() {
				q(this, b)
			})
		},
		getValue: function(a) {
			return r(a[0])
		},
		setValue: function(a, b) {
			return a.each(function() {
				s(this, b)
			})
		}
	},
	a.fn.combo.parseOptions = function(b) {
		var c = a(b);
		return a.extend({},
		a.fn.validatebox.parseOptions(b), a.parser.parseOptions(b, ["width", "height", "separator", "panelAlign", {
			panelWidth: "number",
			editable: "boolean",
			hasDownArrow: "boolean",
			delay: "number",
			selectOnNavigation: "boolean"
		}]), {
			panelHeight: c.attr("panelHeight") == "auto" ? "auto": parseInt(c.attr("panelHeight")) || undefined,
			multiple: c.attr("multiple") ? !0 : undefined,
			disabled: c.attr("disabled") ? !0 : undefined,
			readonly: c.attr("readonly") ? !0 : undefined,
			value: c.val() || undefined
		})
	},
	a.fn.combo.defaults = a.extend({},
	a.fn.validatebox.defaults, {
		width: "auto",
		height: 22,
		panelWidth: null,
		panelHeight: 200,
		panelAlign: "left",
		multiple: !1,
		selectOnNavigation: !0,
		separator: ",",
		editable: !0,
		disabled: !1,
		readonly: !1,
		hasDownArrow: !0,
		value: "",
		delay: 200,
		deltaX: 19,
		keyHandler: {
			up: function(a) {},
			down: function(a) {},
			left: function(a) {},
			right: function(a) {},
			enter: function(a) {},
			query: function(a, b) {}
		},
		onShowPanel: function() {},
		onHidePanel: function() {},
		onChange: function(a, b) {}
	})
} (jQuery),
function(a) {
	function c(b, c) {
		var d = a.data(b, "combobox"),
		e = d.options,
		f = d.data;
		for (var g = 0; g < f.length; g++) if (f[g][e.valueField] == c) return g;
		return - 1
	}
	function d(b, c) {
		var d = a.data(b, "combobox").options,
		e = a(b).combo("panel"),
		f = d.finder.getEl(b, c);
		if (f.length) if (f.position().top <= 0) {
			var g = e.scrollTop() + f.position().top;
			e.scrollTop(g)
		} else if (f.position().top + f.outerHeight() > e.height()) {
			var g = e.scrollTop() + f.position().top + f.outerHeight() - e.height();
			e.scrollTop(g)
		}
	}
	function e(b, c) {
		var e = a.data(b, "combobox").options,
		g = a(b).combobox("panel"),
		h = g.children("div.combobox-item-hover");
		h.length || (h = g.children("div.combobox-item-selected")),
		h.removeClass("combobox-item-hover");
		var i = "div.combobox-item:visible:not(.combobox-item-disabled):first",
		j = "div.combobox-item:visible:not(.combobox-item-disabled):last";
		h.length ? c == "next" ? (h = h.nextAll(i), h.length || (h = g.children(i))) : (h = h.prevAll(i), h.length || (h = g.children(j))) : h = g.children(c == "next" ? i: j);
		if (h.length) {
			h.addClass("combobox-item-hover");
			var k = e.finder.getRow(b, h);
			k && (d(b, k[e.valueField]), e.selectOnNavigation && f(b, k[e.valueField]))
		}
	}
	function f(b, c) {
		var d = a.data(b, "combobox").options,
		e = a(b).combo("getValues");
		a.inArray(c + "", e) == -1 && (d.multiple ? e.push(c) : e = [c], h(b, e), d.onSelect.call(b, d.finder.getRow(b, c)))
	}
	function g(b, c) {
		var d = a.data(b, "combobox").options,
		e = a(b).combo("getValues"),
		f = a.inArray(c + "", e);
		f >= 0 && (e.splice(f, 1), h(b, e), d.onUnselect.call(b, d.finder.getRow(b, c)))
	}
	function h(b, c, d) {
		var e = a.data(b, "combobox").options,
		f = a(b).combo("panel");
		f.find("div.combobox-item-selected").removeClass("combobox-item-selected");
		var g = [],
		h = [];
		for (var i = 0; i < c.length; i++) {
			var j = c[i],
			k = j;
			e.finder.getEl(b, j).addClass("combobox-item-selected");
			var l = e.finder.getRow(b, j);
			l && (k = l[e.textField]),
			g.push(j),
			h.push(k)
		}
		a(b).combo("setValues", g),
		d || a(b).combo("setText", h.join(e.separator))
	}
	function i(b, c, d) {
		var e = a.data(b, "combobox"),
		f = e.options;
		e.data = f.loadFilter.call(b, c),
		e.groups = [],
		c = e.data;
		var g = a(b).combobox("getValues"),
		i = [],
		j = undefined;
		for (var k = 0; k < c.length; k++) {
			var l = c[k],
			m = l[f.valueField] + "",
			n = l[f.textField],
			o = l[f.groupField];
			o ? j != o && (j = o, e.groups.push(o), i.push('<div id="' + (e.groupIdPrefix + "_" + (e.groups.length - 1)) + '" class="combobox-group">'), i.push(f.groupFormatter ? f.groupFormatter.call(b, o) : o), i.push("</div>")) : j = undefined;
			var p = "combobox-item" + (l.disabled ? " combobox-item-disabled": "") + (o ? " combobox-gitem": "");
			i.push('<div id="' + (e.itemIdPrefix + "_" + k) + '" class="' + p + '">'),
			i.push(f.formatter ? f.formatter.call(b, l) : n),
			i.push("</div>"),
			l.selected && a.inArray(m, g) == -1 && g.push(m)
		}
		a(b).combo("panel").html(i.join("")),
		f.multiple ? h(b, g, d) : h(b, g.length ? [g[g.length - 1]] : [], d),
		f.onLoadSuccess.call(b, c)
	}
	function j(b, c, d, e) {
		var f = a.data(b, "combobox").options;
		c && (f.url = c),
		d = d || {};
		if (f.onBeforeLoad.call(b, d) == 0) return;
		f.loader.call(b, d,
		function(a) {
			i(b, a, e)
		},
		function() {
			f.onLoadError.apply(this, arguments)
		})
	}
	function k(b, c) {
		var d = a.data(b, "combobox"),
		e = d.options;
		e.multiple && !c ? h(b, [], !0) : h(b, [c], !0);
		if (e.mode == "remote") j(b, null, {
			q: c
		},
		!0);
		else {
			var f = a(b).combo("panel");
			f.find("div.combobox-item-selected,div.combobox-item-hover").removeClass("combobox-item-selected combobox-item-hover"),
			f.find("div.combobox-item,div.combobox-group").hide();
			var g = d.data,
			i = [],
			k = e.multiple ? c.split(e.separator) : [c];
			a.map(k,
			function(c) {
				c = a.trim(c);
				var f = undefined;
				for (var h = 0; h < g.length; h++) {
					var j = g[h];
					if (e.filter.call(b, c, j)) {
						var k = j[e.valueField],
						l = j[e.textField],
						m = j[e.groupField],
						n = e.finder.getEl(b, k).show();
						l.toLowerCase() == c.toLowerCase() && (i.push(k), n.addClass("combobox-item-selected")),
						e.groupField && f != m && (a("#" + d.groupIdPrefix + "_" + a.inArray(m, d.groups)).show(), f = m)
					}
				}
			}),
			h(b, i, !0)
		}
	}
	function l(b) {
		var d = a(b),
		e = d.combobox("options"),
		f = d.combobox("panel"),
		g = f.children("div.combobox-item-hover");
		if (g.length) {
			var h = e.finder.getRow(b, g),
			i = h[e.valueField];
			e.multiple ? g.hasClass("combobox-item-selected") ? d.combobox("unselect", i) : d.combobox("select", i) : d.combobox("select", i)
		}
		var j = [];
		a.map(d.combobox("getValues"),
		function(a) {
			c(b, a) >= 0 && j.push(a)
		}),
		d.combobox("setValues", j),
		e.multiple || d.combobox("hidePanel")
	}
	function m(c) {
		var e = a.data(c, "combobox"),
		h = e.options;
		b++,
		e.itemIdPrefix = "_easyui_combobox_i" + b,
		e.groupIdPrefix = "_easyui_combobox_g" + b,
		a(c).addClass("combobox-f"),
		a(c).combo(a.extend({},
		h, {
			onShowPanel: function() {
				a(c).combo("panel").find("div.combobox-item,div.combobox-group").show(),
				d(c, a(c).combobox("getValue")),
				h.onShowPanel.call(c)
			}
		})),
		a(c).combo("panel").unbind().bind("mouseover",
		function(b) {
			a(this).children("div.combobox-item-hover").removeClass("combobox-item-hover");
			var c = a(b.target).closest("div.combobox-item");
			c.hasClass("combobox-item-disabled") || c.addClass("combobox-item-hover"),
			b.stopPropagation()
		}).bind("mouseout",
		function(b) {
			a(b.target).closest("div.combobox-item").removeClass("combobox-item-hover"),
			b.stopPropagation()
		}).bind("click",
		function(b) {
			var d = a(b.target).closest("div.combobox-item");
			if (!d.length || d.hasClass("combobox-item-disabled")) return;
			var e = h.finder.getRow(c, d);
			if (!e) return;
			var i = e[h.valueField];
			h.multiple ? d.hasClass("combobox-item-selected") ? g(c, i) : f(c, i) : (f(c, i), a(c).combo("hidePanel")),
			b.stopPropagation()
		})
	}
	var b = 0;
	a.fn.combobox = function(b, c) {
		if (typeof b == "string") {
			var d = a.fn.combobox.methods[b];
			return d ? d(this, c) : this.combo(b, c)
		}
		return b = b || {},
		this.each(function() {
			var c = a.data(this, "combobox");
			if (c) a.extend(c.options, b),
			m(this);
			else {
				c = a.data(this, "combobox", {
					options: a.extend({},
					a.fn.combobox.defaults, a.fn.combobox.parseOptions(this), b),
					data: []
				}),
				m(this);
				var d = a.fn.combobox.parseData(this);
				d.length && i(this, d)
			}
			c.options.data && i(this, c.options.data),
			j(this)
		})
	},
	a.fn.combobox.methods = {
		options: function(b) {
			var c = b.combo("options");
			return a.extend(a.data(b[0], "combobox").options, {
				originalValue: c.originalValue,
				disabled: c.disabled,
				readonly: c.readonly
			})
		},
		getData: function(b) {
			return a.data(b[0], "combobox").data
		},
		setValues: function(a, b) {
			return a.each(function() {
				h(this, b)
			})
		},
		setValue: function(a, b) {
			return a.each(function() {
				h(this, [b])
			})
		},
		clear: function(b) {
			return b.each(function() {
				a(this).combo("clear");
				var b = a(this).combo("panel");
				b.find("div.combobox-item-selected").removeClass("combobox-item-selected")
			})
		},
		reset: function(b) {
			return b.each(function() {
				var b = a(this).combobox("options");
				b.multiple ? a(this).combobox("setValues", b.originalValue) : a(this).combobox("setValue", b.originalValue)
			})
		},
		loadData: function(a, b) {
			return a.each(function() {
				i(this, b)
			})
		},
		reload: function(a, b) {
			return a.each(function() {
				j(this, b)
			})
		},
		select: function(a, b) {
			return a.each(function() {
				f(this, b)
			})
		},
		unselect: function(a, b) {
			return a.each(function() {
				g(this, b)
			})
		}
	},
	a.fn.combobox.parseOptions = function(b) {
		var c = a(b);
		return a.extend({},
		a.fn.combo.parseOptions(b), a.parser.parseOptions(b, ["valueField", "textField", "groupField", "mode", "method", "url"]))
	},
	a.fn.combobox.parseData = function(b) {
		function e(b, e) {
			var f = a(b),
			g = {};
			g[d.valueField] = f.attr("value") != undefined ? f.attr("value") : f.text(),
			g[d.textField] = f.text(),
			g.selected = f.is(":selected"),
			g.disabled = f.is(":disabled"),
			e && (d.groupField = d.groupField || "group", g[d.groupField] = e),
			c.push(g)
		}
		var c = [],
		d = a(b).combobox("options");
		return a(b).children().each(function() {
			if (this.tagName.toLowerCase() == "optgroup") {
				var b = a(this).attr("label");
				a(this).children().each(function() {
					e(this, b)
				})
			} else e(this)
		}),
		c
	},
	a.fn.combobox.defaults = a.extend({},
	a.fn.combo.defaults, {
		valueField: "value",
		textField: "text",
		groupField: null,
		groupFormatter: function(a) {
			return a
		},
		mode: "local",
		method: "post",
		url: null,
		data: null,
		keyHandler: {
			up: function(a) {
				e(this, "prev"),
				a.preventDefault()
			},
			down: function(a) {
				e(this, "next"),
				a.preventDefault()
			},
			left: function(a) {},
			right: function(a) {},
			enter: function(a) {
				l(this)
			},
			query: function(a, b) {
				k(this, a)
			}
		},
		filter: function(b, c) {
			var d = a(this).combobox("options");
			return c[d.textField].toLowerCase().indexOf(b.toLowerCase()) == 0
		},
		formatter: function(b) {
			var c = a(this).combobox("options");
			return b[c.textField]
		},
		loader: function(b, c, d) {
			var e = a(this).combobox("options");
			if (!e.url) return ! 1;
			a.ajax({
				type: e.method,
				url: e.url,
				data: b,
				dataType: "json",
				success: function(a) {
					c(a)
				},
				error: function() {
					d.apply(this, arguments)
				}
			})
		},
		loadFilter: function(a) {
			return a
		},
		finder: {
			getEl: function(b, d) {
				var e = c(b, d),
				f = a.data(b, "combobox").itemIdPrefix + "_" + e;
				return a("#" + f)
			},
			getRow: function(b, d) {
				var e = a.data(b, "combobox"),
				f = d instanceof jQuery ? d.attr("id").substr(e.itemIdPrefix.length + 1) : c(b, d);
				return e.data[parseInt(f)]
			}
		},
		onBeforeLoad: function(a) {},
		onLoadSuccess: function() {},
		onLoadError: function() {},
		onSelect: function(a) {},
		onUnselect: function(a) {}
	})
} (jQuery),
function(a) {
	function b(b) {
		var d = a.data(b, "combotree"),
		e = d.options,
		f = d.tree;
		a(b).addClass("combotree-f"),
		a(b).combo(e);
		var g = a(b).combo("panel");
		f || (f = a("<ul></ul>").appendTo(g), a.data(b, "combotree").tree = f),
		f.tree(a.extend({},
		e, {
			checkbox: e.multiple,
			onLoadSuccess: function(c, d) {
				var g = a(b).combotree("getValues");
				if (e.multiple) {
					var h = f.tree("getChecked");
					for (var i = 0; i < h.length; i++) {
						var j = h[i].id; (function() {
							for (var a = 0; a < g.length; a++) if (j == g[a]) return;
							g.push(j)
						})()
					}
				}
				var k = a(this).tree("options"),
				l = k.onCheck,
				m = k.onSelect;
				k.onCheck = k.onSelect = function() {},
				a(b).combotree("setValues", g),
				k.onCheck = l,
				k.onSelect = m,
				e.onLoadSuccess.call(this, c, d)
			},
			onClick: function(d) {
				e.multiple ? a(this).tree(d.checked ? "uncheck": "check", d.target) : a(b).combo("hidePanel"),
				c(b),
				e.onClick.call(this, d)
			},
			onCheck: function(a, d) {
				c(b),
				e.onCheck.call(this, a, d)
			}
		}))
	}
	function c(b) {
		var c = a.data(b, "combotree"),
		d = c.options,
		e = c.tree,
		f = [],
		g = [];
		if (d.multiple) {
			var h = e.tree("getChecked");
			for (var i = 0; i < h.length; i++) f.push(h[i].id),
			g.push(h[i].text)
		} else {
			var j = e.tree("getSelected");
			j && (f.push(j.id), g.push(j.text))
		}
		a(b).combo("setValues", f).combo("setText", g.join(d.separator))
	}
	function d(b, c) {
		var d = a.data(b, "combotree").options,
		e = a.data(b, "combotree").tree;
		e.find("span.tree-checkbox").addClass("tree-checkbox0").removeClass("tree-checkbox1 tree-checkbox2");
		var f = [],
		g = [];
		for (var h = 0; h < c.length; h++) {
			var i = c[h],
			j = i,
			k = e.tree("find", i);
			k && (j = k.text, e.tree("check", k.target), e.tree("select", k.target)),
			f.push(i),
			g.push(j)
		}
		a(b).combo("setValues", f).combo("setText", g.join(d.separator))
	}
	a.fn.combotree = function(c, d) {
		if (typeof c == "string") {
			var e = a.fn.combotree.methods[c];
			return e ? e(this, d) : this.combo(c, d)
		}
		return c = c || {},
		this.each(function() {
			var d = a.data(this, "combotree");
			d ? a.extend(d.options, c) : a.data(this, "combotree", {
				options: a.extend({},
				a.fn.combotree.defaults, a.fn.combotree.parseOptions(this), c)
			}),
			b(this)
		})
	},
	a.fn.combotree.methods = {
		options: function(b) {
			var c = b.combo("options");
			return a.extend(a.data(b[0], "combotree").options, {
				originalValue: c.originalValue,
				disabled: c.disabled,
				readonly: c.readonly
			})
		},
		tree: function(b) {
			return a.data(b[0], "combotree").tree
		},
		loadData: function(b, c) {
			return b.each(function() {
				var b = a.data(this, "combotree").options;
				b.data = c;
				var d = a.data(this, "combotree").tree;
				d.tree("loadData", c)
			})
		},
		reload: function(b, c) {
			return b.each(function() {
				var b = a.data(this, "combotree").options,
				d = a.data(this, "combotree").tree;
				c && (b.url = c),
				d.tree({
					url: b.url
				})
			})
		},
		setValues: function(a, b) {
			return a.each(function() {
				d(this, b)
			})
		},
		setValue: function(a, b) {
			return a.each(function() {
				d(this, [b])
			})
		},
		clear: function(b) {
			return b.each(function() {
				var b = a.data(this, "combotree").tree;
				b.find("div.tree-node-selected").removeClass("tree-node-selected");
				var c = b.tree("getChecked");
				for (var d = 0; d < c.length; d++) b.tree("uncheck", c[d].target);
				a(this).combo("clear")
			})
		},
		reset: function(b) {
			return b.each(function() {
				var b = a(this).combotree("options");
				b.multiple ? a(this).combotree("setValues", b.originalValue) : a(this).combotree("setValue", b.originalValue)
			})
		}
	},
	a.fn.combotree.parseOptions = function(b) {
		return a.extend({},
		a.fn.combo.parseOptions(b), a.fn.tree.parseOptions(b))
	},
	a.fn.combotree.defaults = a.extend({},
	a.fn.combo.defaults, a.fn.tree.defaults, {
		editable: !1
	})
} (jQuery),
function(a) {
	function b(b) {
		function h(d, f) {
			c.remainText = !1,
			i(),
			e.multiple || a(b).combo("hidePanel"),
			e.onClickRow.call(this, d, f)
		}
		function i() {
			var d = f.datagrid("getSelections"),
			g = [],
			h = [];
			for (var i = 0; i < d.length; i++) g.push(d[i][e.idField]),
			h.push(d[i][e.textField]);
			e.multiple ? a(b).combo("setValues", g) : a(b).combo("setValues", g.length ? g: [""]),
			c.remainText || a(b).combo("setText", h.join(e.separator))
		}
		var c = a.data(b, "combogrid"),
		e = c.options,
		f = c.grid;
		a(b).addClass("combogrid-f").combo(e);
		var g = a(b).combo("panel");
		f || (f = a("<table></table>").appendTo(g), c.grid = f),
		f.datagrid(a.extend({},
		e, {
			border: !1,
			fit: !0,
			singleSelect: !e.multiple,
			onLoadSuccess: function(f) {
				var g = a(b).combo("getValues"),
				h = e.onSelect;
				e.onSelect = function() {},
				d(b, g, c.remainText),
				e.onSelect = h,
				e.onLoadSuccess.apply(b, arguments)
			},
			onClickRow: h,
			onSelect: function(a, b) {
				i(),
				e.onSelect.call(this, a, b)
			},
			onUnselect: function(a, b) {
				i(),
				e.onUnselect.call(this, a, b)
			},
			onSelectAll: function(a) {
				i(),
				e.onSelectAll.call(this, a)
			},
			onUnselectAll: function(a) {
				e.multiple && i(),
				e.onUnselectAll.call(this, a)
			}
		}))
	}
	function c(b, c) {
		var d = a.data(b, "combogrid"),
		e = d.options,
		f = d.grid,
		g = f.datagrid("getRows").length;
		if (!g) return;
		var h = e.finder.getTr(f[0], null, "highlight");
		h.length || (h = e.finder.getTr(f[0], null, "selected"));
		var i;
		if (!h.length) i = c == "next" ? 0 : g - 1;
		else {
			var i = parseInt(h.attr("datagrid-row-index"));
			i += c == "next" ? 1 : -1,
			i < 0 && (i = g - 1),
			i >= g && (i = 0)
		}
		f.datagrid("highlightRow", i),
		e.selectOnNavigation && (d.remainText = !1, f.datagrid("selectRow", i))
	}
	function d(b, c, d) {
		var e = a.data(b, "combogrid"),
		f = e.options,
		g = e.grid,
		h = g.datagrid("getRows"),
		i = [],
		j = a(b).combo("getValues"),
		k = a(b).combo("options"),
		l = k.onChange;
		k.onChange = function() {},
		g.datagrid("clearSelections");
		for (var m = 0; m < c.length; m++) {
			var n = g.datagrid("getRowIndex", c[m]);
			n >= 0 ? (g.datagrid("selectRow", n), i.push(h[n][f.textField])) : i.push(c[m])
		}
		a(b).combo("setValues", j),
		k.onChange = l,
		a(b).combo("setValues", c);
		if (!d) {
			var o = i.join(f.separator);
			a(b).combo("getText") != o && a(b).combo("setText", o)
		}
	}
	function e(b, c) {
		var e = a.data(b, "combogrid"),
		f = e.options,
		g = e.grid;
		e.remainText = !0,
		f.multiple && !c ? d(b, [], !0) : d(b, [c], !0);
		if (f.mode == "remote") g.datagrid("clearSelections"),
		g.datagrid("load", a.extend({},
		f.queryParams, {
			q: c
		}));
		else {
			if (!c) return;
			g.datagrid("clearSelections").datagrid("highlightRow", -1);
			var h = g.datagrid("getRows"),
			i = f.multiple ? c.split(f.separator) : [c];
			a.map(i,
			function(c) {
				c = a.trim(c),
				c && a.map(h,
				function(a, d) {
					c == a[f.textField] ? g.datagrid("selectRow", d) : f.filter.call(b, c, a) && g.datagrid("highlightRow", d)
				})
			})
		}
	}
	function f(b) {
		var c = a.data(b, "combogrid"),
		d = c.options,
		e = c.grid,
		f = d.finder.getTr(e[0], null, "highlight");
		c.remainText = !1;
		if (f.length) {
			var g = parseInt(f.attr("datagrid-row-index"));
			d.multiple ? f.hasClass("datagrid-row-selected") ? e.datagrid("unselectRow", g) : e.datagrid("selectRow", g) : e.datagrid("selectRow", g)
		}
		var h = [];
		a.map(e.datagrid("getSelections"),
		function(a) {
			h.push(a[d.idField])
		}),
		a(b).combogrid("setValues", h),
		d.multiple || a(b).combogrid("hidePanel")
	}
	a.fn.combogrid = function(c, d) {
		if (typeof c == "string") {
			var e = a.fn.combogrid.methods[c];
			return e ? e(this, d) : this.combo(c, d)
		}
		return c = c || {},
		this.each(function() {
			var d = a.data(this, "combogrid");
			d ? a.extend(d.options, c) : d = a.data(this, "combogrid", {
				options: a.extend({},
				a.fn.combogrid.defaults, a.fn.combogrid.parseOptions(this), c)
			}),
			b(this)
		})
	},
	a.fn.combogrid.methods = {
		options: function(b) {
			var c = b.combo("options");
			return a.extend(a.data(b[0], "combogrid").options, {
				originalValue: c.originalValue,
				disabled: c.disabled,
				readonly: c.readonly
			})
		},
		grid: function(b) {
			return a.data(b[0], "combogrid").grid
		},
		setValues: function(a, b) {
			return a.each(function() {
				d(this, b)
			})
		},
		setValue: function(a, b) {
			return a.each(function() {
				d(this, [b])
			})
		},
		clear: function(b) {
			return b.each(function() {
				a(this).combogrid("grid").datagrid("clearSelections"),
				a(this).combo("clear")
			})
		},
		reset: function(b) {
			return b.each(function() {
				var b = a(this).combogrid("options");
				b.multiple ? a(this).combogrid("setValues", b.originalValue) : a(this).combogrid("setValue", b.originalValue)
			})
		}
	},
	a.fn.combogrid.parseOptions = function(b) {
		var c = a(b);
		return a.extend({},
		a.fn.combo.parseOptions(b), a.fn.datagrid.parseOptions(b), a.parser.parseOptions(b, ["idField", "textField", "mode"]))
	},
	a.fn.combogrid.defaults = a.extend({},
	a.fn.combo.defaults, a.fn.datagrid.defaults, {
		loadMsg: null,
		idField: null,
		textField: null,
		mode: "local",
		keyHandler: {
			up: function(a) {
				c(this, "prev"),
				a.preventDefault()
			},
			down: function(a) {
				c(this, "next"),
				a.preventDefault()
			},
			left: function(a) {},
			right: function(a) {},
			enter: function(a) {
				f(this)
			},
			query: function(a, b) {
				e(this, a)
			}
		},
		filter: function(b, c) {
			var d = a(this).combogrid("options");
			return c[d.textField].toLowerCase().indexOf(b.toLowerCase()) == 0
		}
	})
} (jQuery),
function(a) {
	function b(b) {
		function f() {
			var f = a(b).combo("panel").css("overflow", "hidden");
			f.panel("options").onBeforeDestroy = function() {
				var b = a(this).find(".calendar-shared");
				b.length && b.insertBefore(b[0].pholder)
			};
			var g = a('<div class="datebox-calendar-inner"></div>').appendTo(f);
			if (d.sharedCalendar) {
				var h = a(d.sharedCalendar);
				h[0].pholder || (h[0].pholder = a('<div class="calendar-pholder" style="display:none"></div>').insertAfter(h)),
				h.addClass("calendar-shared").appendTo(g),
				h.hasClass("calendar") || h.calendar(),
				c.calendar = h
			} else c.calendar = a("<div></div>").appendTo(g).calendar();
			a.extend(c.calendar.calendar("options"), {
				fit: !0,
				border: !1,
				onSelect: function(c) {
					var d = a(this.target).datebox("options");
					e(this.target, d.formatter.call(this.target, c)),
					a(this.target).combo("hidePanel"),
					d.onSelect.call(b, c)
				}
			});
			var i = a('<div class="datebox-button"><table cellspacing="0" cellpadding="0" style="width:100%"><tr></tr></table></div>').appendTo(f),
			j = i.find("tr");
			for (var k = 0; k < d.buttons.length; k++) {
				var l = a("<td></td>").appendTo(j),
				m = d.buttons[k],
				n = a('<a href="javascript:void(0)"></a>').html(a.isFunction(m.text) ? m.text(b) : m.text).appendTo(l);
				n.bind("click", {
					target: b,
					handler: m.handler
				},
				function(a) {
					a.data.handler.call(this, a.data.target)
				})
			}
			j.find("td").css("width", 100 / d.buttons.length + "%")
		}
		function g() {
			var e = a(b).combo("panel"),
			f = e.children("div.datebox-calendar-inner");
			e.children()._outerWidth(e.width()),
			c.calendar.appendTo(f),
			c.calendar[0].target = b;
			if (d.panelHeight != "auto") {
				var g = e.height();
				e.children().not(f).each(function() {
					g -= a(this).outerHeight()
				}),
				f._outerHeight(g)
			}
			c.calendar.calendar("resize")
		}
		var c = a.data(b, "datebox"),
		d = c.options;
		a(b).addClass("datebox-f").combo(a.extend({},
		d, {
			onShowPanel: function() {
				g(),
				e(b, a(b).datebox("getText"), !0),
				d.onShowPanel.call(b)
			}
		})),
		a(b).combo("textbox").parent().addClass("datebox"),
		c.calendar || f(),
		e(b, d.value)
	}
	function c(a, b) {
		e(a, b, !0)
	}
	function d(b) {
		var c = a.data(b, "datebox"),
		d = c.options,
		f = c.calendar.calendar("options").current;
		f && (e(b, d.formatter.call(b, f)), a(b).combo("hidePanel"))
	}
	function e(b, c, d) {
		var e = a.data(b, "datebox"),
		f = e.options,
		g = e.calendar;
		a(b).combo("setValue", c),
		g.calendar("moveTo", f.parser.call(b, c)),
		d || (c ? (c = f.formatter.call(b, g.calendar("options").current), a(b).combo("setValue", c).combo("setText", c)) : a(b).combo("setText", c))
	}
	a.fn.datebox = function(c, d) {
		if (typeof c == "string") {
			var e = a.fn.datebox.methods[c];
			return e ? e(this, d) : this.combo(c, d)
		}
		return c = c || {},
		this.each(function() {
			var d = a.data(this, "datebox");
			d ? a.extend(d.options, c) : a.data(this, "datebox", {
				options: a.extend({},
				a.fn.datebox.defaults, a.fn.datebox.parseOptions(this), c)
			}),
			b(this)
		})
	},
	a.fn.datebox.methods = {
		options: function(b) {
			var c = b.combo("options");
			return a.extend(a.data(b[0], "datebox").options, {
				originalValue: c.originalValue,
				disabled: c.disabled,
				readonly: c.readonly
			})
		},
		calendar: function(b) {
			return a.data(b[0], "datebox").calendar
		},
		setValue: function(a, b) {
			return a.each(function() {
				e(this, b)
			})
		},
		reset: function(b) {
			return b.each(function() {
				var b = a(this).datebox("options");
				a(this).datebox("setValue", b.originalValue)
			})
		}
	},
	a.fn.datebox.parseOptions = function(b) {
		return a.extend({},
		a.fn.combo.parseOptions(b), a.parser.parseOptions(b, ["sharedCalendar"]))
	},
	a.fn.datebox.defaults = a.extend({},
	a.fn.combo.defaults, {
		panelWidth: 180,
		panelHeight: "auto",
		sharedCalendar: null,
		keyHandler: {
			up: function(a) {},
			down: function(a) {},
			left: function(a) {},
			right: function(a) {},
			enter: function(a) {
				d(this)
			},
			query: function(a, b) {
				c(this, a)
			}
		},
		currentText: "Today",
		closeText: "Close",
		okText: "Ok",
		buttons: [{
			text: function(b) {
				return a(b).datebox("options").currentText
			},
			handler: function(b) {
				a(b).datebox("calendar").calendar({
					year: (new Date).getFullYear(),
					month: (new Date).getMonth() + 1,
					current: new Date
				}),
				d(b)
			}
		},
		{
			text: function(b) {
				return a(b).datebox("options").closeText
			},
			handler: function(b) {
				a(this).closest("div.combo-panel").panel("close")
			}
		}],
		formatter: function(a) {
			var b = a.getFullYear(),
			c = a.getMonth() + 1,
			d = a.getDate();
			return c + "/" + d + "/" + b
		},
		parser: function(a) {
			var b = Date.parse(a);
			return isNaN(b) ? new Date: new Date(b)
		},
		onSelect: function(a) {}
	})
} (jQuery),
function(a) {
	function b(b) {
		var c = a.data(b, "datetimebox"),
		d = c.options;
		a(b).datebox(a.extend({},
		d, {
			onShowPanel: function() {
				var c = a(b).datetimebox("getValue");
				f(b, c, !0),
				d.onShowPanel.call(b)
			},
			formatter: a.fn.datebox.defaults.formatter,
			parser: a.fn.datebox.defaults.parser
		})),
		a(b).removeClass("datebox-f").addClass("datetimebox-f"),
		a(b).datebox("calendar").calendar({
			onSelect: function(a) {
				d.onSelect.call(b, a)
			}
		});
		var e = a(b).datebox("panel");
		if (!c.spinner) {
			var g = a('<div style="padding:2px"><input style="width:80px"></div>').insertAfter(e.children("div.datebox-calendar-inner"));
			c.spinner = g.children("input")
		}
		c.spinner.timespinner({
			showSeconds: d.showSeconds,
			separator: d.timeSeparator
		}).unbind(".datetimebox").bind("mousedown.datetimebox",
		function(a) {
			a.stopPropagation()
		}),
		f(b, d.value)
	}
	function c(b) {
		var c = a(b).datetimebox("calendar"),
		d = a(b).datetimebox("spinner"),
		e = c.calendar("options").current;
		return new Date(e.getFullYear(), e.getMonth(), e.getDate(), d.timespinner("getHours"), d.timespinner("getMinutes"), d.timespinner("getSeconds"))
	}
	function d(a, b) {
		f(a, b, !0)
	}
	function e(b) {
		var d = a.data(b, "datetimebox").options,
		e = c(b);
		f(b, d.formatter.call(b, e)),
		a(b).combo("hidePanel")
	}
	function f(b, c, d) {
		function g(c) {
			function d(a) {
				return (a < 10 ? "0": "") + a
			}
			var f = [d(c.getHours()), d(c.getMinutes())];
			return e.showSeconds && f.push(d(c.getSeconds())),
			f.join(a(b).datetimebox("spinner").timespinner("options").separator)
		}
		var e = a.data(b, "datetimebox").options;
		a(b).combo("setValue", c);
		if (!d) if (c) {
			var f = e.parser.call(b, c);
			a(b).combo("setValue", e.formatter.call(b, f)),
			a(b).combo("setText", e.formatter.call(b, f))
		} else a(b).combo("setText", c);
		var f = e.parser.call(b, c);
		a(b).datetimebox("calendar").calendar("moveTo", f),
		a(b).datetimebox("spinner").timespinner("setValue", g(f))
	}
	a.fn.datetimebox = function(c, d) {
		if (typeof c == "string") {
			var e = a.fn.datetimebox.methods[c];
			return e ? e(this, d) : this.datebox(c, d)
		}
		return c = c || {},
		this.each(function() {
			var d = a.data(this, "datetimebox");
			d ? a.extend(d.options, c) : a.data(this, "datetimebox", {
				options: a.extend({},
				a.fn.datetimebox.defaults, a.fn.datetimebox.parseOptions(this), c)
			}),
			b(this)
		})
	},
	a.fn.datetimebox.methods = {
		options: function(b) {
			var c = b.datebox("options");
			return a.extend(a.data(b[0], "datetimebox").options, {
				originalValue: c.originalValue,
				disabled: c.disabled,
				readonly: c.readonly
			})
		},
		spinner: function(b) {
			return a.data(b[0], "datetimebox").spinner
		},
		setValue: function(a, b) {
			return a.each(function() {
				f(this, b)
			})
		},
		reset: function(b) {
			return b.each(function() {
				var b = a(this).datetimebox("options");
				a(this).datetimebox("setValue", b.originalValue)
			})
		}
	},
	a.fn.datetimebox.parseOptions = function(b) {
		var c = a(b);
		return a.extend({},
		a.fn.datebox.parseOptions(b), a.parser.parseOptions(b, ["timeSeparator", {
			showSeconds: "boolean"
		}]))
	},
	a.fn.datetimebox.defaults = a.extend({},
	a.fn.datebox.defaults, {
		showSeconds: !0,
		timeSeparator: ":",
		keyHandler: {
			up: function(a) {},
			down: function(a) {},
			left: function(a) {},
			right: function(a) {},
			enter: function(a) {
				e(this)
			},
			query: function(a, b) {
				d(this, a)
			}
		},
		buttons: [{
			text: function(b) {
				return a(b).datetimebox("options").currentText
			},
			handler: function(b) {
				a(b).datetimebox("calendar").calendar({
					year: (new Date).getFullYear(),
					month: (new Date).getMonth() + 1,
					current: new Date
				}),
				e(b)
			}
		},
		{
			text: function(b) {
				return a(b).datetimebox("options").okText
			},
			handler: function(a) {
				e(a)
			}
		},
		{
			text: function(b) {
				return a(b).datetimebox("options").closeText
			},
			handler: function(b) {
				a(this).closest("div.combo-panel").panel("close")
			}
		}],
		formatter: function(b) {
			function f(a) {
				return (a < 10 ? "0": "") + a
			}
			var c = b.getHours(),
			d = b.getMinutes(),
			e = b.getSeconds(),
			g = a(this).datetimebox("spinner").timespinner("options").separator,
			h = a.fn.datebox.defaults.formatter(b) + " " + f(c) + g + f(d);
			return a(this).datetimebox("options").showSeconds && (h += g + f(e)),
			h
		},
		parser: function(b) {
			if (a.trim(b) == "") return new Date;
			var c = b.split(" "),
			d = a.fn.datebox.defaults.parser(c[0]);
			if (c.length < 2) return d;
			var e = a(this).datetimebox("spinner").timespinner("options").separator,
			f = c[1].split(e),
			g = parseInt(f[0], 10) || 0,
			h = parseInt(f[1], 10) || 0,
			i = parseInt(f[2], 10) || 0;
			return new Date(d.getFullYear(), d.getMonth(), d.getDate(), g, h, i)
		}
	})
} (jQuery),
function($) {
	function init(a) {
		var b = $('<div class="slider"><div class="slider-inner"><a href="javascript:void(0)" class="slider-handle"></a><span class="slider-tip"></span></div><div class="slider-rule"></div><div class="slider-rulelabel"></div><div style="clear:both"></div><input type="hidden" class="slider-value"></div>').insertAfter(a),
		c = $(a);
		c.addClass("slider-f").hide();
		var d = c.attr("name");
		return d && (b.find("input.slider-value").attr("name", d), c.removeAttr("name").attr("sliderName", d)),
		b
	}
	function _970(a, b) {
		var c = $.data(a, "slider"),
		d = c.options,
		e = c.slider;
		b && (b.width && (d.width = b.width), b.height && (d.height = b.height)),
		d.mode == "h" ? (e.css("height", ""), e.children("div").css("height", ""), isNaN(d.width) || e.width(d.width)) : (e.css("width", ""), e.children("div").css("width", ""), isNaN(d.height) || (e.height(d.height), e.find("div.slider-rule").height(d.height), e.find("div.slider-rulelabel").height(d.height), e.find("div.slider-inner")._outerHeight(d.height))),
		_975(a)
	}
	function _976(a) {
		function f(a) {
			var b = d.find("div.slider-rule"),
			e = d.find("div.slider-rulelabel");
			b.empty(),
			e.empty();
			for (var f = 0; f < a.length; f++) {
				var g = f * 100 / (a.length - 1) + "%",
				h = $("<span></span>").appendTo(b);
				h.css(c.mode == "h" ? "left": "top", g),
				a[f] != "|" && (h = $("<span></span>").appendTo(e), h.html(a[f]), c.mode == "h" ? h.css({
					left: g,
					marginLeft: -Math.round(h.outerWidth() / 2)
				}) : h.css({
					top: g,
					marginTop: -Math.round(h.outerHeight() / 2)
				}))
			}
		}
		var b = $.data(a, "slider"),
		c = b.options,
		d = b.slider,
		e = c.mode == "h" ? c.rule: c.rule.slice(0).reverse();
		c.reversed && (e = e.slice(0).reverse()),
		f(e)
	}
	function _97d(a) {
		function e(b) {
			var d = Math.abs(b % c.step);
			d < c.step / 2 ? b -= d: b = b - d + c.step,
			_987(a, b)
		}
		var b = $.data(a, "slider"),
		c = b.options,
		d = b.slider;
		d.removeClass("slider-h slider-v slider-disabled"),
		d.addClass(c.mode == "h" ? "slider-h": "slider-v"),
		d.addClass(c.disabled ? "slider-disabled": ""),
		d.find("a.slider-handle").draggable({
			axis: c.mode,
			cursor: "pointer",
			disabled: c.disabled,
			onDrag: function(b) {
				var f = b.data.left,
				g = d.width();
				c.mode != "h" && (f = b.data.top, g = d.height());
				if (f < 0 || f > g) return ! 1;
				var h = _994(a, f);
				return e(h),
				!1
			},
			onBeforeDrag: function() {
				b.isDragging = !0
			},
			onStartDrag: function() {
				c.onSlideStart.call(a, c.value)
			},
			onStopDrag: function(d) {
				var f = _994(a, c.mode == "h" ? d.data.left: d.data.top);
				e(f),
				c.onSlideEnd.call(a, c.value),
				c.onComplete.call(a, c.value),
				b.isDragging = !1
			}
		}),
		d.find("div.slider-inner").unbind(".slider").bind("mousedown.slider",
		function(d) {
			if (b.isDragging) return;
			var f = $(this).offset(),
			g = _994(a, c.mode == "h" ? d.pageX - f.left: d.pageY - f.top);
			e(g),
			c.onComplete.call(a, c.value)
		})
	}
	function _987(a, b) {
		var c = $.data(a, "slider"),
		d = c.options,
		e = c.slider,
		f = d.value;
		b < d.min && (b = d.min),
		b > d.max && (b = d.max),
		d.value = b,
		$(a).val(b),
		e.find("input.slider-value").val(b);
		var g = _98d(a, b),
		h = e.find(".slider-tip");
		d.showTip ? (h.show(), h.html(d.tipFormatter.call(a, d.value))) : h.hide();
		if (d.mode == "h") {
			var i = "left:" + g + "px;";
			e.find(".slider-handle").attr("style", i),
			h.attr("style", i + "margin-left:" + -Math.round(h.outerWidth() / 2) + "px")
		} else {
			var i = "top:" + g + "px;";
			e.find(".slider-handle").attr("style", i),
			h.attr("style", i + "margin-left:" + -Math.round(h.outerWidth()) + "px")
		}
		f != b && d.onChange.call(a, b, f)
	}
	function _975(a) {
		var b = $.data(a, "slider").options,
		c = b.onChange;
		b.onChange = function() {},
		_987(a, b.value),
		b.onChange = c
	}
	function _98d(a, b) {
		var c = $.data(a, "slider"),
		d = c.options,
		e = c.slider,
		f = d.mode == "h" ? e.width() : e.height(),
		g = d.converter.toPosition.call(a, b, f);
		return d.mode == "v" && (g = e.height() - g),
		d.reversed && (g = f - g),
		g.toFixed(0)
	}
	function _994(a, b) {
		var c = $.data(a, "slider"),
		d = c.options,
		e = c.slider,
		f = d.mode == "h" ? e.width() : e.height(),
		g = d.converter.toValue.call(a, d.mode == "h" ? d.reversed ? f - b: b: f - b, f);
		return g.toFixed(0)
	}
	$.fn.slider = function(a, b) {
		return typeof a == "string" ? $.fn.slider.methods[a](this, b) : (a = a || {},
		this.each(function() {
			var b = $.data(this, "slider");
			b ? $.extend(b.options, a) : (b = $.data(this, "slider", {
				options: $.extend({},
				$.fn.slider.defaults, $.fn.slider.parseOptions(this), a),
				slider: init(this)
			}), $(this).removeAttr("disabled"));
			var c = b.options;
			c.min = parseFloat(c.min),
			c.max = parseFloat(c.max),
			c.value = parseFloat(c.value),
			c.step = parseFloat(c.step),
			c.originalValue = c.value,
			_97d(this),
			_976(this),
			_970(this)
		}))
	},
	$.fn.slider.methods = {
		options: function(a) {
			return $.data(a[0], "slider").options
		},
		destroy: function(a) {
			return a.each(function() {
				$.data(this, "slider").slider.remove(),
				$(this).remove()
			})
		},
		resize: function(a, b) {
			return a.each(function() {
				_970(this, b)
			})
		},
		getValue: function(a) {
			return a.slider("options").value
		},
		setValue: function(a, b) {
			return a.each(function() {
				_987(this, b)
			})
		},
		clear: function(a) {
			return a.each(function() {
				var a = $(this).slider("options");
				_987(this, a.min)
			})
		},
		reset: function(a) {
			return a.each(function() {
				var a = $(this).slider("options");
				_987(this, a.originalValue)
			})
		},
		enable: function(a) {
			return a.each(function() {
				$.data(this, "slider").options.disabled = !1,
				_97d(this)
			})
		},
		disable: function(a) {
			return a.each(function() {
				$.data(this, "slider").options.disabled = !0,
				_97d(this)
			})
		}
	},
	$.fn.slider.parseOptions = function(_99e) {
		var t = $(_99e);
		return $.extend({},
		$.parser.parseOptions(_99e, ["width", "height", "mode", {
			reversed: "boolean",
			showTip: "boolean",
			min: "number",
			max: "number",
			step: "number"
		}]), {
			value: t.val() || undefined,
			disabled: t.attr("disabled") ? !0 : undefined,
			rule: t.attr("rule") ? eval(t.attr("rule")) : undefined
		})
	},
	$.fn.slider.defaults = {
		width: "auto",
		height: "auto",
		mode: "h",
		reversed: !1,
		showTip: !1,
		disabled: !1,
		value: 0,
		min: 0,
		max: 100,
		step: 1,
		rule: [],
		tipFormatter: function(a) {
			return a
		},
		converter: {
			toPosition: function(a, b) {
				var c = $(this).slider("options");
				return (a - c.min) / (c.max - c.min) * b
			},
			toValue: function(a, b) {
				var c = $(this).slider("options");
				return c.min + (c.max - c.min) * (a / b)
			}
		},
		onChange: function(a, b) {},
		onSlideStart: function(a) {},
		onSlideEnd: function(a) {},
		onComplete: function(a) {}
	}
} (jQuery)